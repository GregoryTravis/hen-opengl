(fun (glutGameModeGet mode) (Command 'glutGameModeGet ($ mode)))
(fun (glutLeaveGameMode) (Command 'glutLeaveGameMode ($)))
(fun (glutEnterGameMode) (Command 'glutEnterGameMode ($)))
(fun (glutGameModeString string) (Command 'glutGameModeString ($ string)))
(fun (glutForceJoystickFunc) (Command 'glutForceJoystickFunc ($)))
(fun (glutSetKeyRepeat repeatMode) (Command 'glutSetKeyRepeat ($ repeatMode)))
(fun (glutIgnoreKeyRepeat ignore) (Command 'glutIgnoreKeyRepeat ($ ignore)))
(fun (glutReportErrors) (Command 'glutReportErrors ($)))
(fun (glutVideoPan x y width height) (Command 'glutVideoPan ($ x y width height)))
(fun (glutVideoResize x y width height) (Command 'glutVideoResize ($ x y width height)))
(fun (glutStopVideoResizing) (Command 'glutStopVideoResizing ($)))
(fun (glutSetupVideoResizing) (Command 'glutSetupVideoResizing ($)))
(fun (glutVideoResizeGet param) (Command 'glutVideoResizeGet ($ param)))
(fun (glutSolidIcosahedron) (Command 'glutSolidIcosahedron ($)))
(fun (glutWireIcosahedron) (Command 'glutWireIcosahedron ($)))
(fun (glutSolidTetrahedron) (Command 'glutSolidTetrahedron ($)))
(fun (glutWireTetrahedron) (Command 'glutWireTetrahedron ($)))
(fun (glutSolidOctahedron) (Command 'glutSolidOctahedron ($)))
(fun (glutWireOctahedron) (Command 'glutWireOctahedron ($)))
(fun (glutSolidTeapot size) (Command 'glutSolidTeapot ($ size)))
(fun (glutWireTeapot size) (Command 'glutWireTeapot ($ size)))
(fun (glutSolidDodecahedron) (Command 'glutSolidDodecahedron ($)))
(fun (glutWireDodecahedron) (Command 'glutWireDodecahedron ($)))
(fun (glutSolidTorus innerRadius outerRadius sides rings) (Command 'glutSolidTorus ($ innerRadius outerRadius sides rings)))
(fun (glutWireTorus innerRadius outerRadius sides rings) (Command 'glutWireTorus ($ innerRadius outerRadius sides rings)))
(fun (glutSolidCube size) (Command 'glutSolidCube ($ size)))
(fun (glutWireCube size) (Command 'glutWireCube ($ size)))
(fun (glutSolidCone base height slices stacks) (Command 'glutSolidCone ($ base height slices stacks)))
(fun (glutWireCone base height slices stacks) (Command 'glutWireCone ($ base height slices stacks)))
(fun (glutSolidSphere radius slices stacks) (Command 'glutSolidSphere ($ radius slices stacks)))
(fun (glutWireSphere radius slices stacks) (Command 'glutWireSphere ($ radius slices stacks)))
(fun (glutStrokeLength font string) (Command 'glutStrokeLength ($ font string)))
(fun (glutBitmapLength font string) (Command 'glutBitmapLength ($ font string)))
(fun (glutStrokeWidth font character) (Command 'glutStrokeWidth ($ font character)))
(fun (glutStrokeCharacter font character) (Command 'glutStrokeCharacter ($ font character)))
(fun (glutBitmapWidth font character) (Command 'glutBitmapWidth ($ font character)))
(fun (glutBitmapCharacter font character) (Command 'glutBitmapCharacter ($ font character)))
(fun (glutGetProcAddress procName) (Command 'glutGetProcAddress ($ procName)))
(fun (glutLayerGet type) (Command 'glutLayerGet ($ type)))
(fun (glutGetModifiers) (Command 'glutGetModifiers ($)))
(fun (glutExtensionSupported name) (Command 'glutExtensionSupported ($ name)))
(fun (glutDeviceGet type) (Command 'glutDeviceGet ($ type)))
(fun (glutGet type) (Command 'glutGet ($ type)))
(fun (glutCopyColormap win) (Command 'glutCopyColormap ($ win)))
(fun (glutGetColor ndx component) (Command 'glutGetColor ($ ndx component)))
(fun (glutSetColor anonp0 red green blue) (Command 'glutSetColor ($ anonp0 red green blue)))
(fun (glutJoystickFunc func pollInterval) (Command 'glutJoystickFunc ($ func pollInterval)))
(fun (glutSpecialUpFunc func) (Command 'glutSpecialUpFunc ($ func)))
(fun (glutKeyboardUpFunc func) (Command 'glutKeyboardUpFunc ($ func)))
(fun (glutWindowStatusFunc func) (Command 'glutWindowStatusFunc ($ func)))
(fun (glutOverlayDisplayFunc func) (Command 'glutOverlayDisplayFunc ($ func)))
(fun (glutMenuStatusFunc func) (Command 'glutMenuStatusFunc ($ func)))
(fun (glutTabletButtonFunc func) (Command 'glutTabletButtonFunc ($ func)))
(fun (glutTabletMotionFunc func) (Command 'glutTabletMotionFunc ($ func)))
(fun (glutDialsFunc func) (Command 'glutDialsFunc ($ func)))
(fun (glutButtonBoxFunc func) (Command 'glutButtonBoxFunc ($ func)))
(fun (glutSpaceballButtonFunc func) (Command 'glutSpaceballButtonFunc ($ func)))
(fun (glutSpaceballRotateFunc func) (Command 'glutSpaceballRotateFunc ($ func)))
(fun (glutSpaceballMotionFunc func) (Command 'glutSpaceballMotionFunc ($ func)))
(fun (glutSpecialFunc func) (Command 'glutSpecialFunc ($ func)))
(fun (glutMenuStateFunc func) (Command 'glutMenuStateFunc ($ func)))
(fun (glutTimerFunc millis func value) (Command 'glutTimerFunc ($ millis func value)))
(fun (glutIdleFunc func) (Command 'glutIdleFunc ($ func)))
(fun (glutVisibilityFunc func) (Command 'glutVisibilityFunc ($ func)))
(fun (glutEntryFunc func) (Command 'glutEntryFunc ($ func)))
(fun (glutPassiveMotionFunc func) (Command 'glutPassiveMotionFunc ($ func)))
(fun (glutMotionFunc func) (Command 'glutMotionFunc ($ func)))
(fun (glutMouseFunc func) (Command 'glutMouseFunc ($ func)))
(fun (glutKeyboardFunc func) (Command 'glutKeyboardFunc ($ func)))
(fun (glutReshapeFunc func) (Command 'glutReshapeFunc ($ func)))
(fun (glutDisplayFunc func) (Command 'glutDisplayFunc ($ func)))
(fun (glutDetachMenu button) (Command 'glutDetachMenu ($ button)))
(fun (glutAttachMenu button) (Command 'glutAttachMenu ($ button)))
(fun (glutRemoveMenuItem item) (Command 'glutRemoveMenuItem ($ item)))
(fun (glutChangeToSubMenu item label submenu) (Command 'glutChangeToSubMenu ($ item label submenu)))
(fun (glutChangeToMenuEntry item label value) (Command 'glutChangeToMenuEntry ($ item label value)))
(fun (glutAddSubMenu label submenu) (Command 'glutAddSubMenu ($ label submenu)))
(fun (glutAddMenuEntry label value) (Command 'glutAddMenuEntry ($ label value)))
(fun (glutSetMenu menu) (Command 'glutSetMenu ($ menu)))
(fun (glutGetMenu) (Command 'glutGetMenu ($)))
(fun (glutDestroyMenu menu) (Command 'glutDestroyMenu ($ menu)))
(fun (glutCreateMenu anonp80) (Command 'glutCreateMenu ($ anonp80)))
(fun (glutHideOverlay) (Command 'glutHideOverlay ($)))
(fun (glutShowOverlay) (Command 'glutShowOverlay ($)))
(fun (glutPostWindowOverlayRedisplay win) (Command 'glutPostWindowOverlayRedisplay ($ win)))
(fun (glutPostOverlayRedisplay) (Command 'glutPostOverlayRedisplay ($)))
(fun (glutUseLayer layer) (Command 'glutUseLayer ($ layer)))
(fun (glutRemoveOverlay) (Command 'glutRemoveOverlay ($)))
(fun (glutEstablishOverlay) (Command 'glutEstablishOverlay ($)))
(fun (glutCheckLoop) (Command 'glutCheckLoop ($)))
(fun (glutWMCloseFunc func) (Command 'glutWMCloseFunc ($ func)))
(fun (glutSurfaceTexture target internalformat surfacewin) (Command 'glutSurfaceTexture ($ target internalformat surfacewin)))
(fun (glutWarpPointer x y) (Command 'glutWarpPointer ($ x y)))
(fun (glutSetCursor cursor) (Command 'glutSetCursor ($ cursor)))
(fun (glutFullScreen) (Command 'glutFullScreen ($)))
(fun (glutHideWindow) (Command 'glutHideWindow ($)))
(fun (glutShowWindow) (Command 'glutShowWindow ($)))
(fun (glutIconifyWindow) (Command 'glutIconifyWindow ($)))
(fun (glutPushWindow) (Command 'glutPushWindow ($)))
(fun (glutPopWindow) (Command 'glutPopWindow ($)))
(fun (glutReshapeWindow width height) (Command 'glutReshapeWindow ($ width height)))
(fun (glutPositionWindow x y) (Command 'glutPositionWindow ($ x y)))
(fun (glutSetIconTitle title) (Command 'glutSetIconTitle ($ title)))
(fun (glutSetWindowTitle title) (Command 'glutSetWindowTitle ($ title)))
(fun (glutSetWindow win) (Command 'glutSetWindow ($ win)))
(fun (glutGetWindow) (Command 'glutGetWindow ($)))
(fun (glutSwapBuffers) (Command 'glutSwapBuffers ($)))
(fun (glutPostWindowRedisplay win) (Command 'glutPostWindowRedisplay ($ win)))
(fun (glutPostRedisplay) (Command 'glutPostRedisplay ($)))
(fun (glutDestroyWindow win) (Command 'glutDestroyWindow ($ win)))
(fun (glutCreateSubWindow win x y width height) (Command 'glutCreateSubWindow ($ win x y width height)))
(fun (glutCreateWindow title) (Command 'glutCreateWindow ($ title)))
(fun (glutMainLoop) (Command 'glutMainLoop ($)))
(fun (glutInitWindowSize width height) (Command 'glutInitWindowSize ($ width height)))
(fun (glutInitWindowPosition x y) (Command 'glutInitWindowPosition ($ x y)))
(fun (glutInitDisplayString string) (Command 'glutInitDisplayString ($ string)))
(fun (glutInitDisplayMode mode) (Command 'glutInitDisplayMode ($ mode)))
(fun (glutInit argcp argv) (Command 'glutInit ($ argcp argv)))
(fun (gluUnProject4 winX winY winZ clipW model proj view nearPlane farPlane objX objY objZ objW) (Command 'gluUnProject4 ($ winX winY winZ clipW model proj view nearPlane farPlane objX objY objZ objW)))
(fun (gluUnProject winX winY winZ model proj view objX objY objZ) (Command 'gluUnProject ($ winX winY winZ model proj view objX objY objZ)))
(fun (gluTessVertex tess location data) (Command 'gluTessVertex ($ tess location data)))
(fun (gluTessProperty tess which data) (Command 'gluTessProperty ($ tess which data)))
(fun (gluTessNormal tess valueX valueY valueZ) (Command 'gluTessNormal ($ tess valueX valueY valueZ)))
(fun (gluTessEndPolygon tess) (Command 'gluTessEndPolygon ($ tess)))
(fun (gluTessEndContour tess) (Command 'gluTessEndContour ($ tess)))
(fun (gluTessCallback tess which CallBackFunc) (Command 'gluTessCallback ($ tess which CallBackFunc)))
(fun (gluTessBeginPolygon tess data) (Command 'gluTessBeginPolygon ($ tess data)))
(fun (gluTessBeginContour tess) (Command 'gluTessBeginContour ($ tess)))
(fun (gluSphere quad radius slices stacks) (Command 'gluSphere ($ quad radius slices stacks)))
(fun (gluScaleImage format wIn hIn typeIn dataIn wOut hOut typeOut dataOut) (Command 'gluScaleImage ($ format wIn hIn typeIn dataIn wOut hOut typeOut dataOut)))
(fun (gluQuadricTexture quad texture) (Command 'gluQuadricTexture ($ quad texture)))
(fun (gluQuadricOrientation quad orientation) (Command 'gluQuadricOrientation ($ quad orientation)))
(fun (gluQuadricNormals quad normal) (Command 'gluQuadricNormals ($ quad normal)))
(fun (gluQuadricDrawStyle quad draw) (Command 'gluQuadricDrawStyle ($ quad draw)))
(fun (gluQuadricCallback quad which CallBackFunc) (Command 'gluQuadricCallback ($ quad which CallBackFunc)))
(fun (gluPwlCurve nurb count data stride type) (Command 'gluPwlCurve ($ nurb count data stride type)))
(fun (gluProject objX objY objZ model proj view winX winY winZ) (Command 'gluProject ($ objX objY objZ model proj view winX winY winZ)))
(fun (gluPickMatrix x y delX delY viewport) (Command 'gluPickMatrix ($ x y delX delY viewport)))
(fun (gluPerspective fovy aspect zNear zFar) (Command 'gluPerspective ($ fovy aspect zNear zFar)))
(fun (gluPartialDisk quad inner outer slices loops start sweep) (Command 'gluPartialDisk ($ quad inner outer slices loops start sweep)))
(fun (gluOrtho2D left right bottom top) (Command 'gluOrtho2D ($ left right bottom top)))
(fun (gluNurbsSurface nurb sKnotCount sKnots tKnotCount tKnots sStride tStride control sOrder tOrder type) (Command 'gluNurbsSurface ($ nurb sKnotCount sKnots tKnotCount tKnots sStride tStride control sOrder tOrder type)))
(fun (gluNurbsProperty nurb property value) (Command 'gluNurbsProperty ($ nurb property value)))
(fun (gluNurbsCurve nurb knotCount knots stride control order type) (Command 'gluNurbsCurve ($ nurb knotCount knots stride control order type)))
(fun (gluNurbsCallbackData nurb userData) (Command 'gluNurbsCallbackData ($ nurb userData)))
(fun (gluNurbsCallback nurb which CallBackFunc) (Command 'gluNurbsCallback ($ nurb which CallBackFunc)))
(fun (gluNextContour tess type) (Command 'gluNextContour ($ tess type)))
(fun (gluNewTess) (Command 'gluNewTess ($)))
(fun (gluNewQuadric) (Command 'gluNewQuadric ($)))
(fun (gluNewNurbsRenderer) (Command 'gluNewNurbsRenderer ($)))
(fun (gluLookAt eyeX eyeY eyeZ centerX centerY centerZ upX upY upZ) (Command 'gluLookAt ($ eyeX eyeY eyeZ centerX centerY centerZ upX upY upZ)))
(fun (gluLoadSamplingMatrices nurb model perspective view) (Command 'gluLoadSamplingMatrices ($ nurb model perspective view)))
(fun (gluGetTessProperty tess which data) (Command 'gluGetTessProperty ($ tess which data)))
(fun (gluGetString name) (Command 'gluGetString ($ name)))
(fun (gluGetNurbsProperty nurb property data) (Command 'gluGetNurbsProperty ($ nurb property data)))
(fun (gluErrorString error) (Command 'gluErrorString ($ error)))
(fun (gluEndTrim nurb) (Command 'gluEndTrim ($ nurb)))
(fun (gluEndSurface nurb) (Command 'gluEndSurface ($ nurb)))
(fun (gluEndPolygon tess) (Command 'gluEndPolygon ($ tess)))
(fun (gluEndCurve nurb) (Command 'gluEndCurve ($ nurb)))
(fun (gluDisk quad inner outer slices loops) (Command 'gluDisk ($ quad inner outer slices loops)))
(fun (gluDeleteTess tess) (Command 'gluDeleteTess ($ tess)))
(fun (gluDeleteQuadric quad) (Command 'gluDeleteQuadric ($ quad)))
(fun (gluDeleteNurbsRenderer nurb) (Command 'gluDeleteNurbsRenderer ($ nurb)))
(fun (gluCylinder quad base top height slices stacks) (Command 'gluCylinder ($ quad base top height slices stacks)))
(fun (gluCheckExtension extName extString) (Command 'gluCheckExtension ($ extName extString)))
(fun (gluBuild3DMipmaps target internalFormat width height depth format type data) (Command 'gluBuild3DMipmaps ($ target internalFormat width height depth format type data)))
(fun (gluBuild3DMipmapLevels target internalFormat width height depth format type level base max data) (Command 'gluBuild3DMipmapLevels ($ target internalFormat width height depth format type level base max data)))
(fun (gluBuild2DMipmaps target internalFormat width height format type data) (Command 'gluBuild2DMipmaps ($ target internalFormat width height format type data)))
(fun (gluBuild2DMipmapLevels target internalFormat width height format type level base max data) (Command 'gluBuild2DMipmapLevels ($ target internalFormat width height format type level base max data)))
(fun (gluBuild1DMipmaps target internalFormat width format type data) (Command 'gluBuild1DMipmaps ($ target internalFormat width format type data)))
(fun (gluBuild1DMipmapLevels target internalFormat width format type level base max data) (Command 'gluBuild1DMipmapLevels ($ target internalFormat width format type level base max data)))
(fun (gluBeginTrim nurb) (Command 'gluBeginTrim ($ nurb)))
(fun (gluBeginSurface nurb) (Command 'gluBeginSurface ($ nurb)))
(fun (gluBeginPolygon tess) (Command 'gluBeginPolygon ($ tess)))
(fun (gluBeginCurve nurb) (Command 'gluBeginCurve ($ nurb)))
(fun (_GLeeEnabled extensionQueryingVariable) (Command '_GLeeEnabled ($ extensionQueryingVariable)))
(fun (_GLeeGetExtStrGL) (Command '_GLeeGetExtStrGL ($)))
(fun (_GLeeGetErrorString) (Command '_GLeeGetErrorString ($)))
(fun (_GLeeForceLink extensionName) (Command '_GLeeForceLink ($ extensionName)))
(fun (_GLeeInit) (Command '_GLeeInit ($)))
(fun (glUniformMatrix4x3fv location count transpose value) (Command 'glUniformMatrix4x3fv ($ location count transpose value)))
(fun (glUniformMatrix3x4fv location count transpose value) (Command 'glUniformMatrix3x4fv ($ location count transpose value)))
(fun (glUniformMatrix4x2fv location count transpose value) (Command 'glUniformMatrix4x2fv ($ location count transpose value)))
(fun (glUniformMatrix2x4fv location count transpose value) (Command 'glUniformMatrix2x4fv ($ location count transpose value)))
(fun (glUniformMatrix3x2fv location count transpose value) (Command 'glUniformMatrix3x2fv ($ location count transpose value)))
(fun (glUniformMatrix2x3fv location count transpose value) (Command 'glUniformMatrix2x3fv ($ location count transpose value)))
(fun (glStencilMaskSeparate face mask) (Command 'glStencilMaskSeparate ($ face mask)))
(fun (glStencilOpSeparate face fail zfail zpass) (Command 'glStencilOpSeparate ($ face fail zfail zpass)))
(fun (glStencilFuncSeparate face func ref mask) (Command 'glStencilFuncSeparate ($ face func ref mask)))
(fun (glGetAttribLocation program name) (Command 'glGetAttribLocation ($ program name)))
(fun (glGetActiveAttrib program index bufSize length size type name) (Command 'glGetActiveAttrib ($ program index bufSize length size type name)))
(fun (glBindAttribLocation program index name) (Command 'glBindAttribLocation ($ program index name)))
(fun (glGetShaderSource shader bufSize length source) (Command 'glGetShaderSource ($ shader bufSize length source)))
(fun (glGetUniformiv program location params) (Command 'glGetUniformiv ($ program location params)))
(fun (glGetUniformfv program location params) (Command 'glGetUniformfv ($ program location params)))
(fun (glGetActiveUniform program index bufSize length size type name) (Command 'glGetActiveUniform ($ program index bufSize length size type name)))
(fun (glGetUniformLocation program name) (Command 'glGetUniformLocation ($ program name)))
(fun (glGetProgramInfoLog program bufSize length infoLog) (Command 'glGetProgramInfoLog ($ program bufSize length infoLog)))
(fun (glGetShaderInfoLog shader bufSize length infoLog) (Command 'glGetShaderInfoLog ($ shader bufSize length infoLog)))
(fun (glGetAttachedShaders program maxCount count shaders) (Command 'glGetAttachedShaders ($ program maxCount count shaders)))
(fun (glGetProgramiv program pname params) (Command 'glGetProgramiv ($ program pname params)))
(fun (glGetShaderiv shader pname params) (Command 'glGetShaderiv ($ shader pname params)))
(fun (glIsProgram program) (Command 'glIsProgram ($ program)))
(fun (glIsShader shader) (Command 'glIsShader ($ shader)))
(fun (glUniformMatrix4fv location count transpose value) (Command 'glUniformMatrix4fv ($ location count transpose value)))
(fun (glUniformMatrix3fv location count transpose value) (Command 'glUniformMatrix3fv ($ location count transpose value)))
(fun (glUniformMatrix2fv location count transpose value) (Command 'glUniformMatrix2fv ($ location count transpose value)))
(fun (glUniform4iv location count value) (Command 'glUniform4iv ($ location count value)))
(fun (glUniform3iv location count value) (Command 'glUniform3iv ($ location count value)))
(fun (glUniform2iv location count value) (Command 'glUniform2iv ($ location count value)))
(fun (glUniform1iv location count value) (Command 'glUniform1iv ($ location count value)))
(fun (glUniform4fv location count value) (Command 'glUniform4fv ($ location count value)))
(fun (glUniform3fv location count value) (Command 'glUniform3fv ($ location count value)))
(fun (glUniform2fv location count value) (Command 'glUniform2fv ($ location count value)))
(fun (glUniform1fv location count value) (Command 'glUniform1fv ($ location count value)))
(fun (glUniform4i location v0 v1 v2 v3) (Command 'glUniform4i ($ location v0 v1 v2 v3)))
(fun (glUniform3i location v0 v1 v2) (Command 'glUniform3i ($ location v0 v1 v2)))
(fun (glUniform2i location v0 v1) (Command 'glUniform2i ($ location v0 v1)))
(fun (glUniform1i location v0) (Command 'glUniform1i ($ location v0)))
(fun (glUniform4f location v0 v1 v2 v3) (Command 'glUniform4f ($ location v0 v1 v2 v3)))
(fun (glUniform3f location v0 v1 v2) (Command 'glUniform3f ($ location v0 v1 v2)))
(fun (glUniform2f location v0 v1) (Command 'glUniform2f ($ location v0 v1)))
(fun (glUniform1f location v0) (Command 'glUniform1f ($ location v0)))
(fun (glValidateProgram program) (Command 'glValidateProgram ($ program)))
(fun (glDeleteProgram program) (Command 'glDeleteProgram ($ program)))
(fun (glUseProgram program) (Command 'glUseProgram ($ program)))
(fun (glLinkProgram program) (Command 'glLinkProgram ($ program)))
(fun (glAttachShader program shader) (Command 'glAttachShader ($ program shader)))
(fun (glCreateProgram) (Command 'glCreateProgram ($)))
(fun (glCompileShader shader) (Command 'glCompileShader ($ shader)))
(fun (glShaderSource shader count string length) (Command 'glShaderSource ($ shader count string length)))
(fun (glCreateShader type) (Command 'glCreateShader ($ type)))
(fun (glDetachShader program shader) (Command 'glDetachShader ($ program shader)))
(fun (glDeleteShader shader) (Command 'glDeleteShader ($ shader)))
(fun (glGetVertexAttribPointerv index pname pointer) (Command 'glGetVertexAttribPointerv ($ index pname pointer)))
(fun (glGetVertexAttribiv index pname params) (Command 'glGetVertexAttribiv ($ index pname params)))
(fun (glGetVertexAttribfv index pname params) (Command 'glGetVertexAttribfv ($ index pname params)))
(fun (glGetVertexAttribdv index pname params) (Command 'glGetVertexAttribdv ($ index pname params)))
(fun (glDisableVertexAttribArray index) (Command 'glDisableVertexAttribArray ($ index)))
(fun (glEnableVertexAttribArray index) (Command 'glEnableVertexAttribArray ($ index)))
(fun (glVertexAttribPointer index size type normalized stride pointer) (Command 'glVertexAttribPointer ($ index size type normalized stride pointer)))
(fun (glVertexAttrib4usv index v) (Command 'glVertexAttrib4usv ($ index v)))
(fun (glVertexAttrib4uiv index v) (Command 'glVertexAttrib4uiv ($ index v)))
(fun (glVertexAttrib4ubv index v) (Command 'glVertexAttrib4ubv ($ index v)))
(fun (glVertexAttrib4sv index v) (Command 'glVertexAttrib4sv ($ index v)))
(fun (glVertexAttrib4s index x y z w) (Command 'glVertexAttrib4s ($ index x y z w)))
(fun (glVertexAttrib4iv index v) (Command 'glVertexAttrib4iv ($ index v)))
(fun (glVertexAttrib4fv index v) (Command 'glVertexAttrib4fv ($ index v)))
(fun (glVertexAttrib4f index x y z w) (Command 'glVertexAttrib4f ($ index x y z w)))
(fun (glVertexAttrib4dv index v) (Command 'glVertexAttrib4dv ($ index v)))
(fun (glVertexAttrib4d index x y z w) (Command 'glVertexAttrib4d ($ index x y z w)))
(fun (glVertexAttrib4bv index v) (Command 'glVertexAttrib4bv ($ index v)))
(fun (glVertexAttrib4Nusv index v) (Command 'glVertexAttrib4Nusv ($ index v)))
(fun (glVertexAttrib4Nuiv index v) (Command 'glVertexAttrib4Nuiv ($ index v)))
(fun (glVertexAttrib4Nubv index v) (Command 'glVertexAttrib4Nubv ($ index v)))
(fun (glVertexAttrib4Nub index x y z w) (Command 'glVertexAttrib4Nub ($ index x y z w)))
(fun (glVertexAttrib4Nsv index v) (Command 'glVertexAttrib4Nsv ($ index v)))
(fun (glVertexAttrib4Niv index v) (Command 'glVertexAttrib4Niv ($ index v)))
(fun (glVertexAttrib4Nbv index v) (Command 'glVertexAttrib4Nbv ($ index v)))
(fun (glVertexAttrib3sv index v) (Command 'glVertexAttrib3sv ($ index v)))
(fun (glVertexAttrib3s index x y z) (Command 'glVertexAttrib3s ($ index x y z)))
(fun (glVertexAttrib3fv index v) (Command 'glVertexAttrib3fv ($ index v)))
(fun (glVertexAttrib3f index x y z) (Command 'glVertexAttrib3f ($ index x y z)))
(fun (glVertexAttrib3dv index v) (Command 'glVertexAttrib3dv ($ index v)))
(fun (glVertexAttrib3d index x y z) (Command 'glVertexAttrib3d ($ index x y z)))
(fun (glVertexAttrib2sv index v) (Command 'glVertexAttrib2sv ($ index v)))
(fun (glVertexAttrib2s index x y) (Command 'glVertexAttrib2s ($ index x y)))
(fun (glVertexAttrib2fv index v) (Command 'glVertexAttrib2fv ($ index v)))
(fun (glVertexAttrib2f index x y) (Command 'glVertexAttrib2f ($ index x y)))
(fun (glVertexAttrib2dv index v) (Command 'glVertexAttrib2dv ($ index v)))
(fun (glVertexAttrib2d index x y) (Command 'glVertexAttrib2d ($ index x y)))
(fun (glVertexAttrib1sv index v) (Command 'glVertexAttrib1sv ($ index v)))
(fun (glVertexAttrib1s index x) (Command 'glVertexAttrib1s ($ index x)))
(fun (glVertexAttrib1fv index v) (Command 'glVertexAttrib1fv ($ index v)))
(fun (glVertexAttrib1f index x) (Command 'glVertexAttrib1f ($ index x)))
(fun (glVertexAttrib1dv index v) (Command 'glVertexAttrib1dv ($ index v)))
(fun (glVertexAttrib1d index x) (Command 'glVertexAttrib1d ($ index x)))
(fun (glDrawBuffers n bufs) (Command 'glDrawBuffers ($ n bufs)))
(fun (glGetBufferPointerv target pname params) (Command 'glGetBufferPointerv ($ target pname params)))
(fun (glGetBufferParameteriv target pname params) (Command 'glGetBufferParameteriv ($ target pname params)))
(fun (glUnmapBuffer target) (Command 'glUnmapBuffer ($ target)))
(fun (glMapBuffer target access) (Command 'glMapBuffer ($ target access)))
(fun (glGetBufferSubData target offset size data) (Command 'glGetBufferSubData ($ target offset size data)))
(fun (glBufferSubData target offset size data) (Command 'glBufferSubData ($ target offset size data)))
(fun (glBufferData target size data usage) (Command 'glBufferData ($ target size data usage)))
(fun (glIsBuffer buffer) (Command 'glIsBuffer ($ buffer)))
(fun (glGenBuffers n buffers) (Command 'glGenBuffers ($ n buffers)))
(fun (glDeleteBuffers n buffers) (Command 'glDeleteBuffers ($ n buffers)))
(fun (glBindBuffer target buffer) (Command 'glBindBuffer ($ target buffer)))
(fun (glGetQueryObjectuiv id pname params) (Command 'glGetQueryObjectuiv ($ id pname params)))
(fun (glGetQueryObjectiv id pname params) (Command 'glGetQueryObjectiv ($ id pname params)))
(fun (glGetQueryiv target pname params) (Command 'glGetQueryiv ($ target pname params)))
(fun (glEndQuery target) (Command 'glEndQuery ($ target)))
(fun (glBeginQuery target id) (Command 'glBeginQuery ($ target id)))
(fun (glIsQuery id) (Command 'glIsQuery ($ id)))
(fun (glDeleteQueries n ids) (Command 'glDeleteQueries ($ n ids)))
(fun (glGenQueries n ids) (Command 'glGenQueries ($ n ids)))
(fun (glWindowPos3sv v) (Command 'glWindowPos3sv ($ v)))
(fun (glWindowPos3s x y z) (Command 'glWindowPos3s ($ x y z)))
(fun (glWindowPos3iv v) (Command 'glWindowPos3iv ($ v)))
(fun (glWindowPos3i x y z) (Command 'glWindowPos3i ($ x y z)))
(fun (glWindowPos3fv v) (Command 'glWindowPos3fv ($ v)))
(fun (glWindowPos3f x y z) (Command 'glWindowPos3f ($ x y z)))
(fun (glWindowPos3dv v) (Command 'glWindowPos3dv ($ v)))
(fun (glWindowPos3d x y z) (Command 'glWindowPos3d ($ x y z)))
(fun (glWindowPos2sv v) (Command 'glWindowPos2sv ($ v)))
(fun (glWindowPos2s x y) (Command 'glWindowPos2s ($ x y)))
(fun (glWindowPos2iv v) (Command 'glWindowPos2iv ($ v)))
(fun (glWindowPos2i x y) (Command 'glWindowPos2i ($ x y)))
(fun (glWindowPos2fv v) (Command 'glWindowPos2fv ($ v)))
(fun (glWindowPos2f x y) (Command 'glWindowPos2f ($ x y)))
(fun (glWindowPos2dv v) (Command 'glWindowPos2dv ($ v)))
(fun (glWindowPos2d x y) (Command 'glWindowPos2d ($ x y)))
(fun (glMultiDrawElements mode count type indices primcount) (Command 'glMultiDrawElements ($ mode count type indices primcount)))
(fun (glMultiDrawArrays mode first count primcount) (Command 'glMultiDrawArrays ($ mode first count primcount)))
(fun (glBlendFuncSeparate srcRGB dstRGB srcAlpha dstAlpha) (Command 'glBlendFuncSeparate ($ srcRGB dstRGB srcAlpha dstAlpha)))
(fun (glPointParameteriv pname params) (Command 'glPointParameteriv ($ pname params)))
(fun (glPointParameteri pname param) (Command 'glPointParameteri ($ pname param)))
(fun (glPointParameterfv pname params) (Command 'glPointParameterfv ($ pname params)))
(fun (glPointParameterf pname param) (Command 'glPointParameterf ($ pname param)))
(fun (glSecondaryColorPointer size type stride pointer) (Command 'glSecondaryColorPointer ($ size type stride pointer)))
(fun (glSecondaryColor3usv v) (Command 'glSecondaryColor3usv ($ v)))
(fun (glSecondaryColor3us red green blue) (Command 'glSecondaryColor3us ($ red green blue)))
(fun (glSecondaryColor3uiv v) (Command 'glSecondaryColor3uiv ($ v)))
(fun (glSecondaryColor3ui red green blue) (Command 'glSecondaryColor3ui ($ red green blue)))
(fun (glSecondaryColor3ubv v) (Command 'glSecondaryColor3ubv ($ v)))
(fun (glSecondaryColor3ub red green blue) (Command 'glSecondaryColor3ub ($ red green blue)))
(fun (glSecondaryColor3sv v) (Command 'glSecondaryColor3sv ($ v)))
(fun (glSecondaryColor3s red green blue) (Command 'glSecondaryColor3s ($ red green blue)))
(fun (glSecondaryColor3iv v) (Command 'glSecondaryColor3iv ($ v)))
(fun (glSecondaryColor3i red green blue) (Command 'glSecondaryColor3i ($ red green blue)))
(fun (glSecondaryColor3fv v) (Command 'glSecondaryColor3fv ($ v)))
(fun (glSecondaryColor3f red green blue) (Command 'glSecondaryColor3f ($ red green blue)))
(fun (glSecondaryColor3dv v) (Command 'glSecondaryColor3dv ($ v)))
(fun (glSecondaryColor3d red green blue) (Command 'glSecondaryColor3d ($ red green blue)))
(fun (glSecondaryColor3bv v) (Command 'glSecondaryColor3bv ($ v)))
(fun (glSecondaryColor3b red green blue) (Command 'glSecondaryColor3b ($ red green blue)))
(fun (glFogCoordPointer type stride pointer) (Command 'glFogCoordPointer ($ type stride pointer)))
(fun (glFogCoorddv coord) (Command 'glFogCoorddv ($ coord)))
(fun (glFogCoordd coord) (Command 'glFogCoordd ($ coord)))
(fun (glFogCoordfv coord) (Command 'glFogCoordfv ($ coord)))
(fun (glFogCoordf coord) (Command 'glFogCoordf ($ coord)))
(fun (glMultiTexCoord4sv target v) (Command 'glMultiTexCoord4sv ($ target v)))
(fun (glMultiTexCoord4s target s t r q) (Command 'glMultiTexCoord4s ($ target s t r q)))
(fun (glMultiTexCoord4iv target v) (Command 'glMultiTexCoord4iv ($ target v)))
(fun (glMultiTexCoord4i target anonp85 s t r) (Command 'glMultiTexCoord4i ($ target anonp85 s t r)))
(fun (glMultiTexCoord4fv target v) (Command 'glMultiTexCoord4fv ($ target v)))
(fun (glMultiTexCoord4f target s t r q) (Command 'glMultiTexCoord4f ($ target s t r q)))
(fun (glMultiTexCoord4dv target v) (Command 'glMultiTexCoord4dv ($ target v)))
(fun (glMultiTexCoord4d target s t r q) (Command 'glMultiTexCoord4d ($ target s t r q)))
(fun (glMultiTexCoord3sv target v) (Command 'glMultiTexCoord3sv ($ target v)))
(fun (glMultiTexCoord3s target s t r) (Command 'glMultiTexCoord3s ($ target s t r)))
(fun (glMultiTexCoord3iv target v) (Command 'glMultiTexCoord3iv ($ target v)))
(fun (glMultiTexCoord3i target s t r) (Command 'glMultiTexCoord3i ($ target s t r)))
(fun (glMultiTexCoord3fv target v) (Command 'glMultiTexCoord3fv ($ target v)))
(fun (glMultiTexCoord3f target s t r) (Command 'glMultiTexCoord3f ($ target s t r)))
(fun (glMultiTexCoord3dv target v) (Command 'glMultiTexCoord3dv ($ target v)))
(fun (glMultiTexCoord3d target s t r) (Command 'glMultiTexCoord3d ($ target s t r)))
(fun (glMultiTexCoord2sv target v) (Command 'glMultiTexCoord2sv ($ target v)))
(fun (glMultiTexCoord2s target s t) (Command 'glMultiTexCoord2s ($ target s t)))
(fun (glMultiTexCoord2iv target v) (Command 'glMultiTexCoord2iv ($ target v)))
(fun (glMultiTexCoord2i target s t) (Command 'glMultiTexCoord2i ($ target s t)))
(fun (glMultiTexCoord2fv target v) (Command 'glMultiTexCoord2fv ($ target v)))
(fun (glMultiTexCoord2f target s t) (Command 'glMultiTexCoord2f ($ target s t)))
(fun (glMultiTexCoord2dv target v) (Command 'glMultiTexCoord2dv ($ target v)))
(fun (glMultiTexCoord2d target s t) (Command 'glMultiTexCoord2d ($ target s t)))
(fun (glMultiTexCoord1sv target v) (Command 'glMultiTexCoord1sv ($ target v)))
(fun (glMultiTexCoord1s target s) (Command 'glMultiTexCoord1s ($ target s)))
(fun (glMultiTexCoord1iv target v) (Command 'glMultiTexCoord1iv ($ target v)))
(fun (glMultiTexCoord1i target s) (Command 'glMultiTexCoord1i ($ target s)))
(fun (glMultiTexCoord1fv target v) (Command 'glMultiTexCoord1fv ($ target v)))
(fun (glMultiTexCoord1f target s) (Command 'glMultiTexCoord1f ($ target s)))
(fun (glMultiTexCoord1dv target v) (Command 'glMultiTexCoord1dv ($ target v)))
(fun (glMultiTexCoord1d target s) (Command 'glMultiTexCoord1d ($ target s)))
(fun (glClientActiveTexture texture) (Command 'glClientActiveTexture ($ texture)))
(fun (glActiveTexture texture) (Command 'glActiveTexture ($ texture)))
(fun (glGetCompressedTexImage target lod img) (Command 'glGetCompressedTexImage ($ target lod img)))
(fun (glCompressedTexSubImage1D target level xoffset width format imageSize data) (Command 'glCompressedTexSubImage1D ($ target level xoffset width format imageSize data)))
(fun (glCompressedTexSubImage2D target level xoffset yoffset width height format imageSize data) (Command 'glCompressedTexSubImage2D ($ target level xoffset yoffset width height format imageSize data)))
(fun (glCompressedTexSubImage3D target level xoffset yoffset zoffset width height depth format imageSize data) (Command 'glCompressedTexSubImage3D ($ target level xoffset yoffset zoffset width height depth format imageSize data)))
(fun (glCompressedTexImage1D target level internalformat width border imageSize data) (Command 'glCompressedTexImage1D ($ target level internalformat width border imageSize data)))
(fun (glCompressedTexImage2D target level internalformat width height border imageSize data) (Command 'glCompressedTexImage2D ($ target level internalformat width height border imageSize data)))
(fun (glCompressedTexImage3D target level internalformat width height depth border imageSize data) (Command 'glCompressedTexImage3D ($ target level internalformat width height depth border imageSize data)))
(fun (glMultTransposeMatrixd m) (Command 'glMultTransposeMatrixd ($ m)))
(fun (glMultTransposeMatrixf m) (Command 'glMultTransposeMatrixf ($ m)))
(fun (glLoadTransposeMatrixd m) (Command 'glLoadTransposeMatrixd ($ m)))
(fun (glLoadTransposeMatrixf m) (Command 'glLoadTransposeMatrixf ($ m)))
(fun (glSamplePass pass) (Command 'glSamplePass ($ pass)))
(fun (glSampleCoverage value invert) (Command 'glSampleCoverage ($ value invert)))
(fun (glViewport x y width height) (Command 'glViewport ($ x y width height)))
(fun (glVertexPointer size type stride pointer) (Command 'glVertexPointer ($ size type stride pointer)))
(fun (glVertex4sv v) (Command 'glVertex4sv ($ v)))
(fun (glVertex4s x y z w) (Command 'glVertex4s ($ x y z w)))
(fun (glVertex4iv v) (Command 'glVertex4iv ($ v)))
(fun (glVertex4i x y z w) (Command 'glVertex4i ($ x y z w)))
(fun (glVertex4fv v) (Command 'glVertex4fv ($ v)))
(fun (glVertex4f x y z w) (Command 'glVertex4f ($ x y z w)))
(fun (glVertex4dv v) (Command 'glVertex4dv ($ v)))
(fun (glVertex4d x y z w) (Command 'glVertex4d ($ x y z w)))
(fun (glVertex3sv v) (Command 'glVertex3sv ($ v)))
(fun (glVertex3s x y z) (Command 'glVertex3s ($ x y z)))
(fun (glVertex3iv v) (Command 'glVertex3iv ($ v)))
(fun (glVertex3i x y z) (Command 'glVertex3i ($ x y z)))
(fun (glVertex3fv v) (Command 'glVertex3fv ($ v)))
(fun (glVertex3f x y z) (Command 'glVertex3f ($ x y z)))
(fun (glVertex3dv v) (Command 'glVertex3dv ($ v)))
(fun (glVertex3d x y z) (Command 'glVertex3d ($ x y z)))
(fun (glVertex2sv v) (Command 'glVertex2sv ($ v)))
(fun (glVertex2s x y) (Command 'glVertex2s ($ x y)))
(fun (glVertex2iv v) (Command 'glVertex2iv ($ v)))
(fun (glVertex2i x y) (Command 'glVertex2i ($ x y)))
(fun (glVertex2fv v) (Command 'glVertex2fv ($ v)))
(fun (glVertex2f x y) (Command 'glVertex2f ($ x y)))
(fun (glVertex2dv v) (Command 'glVertex2dv ($ v)))
(fun (glVertex2d x y) (Command 'glVertex2d ($ x y)))
(fun (glTranslatef x y z) (Command 'glTranslatef ($ x y z)))
(fun (glTranslated x y z) (Command 'glTranslated ($ x y z)))
(fun (glTexSubImage3D target level xoffset yoffset zoffset width height depth format type pixels) (Command 'glTexSubImage3D ($ target level xoffset yoffset zoffset width height depth format type pixels)))
(fun (glTexSubImage2D target level xoffset yoffset width height format type pixels) (Command 'glTexSubImage2D ($ target level xoffset yoffset width height format type pixels)))
(fun (glTexSubImage1D target level xoffset width format type pixels) (Command 'glTexSubImage1D ($ target level xoffset width format type pixels)))
(fun (glTexParameteriv target pname params) (Command 'glTexParameteriv ($ target pname params)))
(fun (glTexParameteri target pname param) (Command 'glTexParameteri ($ target pname param)))
(fun (glTexParameterfv target pname params) (Command 'glTexParameterfv ($ target pname params)))
(fun (glTexParameterf target pname param) (Command 'glTexParameterf ($ target pname param)))
(fun (glTexImage3D target level internalformat width height depth border format type pixels) (Command 'glTexImage3D ($ target level internalformat width height depth border format type pixels)))
(fun (glTexImage2D target level internalformat width height border format type pixels) (Command 'glTexImage2D ($ target level internalformat width height border format type pixels)))
(fun (glTexImage1D target level internalformat width border format type pixels) (Command 'glTexImage1D ($ target level internalformat width border format type pixels)))
(fun (glTexGeniv coord pname params) (Command 'glTexGeniv ($ coord pname params)))
(fun (glTexGeni coord pname param) (Command 'glTexGeni ($ coord pname param)))
(fun (glTexGenfv coord pname params) (Command 'glTexGenfv ($ coord pname params)))
(fun (glTexGenf coord pname param) (Command 'glTexGenf ($ coord pname param)))
(fun (glTexGendv coord pname params) (Command 'glTexGendv ($ coord pname params)))
(fun (glTexGend coord pname param) (Command 'glTexGend ($ coord pname param)))
(fun (glTexEnviv target pname params) (Command 'glTexEnviv ($ target pname params)))
(fun (glTexEnvi target pname param) (Command 'glTexEnvi ($ target pname param)))
(fun (glTexEnvfv target pname params) (Command 'glTexEnvfv ($ target pname params)))
(fun (glTexEnvf target pname param) (Command 'glTexEnvf ($ target pname param)))
(fun (glTexCoordPointer size type stride pointer) (Command 'glTexCoordPointer ($ size type stride pointer)))
(fun (glTexCoord4sv v) (Command 'glTexCoord4sv ($ v)))
(fun (glTexCoord4s s t r q) (Command 'glTexCoord4s ($ s t r q)))
(fun (glTexCoord4iv v) (Command 'glTexCoord4iv ($ v)))
(fun (glTexCoord4i s t r q) (Command 'glTexCoord4i ($ s t r q)))
(fun (glTexCoord4fv v) (Command 'glTexCoord4fv ($ v)))
(fun (glTexCoord4f s t r q) (Command 'glTexCoord4f ($ s t r q)))
(fun (glTexCoord4dv v) (Command 'glTexCoord4dv ($ v)))
(fun (glTexCoord4d s t r q) (Command 'glTexCoord4d ($ s t r q)))
(fun (glTexCoord3sv v) (Command 'glTexCoord3sv ($ v)))
(fun (glTexCoord3s s t r) (Command 'glTexCoord3s ($ s t r)))
(fun (glTexCoord3iv v) (Command 'glTexCoord3iv ($ v)))
(fun (glTexCoord3i s t r) (Command 'glTexCoord3i ($ s t r)))
(fun (glTexCoord3fv v) (Command 'glTexCoord3fv ($ v)))
(fun (glTexCoord3f s t r) (Command 'glTexCoord3f ($ s t r)))
(fun (glTexCoord3dv v) (Command 'glTexCoord3dv ($ v)))
(fun (glTexCoord3d s t r) (Command 'glTexCoord3d ($ s t r)))
(fun (glTexCoord2sv v) (Command 'glTexCoord2sv ($ v)))
(fun (glTexCoord2s s t) (Command 'glTexCoord2s ($ s t)))
(fun (glTexCoord2iv v) (Command 'glTexCoord2iv ($ v)))
(fun (glTexCoord2i s t) (Command 'glTexCoord2i ($ s t)))
(fun (glTexCoord2fv v) (Command 'glTexCoord2fv ($ v)))
(fun (glTexCoord2f s t) (Command 'glTexCoord2f ($ s t)))
(fun (glTexCoord2dv v) (Command 'glTexCoord2dv ($ v)))
(fun (glTexCoord2d s t) (Command 'glTexCoord2d ($ s t)))
(fun (glTexCoord1sv v) (Command 'glTexCoord1sv ($ v)))
(fun (glTexCoord1s s) (Command 'glTexCoord1s ($ s)))
(fun (glTexCoord1iv v) (Command 'glTexCoord1iv ($ v)))
(fun (glTexCoord1i s) (Command 'glTexCoord1i ($ s)))
(fun (glTexCoord1fv v) (Command 'glTexCoord1fv ($ v)))
(fun (glTexCoord1f s) (Command 'glTexCoord1f ($ s)))
(fun (glTexCoord1dv v) (Command 'glTexCoord1dv ($ v)))
(fun (glTexCoord1d s) (Command 'glTexCoord1d ($ s)))
(fun (glStencilOp fail zfail zpass) (Command 'glStencilOp ($ fail zfail zpass)))
(fun (glStencilMask mask) (Command 'glStencilMask ($ mask)))
(fun (glStencilFunc func ref mask) (Command 'glStencilFunc ($ func ref mask)))
(fun (glShadeModel mode) (Command 'glShadeModel ($ mode)))
(fun (glSeparableFilter2D target internalformat width height format type row column) (Command 'glSeparableFilter2D ($ target internalformat width height format type row column)))
(fun (glSelectBuffer size buffer) (Command 'glSelectBuffer ($ size buffer)))
(fun (glScissor x y width height) (Command 'glScissor ($ x y width height)))
(fun (glScalef x y z) (Command 'glScalef ($ x y z)))
(fun (glScaled x y z) (Command 'glScaled ($ x y z)))
(fun (glRotatef angle x y z) (Command 'glRotatef ($ angle x y z)))
(fun (glRotated angle x y z) (Command 'glRotated ($ angle x y z)))
(fun (glResetMinmax target) (Command 'glResetMinmax ($ target)))
(fun (glResetHistogram target) (Command 'glResetHistogram ($ target)))
(fun (glRenderMode mode) (Command 'glRenderMode ($ mode)))
(fun (glRectsv v1 v2) (Command 'glRectsv ($ v1 v2)))
(fun (glRects x1 y1 x2 y2) (Command 'glRects ($ x1 y1 x2 y2)))
(fun (glRectiv v1 v2) (Command 'glRectiv ($ v1 v2)))
(fun (glRecti x1 y1 x2 y2) (Command 'glRecti ($ x1 y1 x2 y2)))
(fun (glRectfv v1 v2) (Command 'glRectfv ($ v1 v2)))
(fun (glRectf x1 y1 x2 y2) (Command 'glRectf ($ x1 y1 x2 y2)))
(fun (glRectdv v1 v2) (Command 'glRectdv ($ v1 v2)))
(fun (glRectd x1 y1 x2 y2) (Command 'glRectd ($ x1 y1 x2 y2)))
(fun (glReadPixels x y width height format type pixels) (Command 'glReadPixels ($ x y width height format type pixels)))
(fun (glReadBuffer mode) (Command 'glReadBuffer ($ mode)))
(fun (glRasterPos4sv v) (Command 'glRasterPos4sv ($ v)))
(fun (glRasterPos4s x y z w) (Command 'glRasterPos4s ($ x y z w)))
(fun (glRasterPos4iv v) (Command 'glRasterPos4iv ($ v)))
(fun (glRasterPos4i x y z w) (Command 'glRasterPos4i ($ x y z w)))
(fun (glRasterPos4fv v) (Command 'glRasterPos4fv ($ v)))
(fun (glRasterPos4f x y z w) (Command 'glRasterPos4f ($ x y z w)))
(fun (glRasterPos4dv v) (Command 'glRasterPos4dv ($ v)))
(fun (glRasterPos4d x y z w) (Command 'glRasterPos4d ($ x y z w)))
(fun (glRasterPos3sv v) (Command 'glRasterPos3sv ($ v)))
(fun (glRasterPos3s x y z) (Command 'glRasterPos3s ($ x y z)))
(fun (glRasterPos3iv v) (Command 'glRasterPos3iv ($ v)))
(fun (glRasterPos3i x y z) (Command 'glRasterPos3i ($ x y z)))
(fun (glRasterPos3fv v) (Command 'glRasterPos3fv ($ v)))
(fun (glRasterPos3f x y z) (Command 'glRasterPos3f ($ x y z)))
(fun (glRasterPos3dv v) (Command 'glRasterPos3dv ($ v)))
(fun (glRasterPos3d x y z) (Command 'glRasterPos3d ($ x y z)))
(fun (glRasterPos2sv v) (Command 'glRasterPos2sv ($ v)))
(fun (glRasterPos2s x y) (Command 'glRasterPos2s ($ x y)))
(fun (glRasterPos2iv v) (Command 'glRasterPos2iv ($ v)))
(fun (glRasterPos2i x y) (Command 'glRasterPos2i ($ x y)))
(fun (glRasterPos2fv v) (Command 'glRasterPos2fv ($ v)))
(fun (glRasterPos2f x y) (Command 'glRasterPos2f ($ x y)))
(fun (glRasterPos2dv v) (Command 'glRasterPos2dv ($ v)))
(fun (glRasterPos2d x y) (Command 'glRasterPos2d ($ x y)))
(fun (glPushName name) (Command 'glPushName ($ name)))
(fun (glPushMatrix) (Command 'glPushMatrix ($)))
(fun (glPushClientAttrib mask) (Command 'glPushClientAttrib ($ mask)))
(fun (glPushAttrib mask) (Command 'glPushAttrib ($ mask)))
(fun (glPrioritizeTextures n textures priorities) (Command 'glPrioritizeTextures ($ n textures priorities)))
(fun (glPopName) (Command 'glPopName ($)))
(fun (glPopMatrix) (Command 'glPopMatrix ($)))
(fun (glPopClientAttrib) (Command 'glPopClientAttrib ($)))
(fun (glPopAttrib) (Command 'glPopAttrib ($)))
(fun (glPolygonStipple mask) (Command 'glPolygonStipple ($ mask)))
(fun (glPolygonOffset factor units) (Command 'glPolygonOffset ($ factor units)))
(fun (glPolygonMode face mode) (Command 'glPolygonMode ($ face mode)))
(fun (glPointSize size) (Command 'glPointSize ($ size)))
(fun (glPixelZoom xfactor yfactor) (Command 'glPixelZoom ($ xfactor yfactor)))
(fun (glPixelTransferi pname param) (Command 'glPixelTransferi ($ pname param)))
(fun (glPixelTransferf pname param) (Command 'glPixelTransferf ($ pname param)))
(fun (glPixelStorei pname param) (Command 'glPixelStorei ($ pname param)))
(fun (glPixelStoref pname param) (Command 'glPixelStoref ($ pname param)))
(fun (glPixelMapusv map mapsize values) (Command 'glPixelMapusv ($ map mapsize values)))
(fun (glPixelMapuiv map mapsize values) (Command 'glPixelMapuiv ($ map mapsize values)))
(fun (glPixelMapfv map mapsize values) (Command 'glPixelMapfv ($ map mapsize values)))
(fun (glPassThrough token) (Command 'glPassThrough ($ token)))
(fun (glOrtho left right bottom top zNear zFar) (Command 'glOrtho ($ left right bottom top zNear zFar)))
(fun (glNormalPointer type stride pointer) (Command 'glNormalPointer ($ type stride pointer)))
(fun (glNormal3sv v) (Command 'glNormal3sv ($ v)))
(fun (glNormal3s nx ny nz) (Command 'glNormal3s ($ nx ny nz)))
(fun (glNormal3iv v) (Command 'glNormal3iv ($ v)))
(fun (glNormal3i nx ny nz) (Command 'glNormal3i ($ nx ny nz)))
(fun (glNormal3fv v) (Command 'glNormal3fv ($ v)))
(fun (glNormal3f nx ny nz) (Command 'glNormal3f ($ nx ny nz)))
(fun (glNormal3dv v) (Command 'glNormal3dv ($ v)))
(fun (glNormal3d nx ny nz) (Command 'glNormal3d ($ nx ny nz)))
(fun (glNormal3bv v) (Command 'glNormal3bv ($ v)))
(fun (glNormal3b nx ny nz) (Command 'glNormal3b ($ nx ny nz)))
(fun (glNewList list mode) (Command 'glNewList ($ list mode)))
(fun (glMultMatrixf m) (Command 'glMultMatrixf ($ m)))
(fun (glMultMatrixd m) (Command 'glMultMatrixd ($ m)))
(fun (glMinmax target internalformat sink) (Command 'glMinmax ($ target internalformat sink)))
(fun (glMatrixMode mode) (Command 'glMatrixMode ($ mode)))
(fun (glMaterialiv face pname params) (Command 'glMaterialiv ($ face pname params)))
(fun (glMateriali face pname param) (Command 'glMateriali ($ face pname param)))
(fun (glMaterialfv face pname params) (Command 'glMaterialfv ($ face pname params)))
(fun (glMaterialf face pname param) (Command 'glMaterialf ($ face pname param)))
(fun (glMapGrid2f un u1 u2 vn v1 v2) (Command 'glMapGrid2f ($ un u1 u2 vn v1 v2)))
(fun (glMapGrid2d un u1 u2 vn v1 v2) (Command 'glMapGrid2d ($ un u1 u2 vn v1 v2)))
(fun (glMapGrid1f un u1 u2) (Command 'glMapGrid1f ($ un u1 u2)))
(fun (glMapGrid1d un u1 u2) (Command 'glMapGrid1d ($ un u1 u2)))
(fun (glMap2f target u1 u2 ustride uorder v1 v2 vstride vorder points) (Command 'glMap2f ($ target u1 u2 ustride uorder v1 v2 vstride vorder points)))
(fun (glMap2d target u1 u2 ustride uorder v1 v2 vstride vorder points) (Command 'glMap2d ($ target u1 u2 ustride uorder v1 v2 vstride vorder points)))
(fun (glMap1f target u1 u2 stride order points) (Command 'glMap1f ($ target u1 u2 stride order points)))
(fun (glMap1d target u1 u2 stride order points) (Command 'glMap1d ($ target u1 u2 stride order points)))
(fun (glLogicOp opcode) (Command 'glLogicOp ($ opcode)))
(fun (glLoadName name) (Command 'glLoadName ($ name)))
(fun (glLoadMatrixf m) (Command 'glLoadMatrixf ($ m)))
(fun (glLoadMatrixd m) (Command 'glLoadMatrixd ($ m)))
(fun (glLoadIdentity) (Command 'glLoadIdentity ($)))
(fun (glListBase base) (Command 'glListBase ($ base)))
(fun (glLineWidth width) (Command 'glLineWidth ($ width)))
(fun (glLineStipple factor pattern) (Command 'glLineStipple ($ factor pattern)))
(fun (glLightiv light pname params) (Command 'glLightiv ($ light pname params)))
(fun (glLighti light pname param) (Command 'glLighti ($ light pname param)))
(fun (glLightfv light pname params) (Command 'glLightfv ($ light pname params)))
(fun (glLightf light pname param) (Command 'glLightf ($ light pname param)))
(fun (glLightModeliv pname params) (Command 'glLightModeliv ($ pname params)))
(fun (glLightModeli pname param) (Command 'glLightModeli ($ pname param)))
(fun (glLightModelfv pname params) (Command 'glLightModelfv ($ pname params)))
(fun (glLightModelf pname param) (Command 'glLightModelf ($ pname param)))
(fun (glIsTexture texture) (Command 'glIsTexture ($ texture)))
(fun (glIsList list) (Command 'glIsList ($ list)))
(fun (glIsEnabled cap) (Command 'glIsEnabled ($ cap)))
(fun (glInterleavedArrays format stride pointer) (Command 'glInterleavedArrays ($ format stride pointer)))
(fun (glInitNames) (Command 'glInitNames ($)))
(fun (glIndexubv c) (Command 'glIndexubv ($ c)))
(fun (glIndexub c) (Command 'glIndexub ($ c)))
(fun (glIndexsv c) (Command 'glIndexsv ($ c)))
(fun (glIndexs c) (Command 'glIndexs ($ c)))
(fun (glIndexiv c) (Command 'glIndexiv ($ c)))
(fun (glIndexi c) (Command 'glIndexi ($ c)))
(fun (glIndexfv c) (Command 'glIndexfv ($ c)))
(fun (glIndexf c) (Command 'glIndexf ($ c)))
(fun (glIndexdv c) (Command 'glIndexdv ($ c)))
(fun (glIndexd c) (Command 'glIndexd ($ c)))
(fun (glIndexPointer type stride pointer) (Command 'glIndexPointer ($ type stride pointer)))
(fun (glIndexMask mask) (Command 'glIndexMask ($ mask)))
(fun (glHistogram target width internalformat sink) (Command 'glHistogram ($ target width internalformat sink)))
(fun (glHint target mode) (Command 'glHint ($ target mode)))
(fun (glGetTexParameteriv target pname params) (Command 'glGetTexParameteriv ($ target pname params)))
(fun (glGetTexParameterfv target pname params) (Command 'glGetTexParameterfv ($ target pname params)))
(fun (glGetTexLevelParameteriv target level pname params) (Command 'glGetTexLevelParameteriv ($ target level pname params)))
(fun (glGetTexLevelParameterfv target level pname params) (Command 'glGetTexLevelParameterfv ($ target level pname params)))
(fun (glGetTexImage target level format type pixels) (Command 'glGetTexImage ($ target level format type pixels)))
(fun (glGetTexGeniv coord pname params) (Command 'glGetTexGeniv ($ coord pname params)))
(fun (glGetTexGenfv coord pname params) (Command 'glGetTexGenfv ($ coord pname params)))
(fun (glGetTexGendv coord pname params) (Command 'glGetTexGendv ($ coord pname params)))
(fun (glGetTexEnviv target pname params) (Command 'glGetTexEnviv ($ target pname params)))
(fun (glGetTexEnvfv target pname params) (Command 'glGetTexEnvfv ($ target pname params)))
(fun (glGetString name) (Command 'glGetString ($ name)))
(fun (glGetSeparableFilter target format type row column span) (Command 'glGetSeparableFilter ($ target format type row column span)))
(fun (glGetPolygonStipple mask) (Command 'glGetPolygonStipple ($ mask)))
(fun (glGetPointerv pname params) (Command 'glGetPointerv ($ pname params)))
(fun (glGetPixelMapusv map values) (Command 'glGetPixelMapusv ($ map values)))
(fun (glGetPixelMapuiv map values) (Command 'glGetPixelMapuiv ($ map values)))
(fun (glGetPixelMapfv map values) (Command 'glGetPixelMapfv ($ map values)))
(fun (glGetMinmaxParameteriv target pname params) (Command 'glGetMinmaxParameteriv ($ target pname params)))
(fun (glGetMinmaxParameterfv target pname params) (Command 'glGetMinmaxParameterfv ($ target pname params)))
(fun (glGetMinmax target reset format type values) (Command 'glGetMinmax ($ target reset format type values)))
(fun (glGetMaterialiv face pname params) (Command 'glGetMaterialiv ($ face pname params)))
(fun (glGetMaterialfv face pname params) (Command 'glGetMaterialfv ($ face pname params)))
(fun (glGetMapiv target query v) (Command 'glGetMapiv ($ target query v)))
(fun (glGetMapfv target query v) (Command 'glGetMapfv ($ target query v)))
(fun (glGetMapdv target query v) (Command 'glGetMapdv ($ target query v)))
(fun (glGetLightiv light pname params) (Command 'glGetLightiv ($ light pname params)))
(fun (glGetLightfv light pname params) (Command 'glGetLightfv ($ light pname params)))
(fun (glGetIntegerv pname params) (Command 'glGetIntegerv ($ pname params)))
(fun (glGetHistogramParameteriv target pname params) (Command 'glGetHistogramParameteriv ($ target pname params)))
(fun (glGetHistogramParameterfv target pname params) (Command 'glGetHistogramParameterfv ($ target pname params)))
(fun (glGetHistogram target reset format type values) (Command 'glGetHistogram ($ target reset format type values)))
(fun (glGetFloatv pname params) (Command 'glGetFloatv ($ pname params)))
(fun (glGetError) (Command 'glGetError ($)))
(fun (glGetDoublev pname params) (Command 'glGetDoublev ($ pname params)))
(fun (glGetConvolutionParameteriv target pname params) (Command 'glGetConvolutionParameteriv ($ target pname params)))
(fun (glGetConvolutionParameterfv target pname params) (Command 'glGetConvolutionParameterfv ($ target pname params)))
(fun (glGetConvolutionFilter target format type image) (Command 'glGetConvolutionFilter ($ target format type image)))
(fun (glGetColorTableParameteriv target pname params) (Command 'glGetColorTableParameteriv ($ target pname params)))
(fun (glGetColorTableParameterfv target pname params) (Command 'glGetColorTableParameterfv ($ target pname params)))
(fun (glGetColorTable target format type table) (Command 'glGetColorTable ($ target format type table)))
(fun (glGetClipPlane plane equation) (Command 'glGetClipPlane ($ plane equation)))
(fun (glGetBooleanv pname params) (Command 'glGetBooleanv ($ pname params)))
(fun (glGenTextures n textures) (Command 'glGenTextures ($ n textures)))
(fun (glGenLists range) (Command 'glGenLists ($ range)))
(fun (glFrustum left right bottom top zNear zFar) (Command 'glFrustum ($ left right bottom top zNear zFar)))
(fun (glFrontFace mode) (Command 'glFrontFace ($ mode)))
(fun (glFogiv pname params) (Command 'glFogiv ($ pname params)))
(fun (glFogi pname param) (Command 'glFogi ($ pname param)))
(fun (glFogfv pname params) (Command 'glFogfv ($ pname params)))
(fun (glFogf pname param) (Command 'glFogf ($ pname param)))
(fun (glFlush) (Command 'glFlush ($)))
(fun (glFinish) (Command 'glFinish ($)))
(fun (glFeedbackBuffer size type buffer) (Command 'glFeedbackBuffer ($ size type buffer)))
(fun (glEvalPoint2 i j) (Command 'glEvalPoint2 ($ i j)))
(fun (glEvalPoint1 i) (Command 'glEvalPoint1 ($ i)))
(fun (glEvalMesh2 mode i1 i2 j1 j2) (Command 'glEvalMesh2 ($ mode i1 i2 j1 j2)))
(fun (glEvalMesh1 mode i1 i2) (Command 'glEvalMesh1 ($ mode i1 i2)))
(fun (glEvalCoord2fv u) (Command 'glEvalCoord2fv ($ u)))
(fun (glEvalCoord2f u v) (Command 'glEvalCoord2f ($ u v)))
(fun (glEvalCoord2dv u) (Command 'glEvalCoord2dv ($ u)))
(fun (glEvalCoord2d u v) (Command 'glEvalCoord2d ($ u v)))
(fun (glEvalCoord1fv u) (Command 'glEvalCoord1fv ($ u)))
(fun (glEvalCoord1f u) (Command 'glEvalCoord1f ($ u)))
(fun (glEvalCoord1dv u) (Command 'glEvalCoord1dv ($ u)))
(fun (glEvalCoord1d u) (Command 'glEvalCoord1d ($ u)))
(fun (glEndList) (Command 'glEndList ($)))
(fun (glEnd) (Command 'glEnd ($)))
(fun (glEnableClientState array) (Command 'glEnableClientState ($ array)))
(fun (glEnable cap) (Command 'glEnable ($ cap)))
(fun (glEdgeFlagv flag) (Command 'glEdgeFlagv ($ flag)))
(fun (glEdgeFlagPointer stride pointer) (Command 'glEdgeFlagPointer ($ stride pointer)))
(fun (glEdgeFlag flag) (Command 'glEdgeFlag ($ flag)))
(fun (glDrawRangeElements mode start end count type indices) (Command 'glDrawRangeElements ($ mode start end count type indices)))
(fun (glDrawPixels width height format type pixels) (Command 'glDrawPixels ($ width height format type pixels)))
(fun (glDrawElements mode count type indices) (Command 'glDrawElements ($ mode count type indices)))
(fun (glDrawBuffer mode) (Command 'glDrawBuffer ($ mode)))
(fun (glDrawArrays mode first count) (Command 'glDrawArrays ($ mode first count)))
(fun (glDisableClientState array) (Command 'glDisableClientState ($ array)))
(fun (glDisable cap) (Command 'glDisable ($ cap)))
(fun (glDepthRange zNear zFar) (Command 'glDepthRange ($ zNear zFar)))
(fun (glDepthMask flag) (Command 'glDepthMask ($ flag)))
(fun (glDepthFunc func) (Command 'glDepthFunc ($ func)))
(fun (glDeleteTextures n textures) (Command 'glDeleteTextures ($ n textures)))
(fun (glDeleteLists list range) (Command 'glDeleteLists ($ list range)))
(fun (glCullFace mode) (Command 'glCullFace ($ mode)))
(fun (glCopyTexSubImage3D target level xoffset yoffset zoffset x y width height) (Command 'glCopyTexSubImage3D ($ target level xoffset yoffset zoffset x y width height)))
(fun (glCopyTexSubImage2D target level xoffset yoffset x y width height) (Command 'glCopyTexSubImage2D ($ target level xoffset yoffset x y width height)))
(fun (glCopyTexSubImage1D target level xoffset x y width) (Command 'glCopyTexSubImage1D ($ target level xoffset x y width)))
(fun (glCopyTexImage2D target level internalformat x y width height border) (Command 'glCopyTexImage2D ($ target level internalformat x y width height border)))
(fun (glCopyTexImage1D target level internalformat x y width border) (Command 'glCopyTexImage1D ($ target level internalformat x y width border)))
(fun (glCopyPixels x y width height type) (Command 'glCopyPixels ($ x y width height type)))
(fun (glCopyConvolutionFilter2D target internalformat x y width height) (Command 'glCopyConvolutionFilter2D ($ target internalformat x y width height)))
(fun (glCopyConvolutionFilter1D target internalformat x y width) (Command 'glCopyConvolutionFilter1D ($ target internalformat x y width)))
(fun (glCopyColorTable target internalformat x y width) (Command 'glCopyColorTable ($ target internalformat x y width)))
(fun (glCopyColorSubTable target start x y width) (Command 'glCopyColorSubTable ($ target start x y width)))
(fun (glConvolutionParameteriv target pname params) (Command 'glConvolutionParameteriv ($ target pname params)))
(fun (glConvolutionParameteri target pname params) (Command 'glConvolutionParameteri ($ target pname params)))
(fun (glConvolutionParameterfv target pname params) (Command 'glConvolutionParameterfv ($ target pname params)))
(fun (glConvolutionParameterf target pname params) (Command 'glConvolutionParameterf ($ target pname params)))
(fun (glConvolutionFilter2D target internalformat width height format type image) (Command 'glConvolutionFilter2D ($ target internalformat width height format type image)))
(fun (glConvolutionFilter1D target internalformat width format type image) (Command 'glConvolutionFilter1D ($ target internalformat width format type image)))
(fun (glColorTableParameteriv target pname params) (Command 'glColorTableParameteriv ($ target pname params)))
(fun (glColorTableParameterfv target pname params) (Command 'glColorTableParameterfv ($ target pname params)))
(fun (glColorTable target internalformat width format type table) (Command 'glColorTable ($ target internalformat width format type table)))
(fun (glColorSubTable target start count format type data) (Command 'glColorSubTable ($ target start count format type data)))
(fun (glColorPointer size type stride pointer) (Command 'glColorPointer ($ size type stride pointer)))
(fun (glColorMaterial face mode) (Command 'glColorMaterial ($ face mode)))
(fun (glColorMask red green blue alpha) (Command 'glColorMask ($ red green blue alpha)))
(fun (glColor4usv v) (Command 'glColor4usv ($ v)))
(fun (glColor4us red green blue alpha) (Command 'glColor4us ($ red green blue alpha)))
(fun (glColor4uiv v) (Command 'glColor4uiv ($ v)))
(fun (glColor4ui red green blue alpha) (Command 'glColor4ui ($ red green blue alpha)))
(fun (glColor4ubv v) (Command 'glColor4ubv ($ v)))
(fun (glColor4ub red green blue alpha) (Command 'glColor4ub ($ red green blue alpha)))
(fun (glColor4sv v) (Command 'glColor4sv ($ v)))
(fun (glColor4s red green blue alpha) (Command 'glColor4s ($ red green blue alpha)))
(fun (glColor4iv v) (Command 'glColor4iv ($ v)))
(fun (glColor4i red green blue alpha) (Command 'glColor4i ($ red green blue alpha)))
(fun (glColor4fv v) (Command 'glColor4fv ($ v)))
(fun (glColor4f red green blue alpha) (Command 'glColor4f ($ red green blue alpha)))
(fun (glColor4dv v) (Command 'glColor4dv ($ v)))
(fun (glColor4d red green blue alpha) (Command 'glColor4d ($ red green blue alpha)))
(fun (glColor4bv v) (Command 'glColor4bv ($ v)))
(fun (glColor4b red green blue alpha) (Command 'glColor4b ($ red green blue alpha)))
(fun (glColor3usv v) (Command 'glColor3usv ($ v)))
(fun (glColor3us red green blue) (Command 'glColor3us ($ red green blue)))
(fun (glColor3uiv v) (Command 'glColor3uiv ($ v)))
(fun (glColor3ui red green blue) (Command 'glColor3ui ($ red green blue)))
(fun (glColor3ubv v) (Command 'glColor3ubv ($ v)))
(fun (glColor3ub red green blue) (Command 'glColor3ub ($ red green blue)))
(fun (glColor3sv v) (Command 'glColor3sv ($ v)))
(fun (glColor3s red green blue) (Command 'glColor3s ($ red green blue)))
(fun (glColor3iv v) (Command 'glColor3iv ($ v)))
(fun (glColor3i red green blue) (Command 'glColor3i ($ red green blue)))
(fun (glColor3fv v) (Command 'glColor3fv ($ v)))
(fun (glColor3f red green blue) (Command 'glColor3f ($ red green blue)))
(fun (glColor3dv v) (Command 'glColor3dv ($ v)))
(fun (glColor3d red green blue) (Command 'glColor3d ($ red green blue)))
(fun (glColor3bv v) (Command 'glColor3bv ($ v)))
(fun (glColor3b red green blue) (Command 'glColor3b ($ red green blue)))
(fun (glClipPlane plane equation) (Command 'glClipPlane ($ plane equation)))
(fun (glClearStencil s) (Command 'glClearStencil ($ s)))
(fun (glClearIndex c) (Command 'glClearIndex ($ c)))
(fun (glClearDepth depth) (Command 'glClearDepth ($ depth)))
(fun (glClearColor red green blue alpha) (Command 'glClearColor ($ red green blue alpha)))
(fun (glClearAccum red green blue alpha) (Command 'glClearAccum ($ red green blue alpha)))
(fun (glClear mask) (Command 'glClear ($ mask)))
(fun (glCallLists n type lists) (Command 'glCallLists ($ n type lists)))
(fun (glCallList list) (Command 'glCallList ($ list)))
(fun (glBlendFunc sfactor dfactor) (Command 'glBlendFunc ($ sfactor dfactor)))
(fun (glBlendEquationSeparate modeRGB modeAlpha) (Command 'glBlendEquationSeparate ($ modeRGB modeAlpha)))
(fun (glBlendEquation mode) (Command 'glBlendEquation ($ mode)))
(fun (glBlendColor red green blue alpha) (Command 'glBlendColor ($ red green blue alpha)))
(fun (glBitmap width height xorig yorig xmove ymove bitmap) (Command 'glBitmap ($ width height xorig yorig xmove ymove bitmap)))
(fun (glBindTexture target texture) (Command 'glBindTexture ($ target texture)))
(fun (glBegin mode) (Command 'glBegin ($ mode)))
(fun (glArrayElement i) (Command 'glArrayElement ($ i)))
(fun (glAreTexturesResident n textures residences) (Command 'glAreTexturesResident ($ n textures residences)))
(fun (glAlphaFunc func ref) (Command 'glAlphaFunc ($ func ref)))
(fun (glAccum op value) (Command 'glAccum ($ op value)))
(fun (glPointParameterivNV pname params) (Command 'glPointParameterivNV ($ pname params)))
(fun (glPointParameteriNV pname param) (Command 'glPointParameteriNV ($ pname param)))
(fun (glGetCombinerStageParameterfvNV anonp86 anonp87 anonp88) (Command 'glGetCombinerStageParameterfvNV ($ anonp86 anonp87 anonp88)))
(fun (glCombinerStageParameterfvNV anonp89 anonp90 anonp91) (Command 'glCombinerStageParameterfvNV ($ anonp89 anonp90 anonp91)))
(fun (glGetFinalCombinerInputParameterivNV anonp92 anonp93 anonp94) (Command 'glGetFinalCombinerInputParameterivNV ($ anonp92 anonp93 anonp94)))
(fun (glGetFinalCombinerInputParameterfvNV anonp95 anonp96 anonp97) (Command 'glGetFinalCombinerInputParameterfvNV ($ anonp95 anonp96 anonp97)))
(fun (glGetCombinerOutputParameterivNV anonp98 anonp99 anonp100 anonp101) (Command 'glGetCombinerOutputParameterivNV ($ anonp98 anonp99 anonp100 anonp101)))
(fun (glGetCombinerOutputParameterfvNV anonp102 anonp103 anonp104 anonp105) (Command 'glGetCombinerOutputParameterfvNV ($ anonp102 anonp103 anonp104 anonp105)))
(fun (glGetCombinerInputParameterivNV anonp106 anonp107 anonp108 anonp109 anonp110) (Command 'glGetCombinerInputParameterivNV ($ anonp106 anonp107 anonp108 anonp109 anonp110)))
(fun (glGetCombinerInputParameterfvNV anonp111 anonp112 anonp113 anonp114 anonp115) (Command 'glGetCombinerInputParameterfvNV ($ anonp111 anonp112 anonp113 anonp114 anonp115)))
(fun (glFinalCombinerInputNV anonp116 anonp117 anonp118 anonp119) (Command 'glFinalCombinerInputNV ($ anonp116 anonp117 anonp118 anonp119)))
(fun (glCombinerOutputNV anonp120 anonp121 anonp122 anonp123 anonp124 anonp125 anonp126 anonp127 anonp128 anonp129) (Command 'glCombinerOutputNV ($ anonp120 anonp121 anonp122 anonp123 anonp124 anonp125 anonp126 anonp127 anonp128 anonp129)))
(fun (glCombinerInputNV anonp130 anonp131 anonp132 anonp133 anonp134 anonp135) (Command 'glCombinerInputNV ($ anonp130 anonp131 anonp132 anonp133 anonp134 anonp135)))
(fun (glCombinerParameteriNV anonp136 anonp137) (Command 'glCombinerParameteriNV ($ anonp136 anonp137)))
(fun (glCombinerParameterivNV anonp138 anonp139) (Command 'glCombinerParameterivNV ($ anonp138 anonp139)))
(fun (glCombinerParameterfNV anonp140 anonp141) (Command 'glCombinerParameterfNV ($ anonp140 anonp141)))
(fun (glCombinerParameterfvNV anonp142 anonp143) (Command 'glCombinerParameterfvNV ($ anonp142 anonp143)))
(fun (glPNTrianglesfATIX pname param) (Command 'glPNTrianglesfATIX ($ pname param)))
(fun (glPNTrianglesiATIX pname param) (Command 'glPNTrianglesiATIX ($ pname param)))
(fun (glStencilFuncSeparateATI frontfunc backfunc ref mask) (Command 'glStencilFuncSeparateATI ($ frontfunc backfunc ref mask)))
(fun (glStencilOpSeparateATI face sfail dpfail dppass) (Command 'glStencilOpSeparateATI ($ face sfail dpfail dppass)))
(fun (glBlendEquationSeparateATI equationRGB equationAlpha) (Command 'glBlendEquationSeparateATI ($ equationRGB equationAlpha)))
(fun (glPNTrianglesfATI pname param) (Command 'glPNTrianglesfATI ($ pname param)))
(fun (glPNTrianglesiATI pname param) (Command 'glPNTrianglesiATI ($ pname param)))
(fun (glGetObjectParameterivAPPLE objectType name pname params) (Command 'glGetObjectParameterivAPPLE ($ objectType name pname params)))
(fun (glObjectUnpurgeableAPPLE objectType name option) (Command 'glObjectUnpurgeableAPPLE ($ objectType name option)))
(fun (glObjectPurgeableAPPLE objectType name option) (Command 'glObjectPurgeableAPPLE ($ objectType name option)))
(fun (glFlushMappedBufferRangeAPPLE target offset size) (Command 'glFlushMappedBufferRangeAPPLE ($ target offset size)))
(fun (glBufferParameteriAPPLE target pname param) (Command 'glBufferParameteriAPPLE ($ target pname param)))
(fun (glMapVertexAttrib2fAPPLE index size u1 u2 ustride uorder v1 v2 vstride vorder points) (Command 'glMapVertexAttrib2fAPPLE ($ index size u1 u2 ustride uorder v1 v2 vstride vorder points)))
(fun (glMapVertexAttrib2dAPPLE index size u1 u2 ustride uorder v1 v2 vstride vorder points) (Command 'glMapVertexAttrib2dAPPLE ($ index size u1 u2 ustride uorder v1 v2 vstride vorder points)))
(fun (glMapVertexAttrib1fAPPLE index size u1 u2 stride order points) (Command 'glMapVertexAttrib1fAPPLE ($ index size u1 u2 stride order points)))
(fun (glMapVertexAttrib1dAPPLE index size u1 u2 stride order points) (Command 'glMapVertexAttrib1dAPPLE ($ index size u1 u2 stride order points)))
(fun (glIsVertexAttribEnabledAPPLE index pname) (Command 'glIsVertexAttribEnabledAPPLE ($ index pname)))
(fun (glDisableVertexAttribAPPLE index pname) (Command 'glDisableVertexAttribAPPLE ($ index pname)))
(fun (glEnableVertexAttribAPPLE index pname) (Command 'glEnableVertexAttribAPPLE ($ index pname)))
(fun (glSwapAPPLE) (Command 'glSwapAPPLE ($)))
(fun (glFinishRenderAPPLE) (Command 'glFinishRenderAPPLE ($)))
(fun (glFlushRenderAPPLE) (Command 'glFlushRenderAPPLE ($)))
(fun (glMultiDrawRangeElementArrayAPPLE mode start end first count primcount) (Command 'glMultiDrawRangeElementArrayAPPLE ($ mode start end first count primcount)))
(fun (glMultiDrawElementArrayAPPLE mode first count primcount) (Command 'glMultiDrawElementArrayAPPLE ($ mode first count primcount)))
(fun (glDrawRangeElementArrayAPPLE mode start end first count) (Command 'glDrawRangeElementArrayAPPLE ($ mode start end first count)))
(fun (glDrawElementArrayAPPLE mode first count) (Command 'glDrawElementArrayAPPLE ($ mode first count)))
(fun (glElementPointerAPPLE type pointer) (Command 'glElementPointerAPPLE ($ type pointer)))
(fun (glFinishObjectAPPLE object name) (Command 'glFinishObjectAPPLE ($ object name)))
(fun (glTestObjectAPPLE object name) (Command 'glTestObjectAPPLE ($ object name)))
(fun (glFinishFenceAPPLE fence) (Command 'glFinishFenceAPPLE ($ fence)))
(fun (glTestFenceAPPLE fence) (Command 'glTestFenceAPPLE ($ fence)))
(fun (glIsFenceAPPLE fence) (Command 'glIsFenceAPPLE ($ fence)))
(fun (glSetFenceAPPLE fence) (Command 'glSetFenceAPPLE ($ fence)))
(fun (glDeleteFencesAPPLE n fences) (Command 'glDeleteFencesAPPLE ($ n fences)))
(fun (glGenFencesAPPLE n fences) (Command 'glGenFencesAPPLE ($ n fences)))
(fun (glIsVertexArrayAPPLE id) (Command 'glIsVertexArrayAPPLE ($ id)))
(fun (glGenVertexArraysAPPLE n ids) (Command 'glGenVertexArraysAPPLE ($ n ids)))
(fun (glDeleteVertexArraysAPPLE n ids) (Command 'glDeleteVertexArraysAPPLE ($ n ids)))
(fun (glBindVertexArrayAPPLE id) (Command 'glBindVertexArrayAPPLE ($ id)))
(fun (glVertexArrayParameteriAPPLE pname param) (Command 'glVertexArrayParameteriAPPLE ($ pname param)))
(fun (glFlushVertexArrayRangeAPPLE length pointer) (Command 'glFlushVertexArrayRangeAPPLE ($ length pointer)))
(fun (glVertexArrayRangeAPPLE length pointer) (Command 'glVertexArrayRangeAPPLE ($ length pointer)))
(fun (glGetTexParameterPointervAPPLE target pname params) (Command 'glGetTexParameterPointervAPPLE ($ target pname params)))
(fun (glTextureRangeAPPLE target length pointer) (Command 'glTextureRangeAPPLE ($ target length pointer)))
(fun (glFramebufferRenderbufferEXT target attachment renderbuffertarget renderbuffer) (Command 'glFramebufferRenderbufferEXT ($ target attachment renderbuffertarget renderbuffer)))
(fun (glFramebufferTexture2DEXT target attachment textarget texture level) (Command 'glFramebufferTexture2DEXT ($ target attachment textarget texture level)))
(fun (glCheckFramebufferStatusEXT target) (Command 'glCheckFramebufferStatusEXT ($ target)))
(fun (glGenFramebuffersEXT n framebuffers) (Command 'glGenFramebuffersEXT ($ n framebuffers)))
(fun (glDeleteFramebuffersEXT n framebuffers) (Command 'glDeleteFramebuffersEXT ($ n framebuffers)))
(fun (glBindFramebufferEXT target framebuffer) (Command 'glBindFramebufferEXT ($ target framebuffer)))
(fun (glRenderbufferStorageEXT target internalformat width height) (Command 'glRenderbufferStorageEXT ($ target internalformat width height)))
(fun (glGenRenderbuffersEXT n renderbuffers) (Command 'glGenRenderbuffersEXT ($ n renderbuffers)))
(fun (glDeleteRenderbuffersEXT n renderbuffers) (Command 'glDeleteRenderbuffersEXT ($ n renderbuffers)))
(fun (glBindRenderbufferEXT target renderbuffer) (Command 'glBindRenderbufferEXT ($ target renderbuffer)))
(fun (glDrawBuffersARB n bufs) (Command 'glDrawBuffersARB ($ n bufs)))
(fun (glGetBufferPointervARB target pname params) (Command 'glGetBufferPointervARB ($ target pname params)))
(fun (glGetBufferParameterivARB target pname params) (Command 'glGetBufferParameterivARB ($ target pname params)))
(fun (glUnmapBufferARB target) (Command 'glUnmapBufferARB ($ target)))
(fun (glMapBufferARB target access) (Command 'glMapBufferARB ($ target access)))
(fun (glGetBufferSubDataARB target offset size data) (Command 'glGetBufferSubDataARB ($ target offset size data)))
(fun (glBufferSubDataARB target offset size data) (Command 'glBufferSubDataARB ($ target offset size data)))
(fun (glBufferDataARB target size data usage) (Command 'glBufferDataARB ($ target size data usage)))
(fun (glIsBufferARB buffer) (Command 'glIsBufferARB ($ buffer)))
(fun (glGenBuffersARB n buffers) (Command 'glGenBuffersARB ($ n buffers)))
(fun (glDeleteBuffersARB n buffers) (Command 'glDeleteBuffersARB ($ n buffers)))
(fun (glBindBufferARB target buffer) (Command 'glBindBufferARB ($ target buffer)))
(fun (glGetAttribLocationARB programObj name) (Command 'glGetAttribLocationARB ($ programObj name)))
(fun (glGetActiveAttribARB programObj index maxLength length size type name) (Command 'glGetActiveAttribARB ($ programObj index maxLength length size type name)))
(fun (glBindAttribLocationARB programObj index name) (Command 'glBindAttribLocationARB ($ programObj index name)))
(fun (glGetShaderSourceARB obj maxLength length source) (Command 'glGetShaderSourceARB ($ obj maxLength length source)))
(fun (glGetUniformivARB programObj location params) (Command 'glGetUniformivARB ($ programObj location params)))
(fun (glGetUniformfvARB programObj location params) (Command 'glGetUniformfvARB ($ programObj location params)))
(fun (glGetActiveUniformARB programObj index maxLength length size type name) (Command 'glGetActiveUniformARB ($ programObj index maxLength length size type name)))
(fun (glGetUniformLocationARB programObj name) (Command 'glGetUniformLocationARB ($ programObj name)))
(fun (glGetAttachedObjectsARB containerObj maxCount count obj) (Command 'glGetAttachedObjectsARB ($ containerObj maxCount count obj)))
(fun (glGetInfoLogARB obj maxLength length infoLog) (Command 'glGetInfoLogARB ($ obj maxLength length infoLog)))
(fun (glGetObjectParameterivARB obj pname params) (Command 'glGetObjectParameterivARB ($ obj pname params)))
(fun (glGetObjectParameterfvARB obj pname params) (Command 'glGetObjectParameterfvARB ($ obj pname params)))
(fun (glUniformMatrix4fvARB location count transpose value) (Command 'glUniformMatrix4fvARB ($ location count transpose value)))
(fun (glUniformMatrix3fvARB location count transpose value) (Command 'glUniformMatrix3fvARB ($ location count transpose value)))
(fun (glUniformMatrix2fvARB location count transpose value) (Command 'glUniformMatrix2fvARB ($ location count transpose value)))
(fun (glUniform4ivARB location count value) (Command 'glUniform4ivARB ($ location count value)))
(fun (glUniform3ivARB location count value) (Command 'glUniform3ivARB ($ location count value)))
(fun (glUniform2ivARB location count value) (Command 'glUniform2ivARB ($ location count value)))
(fun (glUniform1ivARB location count value) (Command 'glUniform1ivARB ($ location count value)))
(fun (glUniform4fvARB location count value) (Command 'glUniform4fvARB ($ location count value)))
(fun (glUniform3fvARB location count value) (Command 'glUniform3fvARB ($ location count value)))
(fun (glUniform2fvARB location count value) (Command 'glUniform2fvARB ($ location count value)))
(fun (glUniform1fvARB location count value) (Command 'glUniform1fvARB ($ location count value)))
(fun (glUniform4iARB location v0 v1 v2 v3) (Command 'glUniform4iARB ($ location v0 v1 v2 v3)))
(fun (glUniform3iARB location v0 v1 v2) (Command 'glUniform3iARB ($ location v0 v1 v2)))
(fun (glUniform2iARB location v0 v1) (Command 'glUniform2iARB ($ location v0 v1)))
(fun (glUniform1iARB location v0) (Command 'glUniform1iARB ($ location v0)))
(fun (glUniform4fARB location v0 v1 v2 v3) (Command 'glUniform4fARB ($ location v0 v1 v2 v3)))
(fun (glUniform3fARB location v0 v1 v2) (Command 'glUniform3fARB ($ location v0 v1 v2)))
(fun (glUniform2fARB location v0 v1) (Command 'glUniform2fARB ($ location v0 v1)))
(fun (glUniform1fARB location v0) (Command 'glUniform1fARB ($ location v0)))
(fun (glValidateProgramARB programObj) (Command 'glValidateProgramARB ($ programObj)))
(fun (glUseProgramObjectARB programObj) (Command 'glUseProgramObjectARB ($ programObj)))
(fun (glLinkProgramARB programObj) (Command 'glLinkProgramARB ($ programObj)))
(fun (glAttachObjectARB containerObj obj) (Command 'glAttachObjectARB ($ containerObj obj)))
(fun (glCreateProgramObjectARB) (Command 'glCreateProgramObjectARB ($)))
(fun (glCompileShaderARB shaderObj) (Command 'glCompileShaderARB ($ shaderObj)))
(fun (glShaderSourceARB shaderObj count string length) (Command 'glShaderSourceARB ($ shaderObj count string length)))
(fun (glCreateShaderObjectARB shaderType) (Command 'glCreateShaderObjectARB ($ shaderType)))
(fun (glDetachObjectARB containerObj attachedObj) (Command 'glDetachObjectARB ($ containerObj attachedObj)))
(fun (glGetHandleARB pname) (Command 'glGetHandleARB ($ pname)))
(fun (glDeleteObjectARB obj) (Command 'glDeleteObjectARB ($ obj)))
(fun (glGetVertexAttribivARB index pname params) (Command 'glGetVertexAttribivARB ($ index pname params)))
(fun (glGetVertexAttribfvARB index pname params) (Command 'glGetVertexAttribfvARB ($ index pname params)))
(fun (glGetVertexAttribdvARB index pname params) (Command 'glGetVertexAttribdvARB ($ index pname params)))
(fun (glGetVertexAttribPointervARB index pname pointer) (Command 'glGetVertexAttribPointervARB ($ index pname pointer)))
(fun (glEnableVertexAttribArrayARB index) (Command 'glEnableVertexAttribArrayARB ($ index)))
(fun (glDisableVertexAttribArrayARB index) (Command 'glDisableVertexAttribArrayARB ($ index)))
(fun (glVertexAttribPointerARB index size type normalized stride pointer) (Command 'glVertexAttribPointerARB ($ index size type normalized stride pointer)))
(fun (glVertexAttrib4usvARB index v) (Command 'glVertexAttrib4usvARB ($ index v)))
(fun (glVertexAttrib4uivARB index v) (Command 'glVertexAttrib4uivARB ($ index v)))
(fun (glVertexAttrib4ubvARB index v) (Command 'glVertexAttrib4ubvARB ($ index v)))
(fun (glVertexAttrib4svARB index v) (Command 'glVertexAttrib4svARB ($ index v)))
(fun (glVertexAttrib4sARB index x y z w) (Command 'glVertexAttrib4sARB ($ index x y z w)))
(fun (glVertexAttrib4ivARB index v) (Command 'glVertexAttrib4ivARB ($ index v)))
(fun (glVertexAttrib4fvARB index v) (Command 'glVertexAttrib4fvARB ($ index v)))
(fun (glVertexAttrib4fARB index x y z w) (Command 'glVertexAttrib4fARB ($ index x y z w)))
(fun (glVertexAttrib4dvARB index v) (Command 'glVertexAttrib4dvARB ($ index v)))
(fun (glVertexAttrib4dARB index x y z w) (Command 'glVertexAttrib4dARB ($ index x y z w)))
(fun (glVertexAttrib4bvARB index v) (Command 'glVertexAttrib4bvARB ($ index v)))
(fun (glVertexAttrib4NusvARB index v) (Command 'glVertexAttrib4NusvARB ($ index v)))
(fun (glVertexAttrib4NuivARB index v) (Command 'glVertexAttrib4NuivARB ($ index v)))
(fun (glVertexAttrib4NubvARB index v) (Command 'glVertexAttrib4NubvARB ($ index v)))
(fun (glVertexAttrib4NubARB index x y z w) (Command 'glVertexAttrib4NubARB ($ index x y z w)))
(fun (glVertexAttrib4NsvARB index v) (Command 'glVertexAttrib4NsvARB ($ index v)))
(fun (glVertexAttrib4NivARB index v) (Command 'glVertexAttrib4NivARB ($ index v)))
(fun (glVertexAttrib4NbvARB index v) (Command 'glVertexAttrib4NbvARB ($ index v)))
(fun (glVertexAttrib3svARB index v) (Command 'glVertexAttrib3svARB ($ index v)))
(fun (glVertexAttrib3sARB index x y z) (Command 'glVertexAttrib3sARB ($ index x y z)))
(fun (glVertexAttrib3fvARB index v) (Command 'glVertexAttrib3fvARB ($ index v)))
(fun (glVertexAttrib3fARB index x y z) (Command 'glVertexAttrib3fARB ($ index x y z)))
(fun (glVertexAttrib3dvARB index v) (Command 'glVertexAttrib3dvARB ($ index v)))
(fun (glVertexAttrib3dARB index x y z) (Command 'glVertexAttrib3dARB ($ index x y z)))
(fun (glVertexAttrib2svARB index v) (Command 'glVertexAttrib2svARB ($ index v)))
(fun (glVertexAttrib2sARB index x y) (Command 'glVertexAttrib2sARB ($ index x y)))
(fun (glVertexAttrib2fvARB index v) (Command 'glVertexAttrib2fvARB ($ index v)))
(fun (glVertexAttrib2fARB index x y) (Command 'glVertexAttrib2fARB ($ index x y)))
(fun (glVertexAttrib2dvARB index v) (Command 'glVertexAttrib2dvARB ($ index v)))
(fun (glVertexAttrib2dARB index x y) (Command 'glVertexAttrib2dARB ($ index x y)))
(fun (glVertexAttrib1svARB index v) (Command 'glVertexAttrib1svARB ($ index v)))
(fun (glVertexAttrib1sARB index x) (Command 'glVertexAttrib1sARB ($ index x)))
(fun (glVertexAttrib1fvARB index v) (Command 'glVertexAttrib1fvARB ($ index v)))
(fun (glVertexAttrib1fARB index x) (Command 'glVertexAttrib1fARB ($ index x)))
(fun (glVertexAttrib1dvARB index v) (Command 'glVertexAttrib1dvARB ($ index v)))
(fun (glVertexAttrib1dARB index x) (Command 'glVertexAttrib1dARB ($ index x)))
(fun (glGetProgramivARB target pname params) (Command 'glGetProgramivARB ($ target pname params)))
(fun (glGetProgramStringARB target pname string) (Command 'glGetProgramStringARB ($ target pname string)))
(fun (glProgramStringARB target format len string) (Command 'glProgramStringARB ($ target format len string)))
(fun (glGetProgramLocalParameterfvARB target index params) (Command 'glGetProgramLocalParameterfvARB ($ target index params)))
(fun (glGetProgramLocalParameterdvARB target index params) (Command 'glGetProgramLocalParameterdvARB ($ target index params)))
(fun (glGetProgramEnvParameterfvARB target index params) (Command 'glGetProgramEnvParameterfvARB ($ target index params)))
(fun (glGetProgramEnvParameterdvARB target index params) (Command 'glGetProgramEnvParameterdvARB ($ target index params)))
(fun (glProgramLocalParameter4fvARB target index params) (Command 'glProgramLocalParameter4fvARB ($ target index params)))
(fun (glProgramLocalParameter4fARB target index x y z w) (Command 'glProgramLocalParameter4fARB ($ target index x y z w)))
(fun (glProgramLocalParameter4dvARB target index params) (Command 'glProgramLocalParameter4dvARB ($ target index params)))
(fun (glProgramLocalParameter4dARB target index x y z w) (Command 'glProgramLocalParameter4dARB ($ target index x y z w)))
(fun (glProgramEnvParameter4fvARB target index params) (Command 'glProgramEnvParameter4fvARB ($ target index params)))
(fun (glProgramEnvParameter4fARB target index x y z w) (Command 'glProgramEnvParameter4fARB ($ target index x y z w)))
(fun (glProgramEnvParameter4dvARB target index params) (Command 'glProgramEnvParameter4dvARB ($ target index params)))
(fun (glProgramEnvParameter4dARB target index x y z w) (Command 'glProgramEnvParameter4dARB ($ target index x y z w)))
(fun (glIsProgramARB program) (Command 'glIsProgramARB ($ program)))
(fun (glGenProgramsARB n programs) (Command 'glGenProgramsARB ($ n programs)))
(fun (glDeleteProgramsARB n programs) (Command 'glDeleteProgramsARB ($ n programs)))
(fun (glBindProgramARB target program) (Command 'glBindProgramARB ($ target program)))
(fun (glPointParameterfvARB pname params) (Command 'glPointParameterfvARB ($ pname params)))
(fun (glPointParameterfARB pname param) (Command 'glPointParameterfARB ($ pname param)))
(fun (glGetQueryObjectuivARB id pname params) (Command 'glGetQueryObjectuivARB ($ id pname params)))
(fun (glGetQueryObjectivARB id pname params) (Command 'glGetQueryObjectivARB ($ id pname params)))
(fun (glGetQueryivARB target pname params) (Command 'glGetQueryivARB ($ target pname params)))
(fun (glEndQueryARB target) (Command 'glEndQueryARB ($ target)))
(fun (glBeginQueryARB target id) (Command 'glBeginQueryARB ($ target id)))
(fun (glIsQueryARB id) (Command 'glIsQueryARB ($ id)))
(fun (glDeleteQueriesARB n ids) (Command 'glDeleteQueriesARB ($ n ids)))
(fun (glGenQueriesARB n ids) (Command 'glGenQueriesARB ($ n ids)))
(fun (glWindowPos3svARB anonp235) (Command 'glWindowPos3svARB ($ anonp235)))
(fun (glWindowPos3sARB anonp236 anonp237 anonp238) (Command 'glWindowPos3sARB ($ anonp236 anonp237 anonp238)))
(fun (glWindowPos3ivARB anonp239) (Command 'glWindowPos3ivARB ($ anonp239)))
(fun (glWindowPos3iARB anonp240 anonp241 anonp242) (Command 'glWindowPos3iARB ($ anonp240 anonp241 anonp242)))
(fun (glWindowPos3fvARB anonp243) (Command 'glWindowPos3fvARB ($ anonp243)))
(fun (glWindowPos3fARB anonp244 anonp245 anonp246) (Command 'glWindowPos3fARB ($ anonp244 anonp245 anonp246)))
(fun (glWindowPos3dvARB anonp247) (Command 'glWindowPos3dvARB ($ anonp247)))
(fun (glWindowPos3dARB anonp248 anonp249 anonp250) (Command 'glWindowPos3dARB ($ anonp248 anonp249 anonp250)))
(fun (glWindowPos2svARB anonp251) (Command 'glWindowPos2svARB ($ anonp251)))
(fun (glWindowPos2sARB anonp252 anonp253) (Command 'glWindowPos2sARB ($ anonp252 anonp253)))
(fun (glWindowPos2ivARB anonp254) (Command 'glWindowPos2ivARB ($ anonp254)))
(fun (glWindowPos2iARB anonp255 anonp256) (Command 'glWindowPos2iARB ($ anonp255 anonp256)))
(fun (glWindowPos2fvARB anonp257) (Command 'glWindowPos2fvARB ($ anonp257)))
(fun (glWindowPos2fARB anonp258 anonp259) (Command 'glWindowPos2fARB ($ anonp258 anonp259)))
(fun (glWindowPos2dvARB anonp260) (Command 'glWindowPos2dvARB ($ anonp260)))
(fun (glWindowPos2dARB anonp261 anonp262) (Command 'glWindowPos2dARB ($ anonp261 anonp262)))
(fun (glVertexBlendARB anonp263) (Command 'glVertexBlendARB ($ anonp263)))
(fun (glWeightPointerARB anonp264 anonp265 anonp266 anonp267) (Command 'glWeightPointerARB ($ anonp264 anonp265 anonp266 anonp267)))
(fun (glWeightuivARB anonp268 anonp269) (Command 'glWeightuivARB ($ anonp268 anonp269)))
(fun (glWeightusvARB anonp270 anonp271) (Command 'glWeightusvARB ($ anonp270 anonp271)))
(fun (glWeightubvARB anonp272 anonp273) (Command 'glWeightubvARB ($ anonp272 anonp273)))
(fun (glWeightdvARB anonp274 anonp275) (Command 'glWeightdvARB ($ anonp274 anonp275)))
(fun (glWeightfvARB anonp276 anonp277) (Command 'glWeightfvARB ($ anonp276 anonp277)))
(fun (glWeightivARB anonp278 anonp279) (Command 'glWeightivARB ($ anonp278 anonp279)))
(fun (glWeightsvARB anonp280 anonp281) (Command 'glWeightsvARB ($ anonp280 anonp281)))
(fun (glWeightbvARB anonp282 anonp283) (Command 'glWeightbvARB ($ anonp282 anonp283)))
(fun (glGetCompressedTexImageARB anonp284 anonp285 anonp286) (Command 'glGetCompressedTexImageARB ($ anonp284 anonp285 anonp286)))
(fun (glCompressedTexSubImage1DARB anonp287 anonp288 anonp289 anonp290 anonp291 anonp292 anonp293) (Command 'glCompressedTexSubImage1DARB ($ anonp287 anonp288 anonp289 anonp290 anonp291 anonp292 anonp293)))
(fun (glCompressedTexSubImage2DARB anonp294 anonp295 anonp296 anonp297 anonp298 anonp299 anonp300 anonp301 anonp302) (Command 'glCompressedTexSubImage2DARB ($ anonp294 anonp295 anonp296 anonp297 anonp298 anonp299 anonp300 anonp301 anonp302)))
(fun (glCompressedTexSubImage3DARB anonp303 anonp304 anonp305 anonp306 anonp307 anonp308 anonp309 anonp310 anonp311 anonp312 anonp313) (Command 'glCompressedTexSubImage3DARB ($ anonp303 anonp304 anonp305 anonp306 anonp307 anonp308 anonp309 anonp310 anonp311 anonp312 anonp313)))
(fun (glCompressedTexImage1DARB anonp314 anonp315 anonp316 anonp317 anonp318 anonp319 anonp320) (Command 'glCompressedTexImage1DARB ($ anonp314 anonp315 anonp316 anonp317 anonp318 anonp319 anonp320)))
(fun (glCompressedTexImage2DARB anonp321 anonp322 anonp323 anonp324 anonp325 anonp326 anonp327 anonp328) (Command 'glCompressedTexImage2DARB ($ anonp321 anonp322 anonp323 anonp324 anonp325 anonp326 anonp327 anonp328)))
(fun (glCompressedTexImage3DARB anonp329 anonp330 anonp331 anonp332 anonp333 anonp334 anonp335 anonp336 anonp337) (Command 'glCompressedTexImage3DARB ($ anonp329 anonp330 anonp331 anonp332 anonp333 anonp334 anonp335 anonp336 anonp337)))
(fun (glSamplePassARB anonp338) (Command 'glSamplePassARB ($ anonp338)))
(fun (glSampleCoverageARB anonp339 anonp340) (Command 'glSampleCoverageARB ($ anonp339 anonp340)))
(fun (glMultTransposeMatrixdARB anonp341) (Command 'glMultTransposeMatrixdARB ($ anonp341)))
(fun (glMultTransposeMatrixfARB anonp342) (Command 'glMultTransposeMatrixfARB ($ anonp342)))
(fun (glLoadTransposeMatrixdARB anonp343) (Command 'glLoadTransposeMatrixdARB ($ anonp343)))
(fun (glLoadTransposeMatrixfARB anonp344) (Command 'glLoadTransposeMatrixfARB ($ anonp344)))
(fun (glMultiTexCoord4svARB anonp345 anonp346) (Command 'glMultiTexCoord4svARB ($ anonp345 anonp346)))
(fun (glMultiTexCoord4sARB anonp347 anonp348 anonp349 anonp350 anonp351) (Command 'glMultiTexCoord4sARB ($ anonp347 anonp348 anonp349 anonp350 anonp351)))
(fun (glMultiTexCoord4ivARB anonp352 anonp353) (Command 'glMultiTexCoord4ivARB ($ anonp352 anonp353)))
(fun (glMultiTexCoord4iARB anonp354 anonp355 anonp356 anonp357 anonp358) (Command 'glMultiTexCoord4iARB ($ anonp354 anonp355 anonp356 anonp357 anonp358)))
(fun (glMultiTexCoord4fvARB anonp359 anonp360) (Command 'glMultiTexCoord4fvARB ($ anonp359 anonp360)))
(fun (glMultiTexCoord4fARB anonp361 anonp362 anonp363 anonp364 anonp365) (Command 'glMultiTexCoord4fARB ($ anonp361 anonp362 anonp363 anonp364 anonp365)))
(fun (glMultiTexCoord4dvARB anonp366 anonp367) (Command 'glMultiTexCoord4dvARB ($ anonp366 anonp367)))
(fun (glMultiTexCoord4dARB anonp368 anonp369 anonp370 anonp371 anonp372) (Command 'glMultiTexCoord4dARB ($ anonp368 anonp369 anonp370 anonp371 anonp372)))
(fun (glMultiTexCoord3svARB anonp373 anonp374) (Command 'glMultiTexCoord3svARB ($ anonp373 anonp374)))
(fun (glMultiTexCoord3sARB anonp375 anonp376 anonp377 anonp378) (Command 'glMultiTexCoord3sARB ($ anonp375 anonp376 anonp377 anonp378)))
(fun (glMultiTexCoord3ivARB anonp379 anonp380) (Command 'glMultiTexCoord3ivARB ($ anonp379 anonp380)))
(fun (glMultiTexCoord3iARB anonp381 anonp382 anonp383 anonp384) (Command 'glMultiTexCoord3iARB ($ anonp381 anonp382 anonp383 anonp384)))
(fun (glMultiTexCoord3fvARB anonp385 anonp386) (Command 'glMultiTexCoord3fvARB ($ anonp385 anonp386)))
(fun (glMultiTexCoord3fARB anonp387 anonp388 anonp389 anonp390) (Command 'glMultiTexCoord3fARB ($ anonp387 anonp388 anonp389 anonp390)))
(fun (glMultiTexCoord3dvARB anonp391 anonp392) (Command 'glMultiTexCoord3dvARB ($ anonp391 anonp392)))
(fun (glMultiTexCoord3dARB anonp393 anonp394 anonp395 anonp396) (Command 'glMultiTexCoord3dARB ($ anonp393 anonp394 anonp395 anonp396)))
(fun (glMultiTexCoord2svARB anonp397 anonp398) (Command 'glMultiTexCoord2svARB ($ anonp397 anonp398)))
(fun (glMultiTexCoord2sARB anonp399 anonp400 anonp401) (Command 'glMultiTexCoord2sARB ($ anonp399 anonp400 anonp401)))
(fun (glMultiTexCoord2ivARB anonp402 anonp403) (Command 'glMultiTexCoord2ivARB ($ anonp402 anonp403)))
(fun (glMultiTexCoord2iARB anonp404 anonp405 anonp406) (Command 'glMultiTexCoord2iARB ($ anonp404 anonp405 anonp406)))
(fun (glMultiTexCoord2fvARB anonp407 anonp408) (Command 'glMultiTexCoord2fvARB ($ anonp407 anonp408)))
(fun (glMultiTexCoord2fARB anonp409 anonp410 anonp411) (Command 'glMultiTexCoord2fARB ($ anonp409 anonp410 anonp411)))
(fun (glMultiTexCoord2dvARB anonp412 anonp413) (Command 'glMultiTexCoord2dvARB ($ anonp412 anonp413)))
(fun (glMultiTexCoord2dARB anonp414 anonp415 anonp416) (Command 'glMultiTexCoord2dARB ($ anonp414 anonp415 anonp416)))
(fun (glMultiTexCoord1svARB anonp417 anonp418) (Command 'glMultiTexCoord1svARB ($ anonp417 anonp418)))
(fun (glMultiTexCoord1sARB anonp419 anonp420) (Command 'glMultiTexCoord1sARB ($ anonp419 anonp420)))
(fun (glMultiTexCoord1ivARB anonp421 anonp422) (Command 'glMultiTexCoord1ivARB ($ anonp421 anonp422)))
(fun (glMultiTexCoord1iARB anonp423 anonp424) (Command 'glMultiTexCoord1iARB ($ anonp423 anonp424)))
(fun (glMultiTexCoord1fvARB anonp425 anonp426) (Command 'glMultiTexCoord1fvARB ($ anonp425 anonp426)))
(fun (glMultiTexCoord1fARB anonp427 anonp428) (Command 'glMultiTexCoord1fARB ($ anonp427 anonp428)))
(fun (glMultiTexCoord1dvARB anonp429 anonp430) (Command 'glMultiTexCoord1dvARB ($ anonp429 anonp430)))
(fun (glMultiTexCoord1dARB anonp431 anonp432) (Command 'glMultiTexCoord1dARB ($ anonp431 anonp432)))
(fun (glClientActiveTextureARB anonp433) (Command 'glClientActiveTextureARB ($ anonp433)))
(fun (glActiveTextureARB anonp434) (Command 'glActiveTextureARB ($ anonp434)))
(def _GL_VERTEX_PROGRAM_TWO_SIDE 34371)
(def _GL_COLOR_TABLE 32976)
(def _GL_FLOAT_MAT4x3 35690)
(def _GLUT_LAYER_IN_USE 801)
(def _GL_RGBA_INTEGER_EXT 36249)
(def _GL_STORAGE_CLIENT_APPLE 34228)
(def _GLU_END 100102)
(def _GL_EXT_compiled_vertex_array 1)
(def _GL_ZOOM_Y 3351)
(def _GL_POINT_SPRITE_COORD_ORIGIN 36000)
(def _GL_SOURCE4_ALPHA 34188)
(def __LDBL_HAS_QUIET_NAN__ 1)
(def _GL_DST_ALPHA 772)
(def _GL_FOG_COORD_ARRAY_BUFFER_BINDING_ARB 34973)
(def _GL_LUMINANCE12 32833)
(def _GL_PN_TRIANGLES_NORMAL_MODE_ATIX 24723)
(def _GL_PROGRAM_INSTRUCTIONS_ARB 34976)
(def __DBL_HAS_INFINITY__ 1)
(def _GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT 36058)
(def _GL_FOG_START 2915)
(def _GL_ONE_MINUS_CONSTANT_ALPHA 32772)
(def _GL_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB 34825)
(def _GL_WEIGHT_ARRAY_BUFFER_BINDING_ARB 34974)
(def _GLU_NURBS_ERROR 100103)
(def _GL_CLIP_PLANE0 12288)
(def _GL_STENCIL_BACK_VALUE_MASK 36004)
(def _GL_TEXTURE_LUMINANCE_TYPE_ARB 35860)
(def _GL_SRC5_ALPHA 34189)
(def _GL_INT_VEC3_ARB 35668)
(def _GLU_OBJECT_PARAMETRIC_ERROR 100208)
(def _GL_MULT 259)
(def _GL_NV_light_max_exponent 1)
(def _GL_MULTISAMPLE 32925)
(def _GLUT_NO_RECOVERY 1024)
(def _GL_EVAL_BIT 65536)
(def _GL_POST_COLOR_MATRIX_GREEN_BIAS 32953)
(def _GL_RGBA_UNSIGNED_DOT_PRODUCT_MAPPING_NV 34521)
(def _GL_CONVOLUTION_1D 32784)
(def _GLU_NURBS_ERROR22 100272)
(def _GLU_NURBS_ERROR34 100284)
(def _GL_RGBA_FLOAT32_ATI 34836)
(def _GL_INTENSITY8UI_EXT 36223)
(def _GL_GENERATE_MIPMAP_HINT_SGIS 33170)
(def _GL_COMPRESSED_SLUMINANCE_ALPHA_EXT 35915)
(def _GL_INCR 7682)
(def _GL_SOURCE7_RGB_ARB 34183)
(def _GL_VERTEX_ATTRIB_ARRAY_STRIDE_ARB 34340)
(def _GL_DOUBLE 5130)
(def _GL_SOURCE0_RGB_ARB 34176)
(def _GL_SIGNED_RGB8_UNSIGNED_ALPHA8_NV 34573)
(def _GL_INDEX_ARRAY 32887)
(def _GL_PN_TRIANGLES_POINT_MODE_ATI 24722)
(def _GL_BGR_EXT 32992)
(def _GL_SAMPLE_ALPHA_TO_COVERAGE_ARB 32926)
(def _GL_SOURCE0_ALPHA_ARB 34184)
(def _GL_LUMINANCE_ALPHA16F_ARB 34847)
(def _GL_TEXTURE_STENCIL_SIZE_EXT 35057)
(def _GL_POLYGON_STIPPLE 2882)
(def _GLUT_WINDOW_WIDTH 102)
(def _GL_MINMAX 32814)
(def _GL_SAMPLER_1D 35677)
(def _GL_PROXY_TEXTURE_1D 32867)
(def _GL_TEXTURE_HEIGHT 4097)
(def _GL_ATTACHED_SHADERS 35717)
(def _GL_LIGHT_MODEL_COLOR_CONTROL 33272)
(def _GL_N3F_V3F 10789)
(def _GL_PIXEL_MAP_I_TO_I 3184)
(def _GL_TEXTURE_INTERNAL_FORMAT 4099)
(def _GL_TEXTURE_COMPARE_MODE 34892)
(def _GL_BLEND_SRC_RGB_EXT 32969)
(def _GL_CONVOLUTION_BORDER_MODE 32787)
(def _GLU_NURBS_NORMAL 100166)
(def _GL_MAX_PROJECTION_STACK_DEPTH 3384)
(def _GL_ARB_multitexture 1)
(def _GLU_NURBS_VERTEX_EXT 100165)
(def _GL_SOURCE3_ALPHA_ARB 34187)
(def _GL_MAX_PN_TRIANGLES_TESSELATION_LEVEL_ATIX 24721)
(def _GL_APPLE_flush_buffer_range 1)
(def _GL_EXT_multi_draw_arrays 1)
(def _GLUT_CURSOR_DESTROY 3)
(def _GL_OFFSET_HILO_TEXTURE_2D_NV 34900)
(def _GL_FLOAT_MAT3x4 35688)
(def _GL_VERTEX_ARRAY_BINDING_APPLE 34229)
(def _GL_ALPHA8UI_EXT 36222)
(def _GLUT_CURSOR_TOP_LEFT_CORNER 16)
(def _GL_INT_VEC4 35669)
(def _GL_T2F_C4UB_V3F 10793)
(def _GL_ALPHA4 32827)
(def _GL_PIXEL_MAP_I_TO_B 3188)
(def _GL_CLIP_VOLUME_CLIPPING_HINT_EXT 33008)
(def _GL_UNSIGNED_INT_S8_S8_8_8_NV 34522)
(def _GL_DRAW_BUFFER14 34867)
(def _GL_RGB16UI_EXT 36215)
(def _GL_AUX_DEPTH_STENCIL_APPLE 35348)
(def _GL_RGBA_FLOAT16_APPLE 34842)
(def _GL_VERTEX_ATTRIB_MAP1_COEFF_APPLE 35331)
(def _GL_TRANSPOSE_TEXTURE_MATRIX 34021)
(def _GL_TRANSPOSE_PROJECTION_MATRIX 34020)
(def _GL_DOT_PRODUCT_REFLECT_CUBE_MAP_NV 34546)
(def _GL_ZERO 0)
(def _GL_TRANSPOSE_MODELVIEW_MATRIX_ARB 34019)
(def _GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT 36264)
(def _GL_COLOR_MATRIX_SGI 32945)
(def _GL_PACK_SKIP_ROWS 3331)
(def _GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT 36059)
(def _GL_HINT_BIT 32768)
(def _GL_TEXTURE_MAX_LOD 33083)
(def _GL_DOT_PRODUCT_DEPTH_REPLACE_NV 34541)
(def _GL_SAMPLE_COVERAGE_VALUE_ARB 32938)
(def _GLU_NURBS_BEGIN 100164)
(def _GL_TEXTURE_GREEN_SIZE 32861)
(def _GL_TEXTURE_RECTANGLE_ARB 34037)
(def _GL_PROXY_TEXTURE_CUBE_MAP 34075)
(def _GL_SMOOTH_LINE_WIDTH_RANGE 2850)
(def _GL_TEXTURE8_ARB 33992)
(def _GL_CULL_FACE_MODE 2885)
(def __FLT_DIG__ 6)
(def _GL_GEOMETRY_SHADER_EXT 36313)
(def _GL_T2F_C3F_V3F 10794)
(def _GL_DRAW_BUFFER8 34861)
(def _GL_RETURN 258)
(def _GL_INTENSITY4 32842)
(def _GL_MAP2_TEXTURE_COORD_1 3507)
(def _GL_INT_SAMPLER_1D_ARRAY_EXT 36302)
(def _GL_COMBINER3_NV 34131)
(def _GL_DSDT_MAG_VIB_NV 34551)
(def _GL_DSDT8_MAG8_NV 34570)
(def _GL_BGR_INTEGER_EXT 36250)
(def _GL_OPERAND7_ALPHA_ARB 34207)
(def _GL_MIN_WEIGHTED_ATI 34685)
(def _GL_STREAM_DRAW 35040)
(def _GL_PN_TRIANGLES_NORMAL_MODE_QUADRATIC_ATI 24728)
(def _GL_VARIABLE_E_NV 34087)
(def _GL_COMBINER4_NV 34132)
(def _GLUT_CURSOR_SPRAY 6)
(def _GL_SRC_ALPHA_SATURATE 776)
(def _GL_DEPTH_COMPONENT32_ARB 33191)
(def _GL_HALF_BIAS_NORMAL_NV 34106)
(def __CONSTANT_CFSTRINGS__ 1)
(def _GL_4_BYTES 5129)
(def _GL_FOG_COORDINATE_ARRAY_EXT 33879)
(def _GL_MODELVIEW17_ARB 34609)
(def _GL_PROGRAM_NATIVE_TEMPORARIES_ARB 34982)
(def _GL_CURRENT_RASTER_COLOR 2820)
(def _GL_MATRIX11_ARB 35019)
(def _GL_OBJECT_PLANE 9473)
(def _GL_STENCIL_REF 2967)
(def _GL_LEQUAL 515)
(def _GL_MIRROR_CLAMP_TO_BORDER_EXT 35090)
(def _GL_UNIFORM_BUFFER_EXT 36334)
(def _GL_UNPACK_SKIP_PIXELS 3316)
(def _GL_SAMPLER_1D_ARRAY_SHADOW_EXT 36291)
(def _GL_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT 36263)
(def _GL_SOURCE0_ALPHA 34184)
(def _GL_UPPER_LEFT 36002)
(def _GL_MAX_TEXTURE_UNITS_ARB 34018)
(def _GL_STORAGE_PRIVATE_APPLE 34237)
(def _GL_ELEMENT_ARRAY_POINTER_APPLE 35342)
(def _GL_TRANSFORM_HINT_APPLE 34225)
(def _GL_TEXTURE_WIDTH 4096)
(def _GL_XOR 5382)
(def _GLUT_OWNS_JOYSTICK 613)
(def _GL_SIGNED_RGB_NV 34558)
(def _GL_MODELVIEW12_ARB 34604)
(def _GL_LUMINANCE_ALPHA16I_EXT 36237)
(def _GL_DOT_PRODUCT_NV 34540)
(def _GL_MAX_CONVOLUTION_WIDTH 32794)
(def _GL_MAP1_TEXTURE_COORD_4 3478)
(def _GLUT_SCREEN_HEIGHT_MM 203)
(def _GLU_INVALID_VALUE 100901)
(def _GL_LUMINANCE_ALPHA_FLOAT32_ATI 34841)
(def _GL_CONST_EYE_NV 34533)
(def _GL_EXTENSIONS 7939)
(def _GL_VERTEX_ARRAY_RANGE_LENGTH_APPLE 34078)
(def _GLUT_RGB 0)
(def _GL_MAP2_VERTEX_3 3511)
(def _GL_S 8192)
(def _GL_TEXTURE16 34000)
(def _GL_BUFFER_SIZE 34660)
(def _GL_CURRENT_NORMAL 2818)
(def _GL_HISTOGRAM_BLUE_SIZE 32810)
(def _GL_ATTRIB_STACK_DEPTH 2992)
(def _GLU_MAP1_TRIM_2 100210)
(def _GL_MODELVIEW19_ARB 34611)
(def _GL_TRANSPOSE_COLOR_MATRIX 34022)
(def _GL_INTENSITY32UI_EXT 36211)
(def _GL_INDEX_ARRAY_TYPE 32901)
(def _GL_STENCIL_BACK_PASS_DEPTH_FAIL_ATI 34818)
(def _GLUT_KEY_F2 2)
(def _GL_SAMPLER_2D_RECT_ARB 35683)
(def _GL_SECONDARY_COLOR_ARRAY_EXT 33886)
(def _GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_EXT 35976)
(def _GL_CONVOLUTION_FORMAT 32791)
(def _GL_SHADER_TYPE 35663)
(def _GL_CURRENT_BIT 1)
(def _GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS_ARB 35661)
(def _GL_NORMAL_MAP_ARB 34065)
(def _GL_FLOAT 5126)
(def _GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT 35919)
(def _GL_SOURCE3_ALPHA 34187)
(def _GL_FEEDBACK_BUFFER_POINTER 3568)
(def _GL_TEXTURE14 33998)
(def _GL_CURRENT_RASTER_DISTANCE 2825)
(def _GLUT_WINDOW_BLUE_SIZE 109)
(def _GL_MODELVIEW13_ARB 34605)
(def _GLU_NURBS_COLOR_DATA_EXT 100173)
(def _GLUT_KEY_F10 10)
(def _GL_MATRIX27_ARB 35035)
(def _GL_COLOR_TABLE_LUMINANCE_SIZE 32990)
(def _GL_MAX_GENERAL_COMBINERS_NV 34125)
(def _GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT 36048)
(def _GL_LINE_RESET_TOKEN 1799)
(def _GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_NV 34898)
(def _GL_INT_SAMPLER_CUBE_EXT 36300)
(def __FLT_RADIX__ 2)
(def _GL_COLOR_INDEX2_EXT 32995)
(def _GLU_TESS_ERROR7 100157)
(def _GLUT_LEFT_BUTTON 0)
(def _GL_INTENSITY32I_EXT 36229)
(def _GL_STATIC_COPY_ARB 35046)
(def _GL_COLOR_MATRIX_STACK_DEPTH 32946)
(def _GL_HALF_BIAS_NEGATE_NV 34107)
(def _GL_TEXTURE30 34014)
(def _GLU_TESS_VERTEX_DATA 100107)
(def _GL_EXT_framebuffer_blit 1)
(def _GL_SIGNED_NEGATE_NV 34109)
(def _GL_INT_SAMPLER_3D_EXT 36299)
(def _GL_INTENSITY 32841)
(def _GL_INDEX_LOGIC_OP 3057)
(def _GL_LINEAR_MIPMAP_LINEAR 9987)
(def _GL_LUMINANCE32I_EXT 36230)
(def _GL_TEXTURE9_ARB 33993)
(def _GL_POST_COLOR_MATRIX_ALPHA_BIAS 32955)
(def _GL_CURRENT_COLOR 2816)
(def _GL_SCISSOR_TEST 3089)
(def _GL_MAX_RECTANGLE_TEXTURE_SIZE_EXT 34040)
(def _GL_COLOR_TABLE_GREEN_SIZE 32987)
(def _GL_SOURCE2_ALPHA_ARB 34186)
(def _GL_PROGRAM_FORMAT_ASCII_ARB 34933)
(def _GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT 35918)
(def _GLU_NURBS_ERROR16 100266)
(def _GL_DRAW_BUFFER15 34868)
(def _GL_CONSTANT_ALPHA_EXT 32771)
(def _GL_SAMPLER_2D_RECT_SHADOW_ARB 35684)
(def _GL_COMBINER2_NV 34130)
(def _GL_QUERY_RESULT_AVAILABLE_ARB 34919)
(def _GL_CLIENT_ACTIVE_TEXTURE_ARB 34017)
(def _GL_ARB_texture_env_combine 1)
(def _GL_COMPRESSED_RGBA_S3TC_DXT1_EXT 33777)
(def _GL_UNSIGNED_INT_10_10_10_2 32822)
(def _GL_GEOMETRY_VERTICES_OUT_EXT 36314)
(def _GL_MATRIX7_ARB 35015)
(def _GL_EXT_gpu_shader4 1)
(def _GL_PACK_SWAP_BYTES 3328)
(def _GL_TEXTURE_ENV_COLOR 8705)
(def _GL_DECR_WRAP_EXT 34056)
(def _GLU_TESS_WINDING_NEGATIVE 100133)
(def _GLUT_NUM_BUTTON_BOX_BUTTONS 607)
(def _GL_WRITE_ONLY_ARB 35001)
(def _GL_PROGRAM_ATTRIBS_ARB 34988)
(def _GLUT_CURSOR_TEXT 8)
(def _GL_SAMPLES_ARB 32937)
(def _GLUT_VIDEO_RESIZE_IN_USE 901)
(def _GLU_TESS_ERROR_DATA 100109)
(def _GL_VERTEX_PROGRAM_TWO_SIDE_ARB 34371)
(def _GL_DRAW_BUFFER1 34854)
(def _GL_C3F_V3F 10788)
(def _GL_DEPTH_COMPONENT24 33190)
(def _GL_3D 1537)
(def _GL_MODELVIEW27_ARB 34619)
(def _GL_3D_COLOR_TEXTURE 1539)
(def _GLU_NURBS_ERROR25 100275)
(def _GL_TEXTURE_WRAP_T 10243)
(def _GL_LIGHT0 16384)
(def _GL_RGBA 6408)
(def _GL_TEXTURE31_ARB 34015)
(def _GL_DEPTH_BOUNDS_EXT 34961)
(def _GL_TEXTURE28_ARB 34012)
(def _GL_TRIANGLE_STRIP_ADJACENCY_EXT 13)
(def _GL_TEXTURE_GEN_Q 3171)
(def _GL_MAP2_GRID_DOMAIN 3538)
(def _GL_FEEDBACK 7169)
(def _GL_CLAMP_TO_EDGE 33071)
(def _GL_LIGHT_MODEL_AMBIENT 2899)
(def _GL_NV_texture_shader3 1)
(def _GL_TEXTURE_ALPHA_TYPE_ARB 35859)
(def _GL_POINT_TOKEN 1793)
(def _GL_MODELVIEW0_ARB 5888)
(def _GL_SIGNED_LUMINANCE_ALPHA_NV 34563)
(def _GL_FUNC_SUBTRACT_EXT 32778)
(def _GLUT_INIT_DISPLAY_MODE 504)
(def _GL_FOG_COORDINATE_ARRAY_POINTER_EXT 33878)
(def _GL_RGB16F_ARB 34843)
(def _GL_SOURCE5_ALPHA_ARB 34189)
(def _GL_SOURCE2_RGB_ARB 34178)
(def _GL_LIST_BASE 2866)
(def _GL_RELEASED_APPLE 35353)
(def _GLU_NURBS_TEX_COORD_DATA_EXT 100174)
(def __WCHAR_MAX__ 2147483647)
(def _GL_MODELVIEW26_ARB 34618)
(def _GL_MIRRORED_REPEAT 33648)
(def _GL_INTERPOLATE_ARB 34165)
(def _GLUT_ALPHA 8)
(def _GL_GREATER 516)
(def _GL_STREAM_COPY_ARB 35042)
(def _GL_STENCIL_BACK_FAIL 34817)
(def _GL_SRC6_ALPHA 34190)
(def _GL_CULL_FRAGMENT_NV 34535)
(def _GLU_OUTSIDE 100020)
(def _GL_STENCIL_BACK_FUNC 34816)
(def _GL_NV_fragment_program_option 1)
(def _GLU_TESS_END 100102)
(def _GL_OFFSET_PROJECTIVE_TEXTURE_2D_NV 34896)
(def _GL_ALPHA32I_EXT 36228)
(def _GL_RED_BIAS 3349)
(def _GLU_TESS_ERROR8 100158)
(def _GL_STENCIL_PASS_DEPTH_FAIL 2965)
(def _GL_VERSION_1_3 1)
(def _GL_TEXTURE19_ARB 34003)
(def _GL_OBJECT_LINEAR 9217)
(def _GLU_NURBS_ERROR12 100262)
(def _GL_COLOR_FLOAT_APPLE 35343)
(def _GL_BUFFER_MAPPED_ARB 35004)
(def _GL_QUAD_STRIP 8)
(def _GL_OPERAND3_ALPHA_ARB 34203)
(def _GL_HALF_FLOAT_ARB 5131)
(def _GL_HISTOGRAM_LUMINANCE_SIZE 32812)
(def _GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT 36324)
(def _GL_NV_texgen_reflection 1)
(def _GL_COMPRESSED_SRGB_S3TC_DXT1_EXT 35916)
(def _GL_RENDER_MODE 3136)
(def _GL_WEIGHT_ARRAY_STRIDE_ARB 34474)
(def _GL_MAX_PROGRAM_NATIVE_TEMPORARIES_ARB 34983)
(def _GL_RGBA2 32853)
(def _GL_UNPACK_CLIENT_STORAGE_APPLE 34226)
(def _GL_TEXTURE3 33987)
(def _GLU_NURBS_NORMAL_DATA_EXT 100172)
(def _GL_EXT_paletted_texture 1)
(def _GL_HILO_NV 34548)
(def _GLUT_PARTIALLY_RETAINED 2)
(def _GLU_TESS_NEED_COMBINE_CALLBACK 100156)
(def _GL_LUMINANCE_FLOAT16_ATI 34846)
(def _GL_NV_register_combiners2 1)
(def _GL_MAX_ATTRIB_STACK_DEPTH 3381)
(def _GLUT_WINDOW_ACCUM_GREEN_SIZE 112)
(def _GL_MAX_PROGRAM_ATTRIBS_ARB 34989)
(def _GL_SMOOTH 7425)
(def _GL_REFLECTION_MAP_NV 34066)
(def _GL_AND 5377)
(def _GL_FEEDBACK_BUFFER_SIZE 3569)
(def _GLUT_NUM_SPACEBALL_BUTTONS 606)
(def _GLU_OUT_OF_MEMORY 100902)
(def _GL_COMPRESSED_SRGB_ALPHA_EXT 35913)
(def _GL_RGB_FLOAT16_ATI 34843)
(def _GL_SAMPLES_PASSED_ARB 35092)
(def _GL_VERTEX_ATTRIB_ARRAY_TYPE 34341)
(def _GLU_OUTLINE_PATCH 100241)
(def _GL_FILL 6914)
(def _GL_COMPRESSED_INTENSITY 34028)
(def _GL_INT_SAMPLER_2D_ARRAY_EXT 36303)
(def _GL_VERTEX_ATTRIB_MAP1_ORDER_APPLE 35332)
(def _GL_TEXTURE_MINIMIZE_STORAGE_APPLE 34230)
(def _GL_MODELVIEW18_ARB 34610)
(def _GLUT_VISIBLE 1)
(def _GL_COLOR_ATTACHMENT14_EXT 36078)
(def _GL_SAMPLE_ALPHA_TO_ONE 32927)
(def _GL_SLUMINANCE_ALPHA 35908)
(def _GL_INTERPOLATE 34165)
(def __SSE__ 1)
(def _GL_FOG_MODE 2917)
(def _GL_MODULATE_SUBTRACT_ATI 34630)
(def _GLU_VERSION_1_3 1)
(def _GL_BLEND_EQUATION_RGB_EXT 32777)
(def __FINITE_MATH_ONLY__ 0)
(def _GLU_NURBS_ERROR29 100279)
(def _GL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB 34073)
(def _GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_EXT 35979)
(def _GL_SOURCE1_ALPHA_ARB 34185)
(def _GL_BITMAP_TOKEN 1796)
(def _GL_MAP1_NORMAL 3474)
(def _GLUT_CURSOR_RIGHT_ARROW 0)
(def _GL_AUX3 1036)
(def _GLU_TESS_WINDING_RULE 100140)
(def _GL_COMPRESSED_RGB_S3TC_DXT1_EXT 33776)
(def _GL_CURRENT_MATRIX_STACK_DEPTH_ARB 34368)
(def _GL_FRAGMENT_PROGRAM_ARB 34820)
(def _GL_CURRENT_WEIGHT_ARB 34472)
(def _GL_LUMINANCE16 32834)
(def _GL_STREAM_COPY 35042)
(def _GL_ARB_shader_texture_lod 1)
(def _GLUT_LUMINANCE 512)
(def _GL_MAX_3D_TEXTURE_SIZE 32883)
(def _GL_GREEN_BIAS 3353)
(def _GLU_AUTO_LOAD_MATRIX 100200)
(def _GL_TEXTURE_BINDING_1D 32872)
(def _GL_DEPENDENT_AR_TEXTURE_2D_NV 34537)
(def _GL_SLUMINANCE_EXT 35910)
(def _GL_MAX_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB 34832)
(def _GLU_NURBS_ERROR8 100258)
(def _GL_ACTIVE_ATTRIBUTES 35721)
(def _GL_DEPENDENT_RGB_TEXTURE_3D_NV 34905)
(def _GL_INTENSITY16F_ARB 34845)
(def _GL_ALPHA_FLOAT32_ATI 34838)
(def _GL_CONVOLUTION_HEIGHT 32793)
(def _GL_DEPTH_COMPONENT16_ARB 33189)
(def _GL_MAX_ELEMENTS_VERTICES_EXT 33000)
(def _GL_PROGRAM_ADDRESS_REGISTERS_ARB 34992)
(def _GL_SOURCE1_RGB 34177)
(def _GL_ACTIVE_TEXTURE_ARB 34016)
(def _GL_SRC0_RGB 34176)
(def _GL_ARB_transpose_matrix 1)
(def _GL_TEXTURE19 34003)
(def _GL_BLEND_SRC_RGB 32969)
(def _GLUT_SINGLE 0)
(def _GL_TEXTURE7_ARB 33991)
(def _GL_VERTEX_PROGRAM_POINT_SIZE 34370)
(def _GL_CLIENT_PIXEL_STORE_BIT 1)
(def _GL_DEPTH_SCALE 3358)
(def _GL_BLUE_SCALE 3354)
(def _GL_TRIANGLES_ADJACENCY_EXT 12)
(def _GL_TEXTURE13_ARB 33997)
(def _GL_INTENSITY_FLOAT16_ATI 34845)
(def _GL_TEXTURE26 34010)
(def _GL_TEXTURE24 34008)
(def _GL_INCR_WRAP 34055)
(def _GL_DOT3_RGB 34478)
(def _GLUT_WINDOW_ACCUM_BLUE_SIZE 113)
(def _GLUT_FULLY_COVERED 3)
(def _GL_COMBINE 34160)
(def _GL_COMBINER1_NV 34129)
(def _GL_EXT_blend_color 1)
(def _GL_VERTEX_ATTRIB_ARRAY_POINTER_ARB 34373)
(def _GL_TEXTURE18_ARB 34002)
(def _GL_FOG_DENSITY 2914)
(def _GL_RENDERBUFFER_ALPHA_SIZE_EXT 36179)
(def __APPLE__ 1)
(def _GL_POINT_SPRITE_ARB 34913)
(def _GL_TRIANGLES 4)
(def _GL_EYE_RADIAL_NV 34139)
(def _GL_C4UB_V3F 10787)
(def _GL_MAX 32776)
(def _GL_POLYGON_OFFSET_POINT 10753)
(def _GLUT_OVERLAY_POSSIBLE 800)
(def _GL_MAP1_COLOR_4 3472)
(def _GL_MIRROR_CLAMP_EXT 34626)
(def _GL_POST_COLOR_MATRIX_GREEN_SCALE_SGI 32949)
(def _GL_SAMPLES_PASSED 35092)
(def _GL_CURRENT_QUERY_ARB 34917)
(def _GL_CONVOLUTION_2D 32785)
(def _GLUT_WINDOW_ACCUM_RED_SIZE 111)
(def _GLUT_VIDEO_RESIZE_HEIGHT 909)
(def _GL_MAP1_TEXTURE_COORD_1 3475)
(def _GL_DRAW_BUFFER10 34863)
(def _GL_STENCIL_INDEX4_EXT 36167)
(def _GL_INT_SAMPLER_2D_EXT 36298)
(def _GL_AUX1 1034)
(def _GL_TEXTURE_DS_SIZE_NV 34589)
(def _GLU_TESS_TOLERANCE 100142)
(def _GL_ARB_depth_texture 1)
(def _GL_DEPTH_FUNC 2932)
(def _GLU_DISPLAY_MODE 100204)
(def _GL_EXP2 2049)
(def _GL_BLEND_DST_ALPHA_EXT 32970)
(def _GL_MODELVIEW1_ARB 34058)
(def _GL_MINMAX_FORMAT 32815)
(def _GL_EXT_texture_rectangle 1)
(def _GL_DECR_WRAP 34056)
(def __i386 1)
(def _GL_WEIGHT_ARRAY_BUFFER_BINDING 34974)
(def _GL_POINT_FADE_THRESHOLD_SIZE_ARB 33064)
(def _GL_POST_COLOR_MATRIX_ALPHA_SCALE 32951)
(def _GL_LUMINANCE16_ALPHA16 32840)
(def _GLUT_CURSOR_BOTTOM_SIDE 13)
(def _GL_EXT_abgr 1)
(def _GL_EXT_texture_compression_s3tc 1)
(def _GL_MAX_CONVOLUTION_HEIGHT 32795)
(def _GL_ARRAY_BUFFER 34962)
(def _GL_POLYGON_TOKEN 1795)
(def _GL_SHININESS 5633)
(def _GL_EXT_separate_specular_color 1)
(def _GL_TEXTURE27_ARB 34011)
(def _GLUT_KEY_F6 6)
(def _GL_TEXTURE_COORD_ARRAY_STRIDE 32906)
(def _GL_SIGNED_HILO_NV 34553)
(def _GL_AMBIENT_AND_DIFFUSE 5634)
(def _GL_TEXTURE_GEN_R 3170)
(def _GL_BACK 1029)
(def _GL_MAX_CUBE_MAP_TEXTURE_SIZE 34076)
(def _GL_NORMAL_ARRAY_BUFFER_BINDING 34967)
(def _GL_COPY_INVERTED 5388)
(def _GLUT_WINDOW_Y 101)
(def _GL_COORD_REPLACE_NV 34914)
(def _GL_BACK_LEFT 1026)
(def _GL_PN_TRIANGLES_ATI 24720)
(def _GLU_INSIDE 100021)
(def _GL_RGB_SCALE 34163)
(def _GLUT_INIT_WINDOW_WIDTH 502)
(def _GL_TRANSFORM_FEEDBACK_BUFFER_START_EXT 35972)
(def _GL_ACCUM_BLUE_BITS 3418)
(def _GL_ARRAY_ELEMENT_LOCK_COUNT_EXT 33193)
(def _GL_COLOR_TABLE_WIDTH 32985)
(def _GLUT_KEY_REPEAT_DEFAULT 2)
(def _GL_HISTOGRAM_SINK 32813)
(def _GL_ALL_ATTRIB_BITS 1048575)
(def _GL_COMPARE_R_TO_TEXTURE 34894)
(def _GL_GREEN 6404)
(def _GLUT_NUM_MOUSE_BUTTONS 605)
(def _GLU_TESS_ERROR3 100153)
(def _GL_OPERAND1_RGB 34193)
(def _GL_LINEAR_ATTENUATION 4616)
(def _GL_TEXTURE22_ARB 34006)
(def _GL_PIXEL_MAP_I_TO_B_SIZE 3252)
(def _GL_DRAW_BUFFER8_ARB 34861)
(def _GL_MAX_TEXTURE_SIZE 3379)
(def _GLUT_JOYSTICK_BUTTON_B 2)
(def _GL_ALPHA32UI_EXT 36210)
(def _GL_LIGHT4 16388)
(def _GL_CONSTANT_ALPHA 32771)
(def _GL_CLAMP_TO_BORDER_ARB 33069)
(def _GL_INDEX_MODE 3120)
(def _GLU_NURBS_NORMAL_DATA 100172)
(def _GL_MODELVIEW4_ARB 34596)
(def _GL_DEPTH_BOUNDS_TEST_EXT 34960)
(def _GL_MATRIX23_ARB 35031)
(def _GL_SAMPLER_1D_ARB 35677)
(def _GL_POST_COLOR_MATRIX_ALPHA_BIAS_SGI 32955)
(def _GL_INTENSITY8I_EXT 36241)
(def _GL_3D_COLOR 1538)
(def _GL_EQUIV 5385)
(def _GL_EXT_stencil_wrap 1)
(def _GL_MATRIX20_ARB 35028)
(def _GL_DRAW_BUFFER5 34858)
(def _GL_PACK_ROW_LENGTH 3330)
(def _GL_UNSIGNED_NORMALIZED_ARB 35863)
(def _GL_OPERAND5_RGB_ARB 34197)
(def _GL_EXT_secondary_color 1)
(def _GL_INDEX_SHIFT 3346)
(def _GL_SAMPLER_BUFFER_EXT 36290)
(def _GL_TEXTURE10 33994)
(def _GL_TEXTURE7 33991)
(def _GL_CURRENT_VERTEX_ATTRIB_ARB 34342)
(def _GL_TEXTURE_STACK_DEPTH 2981)
(def _GL_ABGR_EXT 32768)
(def _GLU_CW 100120)
(def _GL_UNSIGNED_INT_SAMPLER_3D_EXT 36307)
(def _GL_SRGB8_ALPHA8_EXT 35907)
(def _GL_OBJECT_ACTIVE_ATTRIBUTE_MAX_LENGTH_ARB 35722)
(def _GL_VERTEX_ARRAY_STRIDE 32892)
(def _GLU_NURBS_ERROR31 100281)
(def _GL_FUNC_REVERSE_SUBTRACT 32779)
(def _GLUT_NUM_TABLET_BUTTONS 609)
(def _GL_MAX_PROGRAM_ALU_INSTRUCTIONS_ARB 34827)
(def _GL_DEPENDENT_GB_TEXTURE_2D_NV 34538)
(def _GL_DISCARD_NV 34096)
(def _GL_NO_ERROR 0)
(def _GL_MODELVIEW31_ARB 34623)
(def _GL_BLUE_BITS 3412)
(def _GL_COORD_REPLACE 34914)
(def _GL_MIN_EXT 32775)
(def _GL_ALPHA_BITS 3413)
(def _GL_SLUMINANCE_ALPHA_EXT 35908)
(def _GL_COMPRESSED_ALPHA_ARB 34025)
(def _GL_PACK_SKIP_IMAGES 32875)
(def _GL_FRAMEBUFFER_COMPLETE_EXT 36053)
(def _GL_SMOOTH_POINT_SIZE_GRANULARITY 2835)
(def _GLUT_WINDOW_FORMAT_ID 123)
(def _GL_MAP1_VERTEX_3 3479)
(def _GLUT_NORMAL_DAMAGED 804)
(def _GL_COLOR_ARRAY_BUFFER_BINDING_ARB 34968)
(def _GL_BGRA_INTEGER_EXT 36251)
(def _GL_VARIABLE_B_NV 34084)
(def _GL_DRAW_BUFFER10_ARB 34863)
(def _GL_WEIGHT_SUM_UNITY_ARB 34470)
(def _GL_OPERAND4_ALPHA_ARB 34204)
(def _GL_DEPTH_TEXTURE_MODE 34891)
(def _GL_TEXTURE_MATRIX 2984)
(def _GL_LUMINANCE_ALPHA32F_ARB 34841)
(def _GL_ARRAY_ELEMENT_LOCK_FIRST_EXT 33192)
(def _GL_CLEAR 5376)
(def _GL_ARB_shader_objects 1)
(def _GL_CONVOLUTION_WIDTH 32792)
(def _GL_MATRIX15_ARB 35023)
(def _GL_UNPACK_ROW_BYTES_APPLE 35350)
(def _GL_STREAM_READ_ARB 35041)
(def _GL_POLYGON_BIT 8)
(def _GL_PROGRAM_TEX_INDIRECTIONS_ARB 34823)
(def _GLU_NURBS_ERROR19 100269)
(def _GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT 36049)
(def _GLUT_WINDOW_RED_SIZE 107)
(def _GL_SAMPLE_COVERAGE_INVERT 32939)
(def _GL_MAX_PROGRAM_INSTRUCTIONS_ARB 34977)
(def _GL_TEXTURE_DEPTH_SIZE 34890)
(def _GL_SUBPIXEL_BITS 3408)
(def _GL_SAMPLE_ALPHA_TO_COVERAGE 32926)
(def _GL_TEXTURE_GEN_MODE 9472)
(def _GL_TEXTURE_ENV_MODE 8704)
(def _GL_TEXTURE_RESIDENT 32871)
(def _GL_LUMINANCE_ALPHA32UI_EXT 36213)
(def _GL_4D_COLOR_TEXTURE 1540)
(def _GL_INVERT 5386)
(def _GL_V3F 10785)
(def _GL_BIAS_BY_NEGATIVE_ONE_HALF_NV 34113)
(def _GLUT_DOWN 0)
(def _GLU_NURBS_END_DATA_EXT 100175)
(def _GL_POST_COLOR_MATRIX_RED_BIAS 32952)
(def _GL_ARB_texture_rectangle 1)
(def _GL_SRC0_ALPHA 34184)
(def _GL_CURRENT_FOG_COORDINATE 33875)
(def _GLUT_WINDOW_STENCIL_SIZE 105)
(def _GL_SHADER_OBJECT_ARB 35656)
(def _GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB 35660)
(def _GL_FRONT_LEFT 1024)
(def _GL_FRAGMENT_SHADER_DERIVATIVE_HINT_ARB 35723)
(def _GL_COMBINE_RGB 34161)
(def _GL_COLOR_ATTACHMENT15_EXT 36079)
(def _GL_C4F_N3F_V3F 10790)
(def _GL_LIST_INDEX 2867)
(def _GLU_INVALID_ENUM 100900)
(def _GL_TEXTURE_COORD_ARRAY 32888)
(def _GLUT_DOUBLE 2)
(def __LDBL_HAS_INFINITY__ 1)
(def _GL_PIXEL_MAP_G_TO_G_SIZE 3255)
(def _GL_PN_TRIANGLES_POINT_MODE_LINEAR_ATI 24725)
(def _GL_BGR 32992)
(def _GL_PIXEL_MAP_G_TO_G 3191)
(def _GLU_TESS_ERROR2 100152)
(def _GL_DOT_PRODUCT_TEXTURE_2D_NV 34542)
(def _GL_SINGLE_COLOR_EXT 33273)
(def _GLUT_GAME_MODE_DISPLAY_CHANGED 6)
(def _GL_TEXTURE_MAX_LEVEL_SGIS 33085)
(def _GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS 35660)
(def _GL_RGBA32F_ARB 34836)
(def _GLU_NONE 100002)
(def _GL_DELETE_STATUS 35712)
(def _GL_TEXTURE_BINDING_2D 32873)
(def _GL_PRIMARY_COLOR_ARB 34167)
(def _GL_PROGRAM_NATIVE_PARAMETERS_ARB 34986)
(def _GL_SRC1_ALPHA 34185)
(def _GL_FUNC_REVERSE_SUBTRACT_EXT 32779)
(def _GL_TRANSPOSE_TEXTURE_MATRIX_ARB 34021)
(def _GL_BOOL_VEC4_ARB 35673)
(def _GL_COMBINER6_NV 34134)
(def _GL_FORCE_BLUE_TO_ONE_NV 34912)
(def _GL_MAX_COLOR_ATTACHMENTS_EXT 36063)
(def _GL_DRAW_BUFFER11_ARB 34864)
(def _GL_APPLE_vertex_program_evaluators 1)
(def _GL_POINT_SIZE_MIN_ARB 33062)
(def _GL_VERTEX_SHADER 35633)
(def _GL_UNSIGNED_INT_8_8_8_8 32821)
(def _GL_READ_WRITE_ARB 35002)
(def _GLU_NURBS_ERROR9 100259)
(def _GL_SOURCE1_ALPHA 34185)
(def _GL_MULTISAMPLE_FILTER_HINT_NV 34100)
(def _GL_INTENSITY_FLOAT16_APPLE 34845)
(def _GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS 35661)
(def _GL_MODELVIEW2_ARB 34594)
(def _GL_VERSION_2_0 1)
(def _GL_SCISSOR_BOX 3088)
(def _GL_BITMAP 6656)
(def _GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB 34072)
(def _GL_ALPHA_TEST_FUNC 3009)
(def _GL_MAX_PROGRAM_PARAMETERS_ARB 34985)
(def _GL_LIST_BIT 131072)
(def _GL_SAMPLER_3D_ARB 35679)
(def _GL_DEPTH_BUFFER_BIT 256)
(def _GL_MAX_FRAGMENT_UNIFORM_COMPONENTS_ARB 35657)
(def _GL_CONVOLUTION_FILTER_SCALE 32788)
(def __STDC_HOSTED__ 1)
(def _GL_SRC_ALPHA 770)
(def _GL_MATRIX10_ARB 35018)
(def _GL_SINGLE_COLOR 33273)
(def _GL_LUMINANCE8I_EXT 36242)
(def _GL_WEIGHT_ARRAY_POINTER_ARB 34476)
(def _GLUT_GREEN 1)
(def _GLUT_WINDOW_BUFFER_SIZE 104)
(def _GL_MAP2_TEXTURE_COORD_2 3508)
(def _GLU_NURBS_END_DATA 100175)
(def _GL_MAX_COLOR_MATRIX_STACK_DEPTH 32947)
(def _GLUT_KEY_PAGE_DOWN 105)
(def _GL_STENCIL_BACK_FUNC_ATI 34816)
(def _GL_MAP1_GRID_DOMAIN 3536)
(def _GL_RGBA_INTEGER_MODE_EXT 36254)
(def _GL_T2F_N3F_V3F 10795)
(def _GL_UNSIGNED_INT_SAMPLER_CUBE_EXT 36308)
(def _GL_CULL_MODES_NV 34528)
(def _GLUT_GAME_MODE_PIXEL_DEPTH 4)
(def _GL_BUFFER_USAGE_ARB 34661)
(def _GL_ARB_texture_cube_map 1)
(def _GL_PACK_LSB_FIRST 3329)
(def _GLUT_UP 1)
(def _GL_CONSTANT_COLOR_EXT 32769)
(def _GL_FLOAT_MAT4x2 35689)
(def _GL_PIXEL_UNPACK_BUFFER_BINDING 35055)
(def _GL_LIGHT_MODEL_LOCAL_VIEWER 2897)
(def _GL_DYNAMIC_READ_ARB 35049)
(def _GL_SRC7_ALPHA 34191)
(def _GL_MIN_PROGRAM_TEXEL_OFFSET_EXT 35076)
(def _GL_TEXTURE_LOD_BIAS 34049)
(def _GL_TEXTURE20_ARB 34004)
(def _GL_COMPILE_AND_EXECUTE 4865)
(def _GL_RGBA_MODE 3121)
(def _GL_APPLE_aux_depth_stencil 1)
(def _GLU_NURBS_ERROR35 100285)
(def _GL_OPERAND7_RGB_ARB 34199)
(def _GL_MAX_GEOMETRY_VARYING_COMPONENTS_EXT 36317)
(def _GL_MODELVIEW25_ARB 34617)
(def _GL_ACCUM_CLEAR_VALUE 2944)
(def _GL_HISTOGRAM 32804)
(def _GLUT_CURSOR_CYCLE 5)
(def _GL_READ_WRITE 35002)
(def _GL_MAX_TEXTURE_STACK_DEPTH 3385)
(def _GL_COPY 5379)
(def _GL_SEPARATE_SPECULAR_COLOR_EXT 33274)
(def _GL_CULL_FACE 2884)
(def _GL_POST_COLOR_MATRIX_BLUE_SCALE 32950)
(def _GL_APPLE_vertex_array_range 1)
(def _GLUT_CURSOR_CROSSHAIR 9)
(def _GL_BOOL 35670)
(def _GL_ATI_texture_compression_3dc 1)
(def __DBL_DIG__ 15)
(def _GL_TEXTURE_FILTER_CONTROL_EXT 34048)
(def _GL_PIXEL_MAP_S_TO_S_SIZE 3249)
(def _GL_INVALID_OPERATION 1282)
(def _GL_FLOAT_MAT3_ARB 35675)
(def _GL_COMBINER0_NV 34128)
(def _GLUT_ELAPSED_TIME 700)
(def _GLUT_CURSOR_LEFT_SIDE 14)
(def _GL_VIBRANCE_SCALE_NV 34579)
(def _GL_LINE_SMOOTH 2848)
(def _GL_SET 5391)
(def _GL_POST_COLOR_MATRIX_GREEN_SCALE 32949)
(def _GL_MAX_PROGRAM_IF_DEPTH_NV 35062)
(def _GL_SOURCE2_ALPHA 34186)
(def _GL_SLUMINANCE8_ALPHA8_EXT 35909)
(def _GL_DRAW_FRAMEBUFFER_BINDING_EXT 36006)
(def _GL_MAX_CLIP_PLANES 3378)
(def _GL_TEXTURE8 33992)
(def _GLUT_CURSOR_NONE 101)
(def _GL_MAX_TEXTURE_COORDS_ARB 34929)
(def _GL_MATRIX5_ARB 35013)
(def _GL_SRGB8_ALPHA8 35907)
(def _GL_LINE_STIPPLE 2852)
(def _GL_SOURCE4_ALPHA_ARB 34188)
(def _GL_COLOR_ATTACHMENT5_EXT 36069)
(def _GL_CLIENT_ATTRIB_STACK_DEPTH 2993)
(def _GL_ONE_MINUS_DST_COLOR 775)
(def _GL_ZOOM_X 3350)
(def _GLUT_KEY_DOWN 103)
(def _GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING 34973)
(def _GL_MAX_TEXTURE_IMAGE_UNITS_ARB 34930)
(def _GL_LUMINANCE_ALPHA32I_EXT 36231)
(def _GLU_OBJECT_PATH_LENGTH 100209)
(def _GL_OFFSET_PROJECTIVE_TEXTURE_2D_SCALE_NV 34897)
(def _GL_POST_COLOR_MATRIX_RED_BIAS_SGI 32952)
(def _GL_FOG_COORD_SRC 33872)
(def _GL_CONSTANT 34166)
(def _GL_MAX_LIGHTS 3377)
(def _GL_VERTEX_ATTRIB_ARRAY_NORMALIZED_ARB 34922)
(def _GL_STACK_UNDERFLOW 1284)
(def _GL_STATIC_DRAW 35044)
(def _GL_FRAMEBUFFER_EXT 36160)
(def _GL_PIXEL_MAP_I_TO_R_SIZE 3250)
(def _GL_COMPRESSED_RGB 34029)
(def _GL_DRAW_BUFFER0_ARB 34853)
(def _GL_ARB_vertex_shader 1)
(def _GL_FASTEST 4353)
(def _GL_VERTEX_ATTRIB_MAP2_DOMAIN_APPLE 35337)
(def _GL_VENDOR 7936)
(def _GL_INVALID_VALUE 1281)
(def _GL_COLOR_INDEX8_EXT 32997)
(def _GLU_DOMAIN_DISTANCE 100217)
(def _GLU_NURBS_ERROR13 100263)
(def _GL_DOT_PRODUCT_TEXTURE_1D_NV 34908)
(def _GL_RGB8 32849)
(def _GL_TEXTURE_BASE_LEVEL_SGIS 33084)
(def _GL_POLYGON_OFFSET_UNITS 10752)
(def _GL_SRGB 35904)
(def _GL_ALIASED_POINT_SIZE_RANGE 33901)
(def _GL_FOG_COORD_ARRAY_TYPE 33876)
(def _GL_GENERATE_MIPMAP_HINT 33170)
(def _GL_ARB_texture_non_power_of_two 1)
(def _GL_UNSIGNED_SHORT_5_6_5 33635)
(def _GL_ARB_vertex_buffer_object 1)
(def _GL_TEXTURE_BORDER 4101)
(def _GL_RIGHT 1031)
(def _GL_LIGHT1 16385)
(def _GL_COMPRESSED_RGBA_S3TC_DXT5_EXT 33779)
(def _GL_LUMINANCE12_ALPHA4 32838)
(def _GL_EXT_texture_integer 1)
(def _GL_EXT_fog_coord 1)
(def _GL_PROJECTION_MATRIX 2983)
(def _GL_SAMPLER_2D_ARRAY_EXT 36289)
(def _GLU_TESS_MISSING_BEGIN_POLYGON 100151)
(def _GL_TRANSPOSE_MODELVIEW_MATRIX 34019)
(def _GL_TEXTURE20 34004)
(def _GLU_TESS_MISSING_END_CONTOUR 100154)
(def _GL_MODELVIEW20_ARB 34612)
(def _GL_LINE_SMOOTH_HINT 3154)
(def _GLUT_ACCUM 4)
(def _GL_PN_TRIANGLES_POINT_MODE_CUBIC_ATI 24726)
(def _GL_INDEX_ARRAY_BUFFER_BINDING 34969)
(def _GLU_NURBS_ERROR5 100255)
(def _GL_DRAW_BUFFER0 34853)
(def _GL_COLOR_TABLE_FORMAT 32984)
(def _GLUT_WINDOW_NUM_CHILDREN 118)
(def _GL_TEXTURE_MAX_ANISOTROPY_EXT 34046)
(def _GL_TEXTURE_COMPRESSION_HINT_ARB 34031)
(def _GLU_NURBS_ERROR26 100276)
(def _GL_STENCIL_FAIL 2964)
(def _GL_INVALID_FRAMEBUFFER_OPERATION_EXT 1286)
(def _GLU_U_STEP 100206)
(def _GL_RGB10_A2 32857)
(def _GL_ATI_texture_env_combine3 1)
(def _GL_REPEAT 10497)
(def _GL_MAP2_COLOR_4 3504)
(def _GLUT_ACTIVE_SHIFT 1)
(def _GL_MAX_SPOT_EXPONENT_NV 34053)
(def _GL_VERTEX_ATTRIB_MAP2_COEFF_APPLE 35335)
(def _GL_UNSIGNED_INT_VEC2_EXT 36294)
(def _GL_OFFSET_TEXTURE_MATRIX_NV 34529)
(def _GL_CONSTANT_COLOR 32769)
(def _GL_DECR 7683)
(def _GLU_SAMPLING_TOLERANCE 100203)
(def _GL_3_BYTES 5128)
(def _GL_MODULATE_SIGNED_ADD_ATI 34629)
(def __DYNAMIC__ 1)
(def _GL_EDGE_FLAG_ARRAY_POINTER 32915)
(def _GL_TEXTURE_COORD_ARRAY_POINTER 32914)
(def _GL_EXT_shadow_funcs 1)
(def _GL_OFFSET_TEXTURE_2D_NV 34536)
(def _GLUT_KEY_PAGE_UP 104)
(def _GL_LUMINANCE8UI_EXT 36224)
(def _GL_DRAW_BUFFER13_ARB 34866)
(def _GLUT_WINDOW_HEIGHT 103)
(def _GL_MODELVIEW6_ARB 34598)
(def _GL_COMPRESSED_SRGB_ALPHA 35913)
(def _GL_MAP1_INDEX 3473)
(def _GL_PIXEL_PACK_BUFFER_BINDING_ARB 35053)
(def _GL_RGBA8UI_EXT 36220)
(def _GL_TEXTURE17 34001)
(def _GL_LINE_STIPPLE_REPEAT 2854)
(def _GLU_UNKNOWN 100124)
(def _GL_SRC7_RGB 34183)
(def _GL_PROGRAM_NATIVE_INSTRUCTIONS_ARB 34978)
(def _GL_LINE_LOOP 2)
(def _GLU_NURBS_VERTEX_DATA_EXT 100171)
(def _GL_OFFSET_HILO_PROJECTIVE_TEXTURE_RECTANGLE_NV 34903)
(def _GL_NEVER 512)
(def _GL_BYTE 5120)
(def _GL_POINT_SIZE 2833)
(def _GL_PACK_IMAGE_BYTES_APPLE 35351)
(def _GL_VARIABLE_A_NV 34083)
(def _GL_PROXY_TEXTURE_3D 32880)
(def _GL_UNSIGNED_INT_VEC3_EXT 36295)
(def _GL_SMOOTH_LINE_WIDTH_GRANULARITY 2851)
(def _GLUT_GAME_MODE_HEIGHT 3)
(def _GL_ARB_texture_border_clamp 1)
(def _GL_TEXTURE_DT_SIZE_NV 34590)
(def __MACH__ 1)
(def _GLU_TESS_COMBINE_DATA 100111)
(def _GL_OFFSET_TEXTURE_RECTANGLE_NV 34380)
(def _GL_OBJECT_DELETE_STATUS_ARB 35712)
(def _GL_TEXTURE_ALPHA_SIZE 32863)
(def _GL_DRAW_BUFFER4_ARB 34857)
(def __FLT_MANT_DIG__ 24)
(def _GL_APPLE_row_bytes 1)
(def _GL_NONE 0)
(def _GL_LUMINANCE_FLOAT32_ATI 34840)
(def _GL_DRAW_BUFFER15_ARB 34868)
(def _GLUT_SCREEN_HEIGHT 201)
(def _GL_EYE_LINEAR 9216)
(def _GLUT_KEY_F1 1)
(def _GL_MAX_TEXTURE_LOD_BIAS 34045)
(def _GL_BOOL_VEC4 35673)
(def _GL_CURRENT_QUERY 34917)
(def _GL_SOURCE3_RGB_ARB 34179)
(def _GL_VERSION 7938)
(def _GL_REPLACE 7681)
(def _GL_OFFSET_TEXTURE_RECTANGLE_SCALE_NV 34381)
(def _GL_MAX_DRAW_BUFFERS_ARB 34852)
(def _GL_NUM_COMPRESSED_TEXTURE_FORMATS 34466)
(def _GL_EXT_clip_volume_hint 1)
(def _GL_MAX_RENDERBUFFER_SIZE_EXT 34024)
(def _GL_COLOR_ARRAY_BUFFER_BINDING 34968)
(def _GLUT_WINDOW_GREEN_SIZE 108)
(def _GL_CONVOLUTION_FILTER_BIAS 32789)
(def _GL_LUMINANCE_ALPHA8UI_EXT 36225)
(def _GL_DEPENDENT_RGB_TEXTURE_CUBE_MAP_NV 34906)
(def _GL_TEXTURE_COMPRESSED_IMAGE_SIZE 34464)
(def _GL_TEXTURE4_ARB 33988)
(def _GL_MATRIX31_ARB 35039)
(def _GL_AMBIENT 4608)
(def _GL_COMBINER_CD_OUTPUT_NV 34123)
(def _GLUT_DEVICE_IGNORE_KEY_REPEAT 610)
(def _GLU_TESS_MISSING_END_POLYGON 100153)
(def _GL_CONVOLUTION_BORDER_COLOR 33108)
(def _GLUT_VIDEO_RESIZE_WIDTH_DELTA 904)
(def _GL_TEXTURE_RANGE_LENGTH_APPLE 34231)
(def _GL_TEXTURE_COMPRESSED_ARB 34465)
(def _GL_ALPHA16F_ARB 34844)
(def _GL_TEXTURE_GREEN_TYPE_ARB 35857)
(def _GL_QUERY_COUNTER_BITS 34916)
(def _GLUT_LEFT 0)
(def _GLU_SMOOTH 100000)
(def _GL_LIGHT_MODEL_COLOR_CONTROL_EXT 33272)
(def _GL_VERTEX_ARRAY 32884)
(def _GL_TEXTURE15 33999)
(def _GL_POINT_SIZE_GRANULARITY 2835)
(def _GL_CLIP_PLANE2 12290)
(def _GL_DOT_PRODUCT_TEXTURE_CUBE_MAP_NV 34544)
(def _GL_PN_TRIANGLES_NORMAL_MODE_LINEAR_ATIX 24727)
(def _GL_MAP2_VERTEX_4 3512)
(def _GL_WEIGHT_ARRAY_TYPE_ARB 34473)
(def _GL_ACCUM_RED_BITS 3416)
(def _GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT 36052)
(def _GL_ATI_array_rev_comps_in_4_bytes 1)
(def _GL_HI_BIAS_NV 34580)
(def _GLUT_JOYSTICK_BUTTON_D 8)
(def _GL_FUNC_ADD 32774)
(def _GL_DRAW_BUFFER12 34865)
(def _GL_INT_VEC3 35668)
(def _GL_LINEAR 9729)
(def _GL_SOURCE7_RGB 34183)
(def _GL_HISTOGRAM_RED_SIZE 32808)
(def _GL_COLOR_ATTACHMENT10_EXT 36074)
(def _GLUT_KEY_F8 8)
(def _GL_STREAM_DRAW_ARB 35040)
(def _GL_SAMPLER_1D_SHADOW_ARB 35681)
(def _GL_STENCIL_BUFFER_BIT 1024)
(def _GL_BLEND 3042)
(def _GL_MAX_SHININESS_NV 34052)
(def _GL_PACK_ALIGNMENT 3333)
(def _GL_FOG_INDEX 2913)
(def _GLU_TESS_BOUNDARY_ONLY 100141)
(def _GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING 34970)
(def _GL_OPERAND7_RGB 34199)
(def _GL_LUMINANCE_INTEGER_EXT 36252)
(def _GL_EXT_texture_lod_bias 1)
(def _GL_MAX_MODELVIEW_STACK_DEPTH 3382)
(def _GL_MIRROR_CLAMP_ATI 34626)
(def _GL_OBJECT_ATTACHED_OBJECTS_ARB 35717)
(def _GLU_FALSE 0)
(def _GL_FOG_DISTANCE_MODE_NV 34138)
(def _GL_EXT_texture_env_add 1)
(def _GL_MATRIX25_ARB 35033)
(def _GL_MAX_PROGRAM_ADDRESS_REGISTERS_ARB 34993)
(def _GL_NOR 5384)
(def _GL_PIXEL_MODE_BIT 32)
(def _GLU_NURBS_TESSELLATOR_EXT 100161)
(def _GL_POST_CONVOLUTION_BLUE_SCALE 32798)
(def _GL_MAX_VERTEX_ARRAY_RANGE_ELEMENT_APPLE 34080)
(def _GL_SUBTRACT 34023)
(def _GL_ACCUM 256)
(def _GL_SEPARATE_ATTRIBS_EXT 35981)
(def _GL_ATI_texture_float 1)
(def _GL_PN_TRIANGLES_POINT_MODE_ATIX 24722)
(def _GL_MAX_PROGRAM_NATIVE_ATTRIBS_ARB 34991)
(def _GL_RESCALE_NORMAL_EXT 32826)
(def _GLUT_JOYSTICK_BUTTON_A 1)
(def _GL_MAX_PROGRAM_LOCAL_PARAMETERS_ARB 34996)
(def _GL_UNPACK_SWAP_BYTES 3312)
(def _GL_UNSIGNED_INVERT_NV 34103)
(def _GL_PROXY_COLOR_TABLE 32979)
(def _GL_OPERAND7_ALPHA 34207)
(def _GL_DEPTH_STENCIL_EXT 34041)
(def _GL_VERTEX_ATTRIB_ARRAY_TYPE_ARB 34341)
(def _GL_UNSIGNED_INT_VEC4_EXT 36296)
(def _GLUT_INIT_WINDOW_Y 501)
(def _GL_OPERAND2_RGB_ARB 34194)
(def _GLU_NURBS_COLOR 100167)
(def _GL_NV_texture_shader 1)
(def _GLU_V_STEP 100207)
(def _GL_SPARE0_PLUS_SECONDARY_COLOR_NV 34098)
(def _GL_MAP1_TEXTURE_COORD_2 3476)
(def _GLUT_RED 0)
(def _GL_DSDT_MAG_INTENSITY_NV 34524)
(def _GL_TEXTURE_COMPRESSED 34465)
(def _GL_DSDT_NV 34549)
(def _GL_UNSIGNED_INT_SAMPLER_1D_EXT 36305)
(def __GXX_ABI_VERSION 1002)
(def _GL_DOUBLEBUFFER 3122)
(def _GL_PACK_ROW_BYTES_APPLE 35349)
(def _GL_TEXTURE_MAG_SIZE_NV 34591)
(def _GLU_NURBS_TESSELLATOR 100161)
(def _GL_EXT_stencil_two_side 1)
(def _GLU_TESS_WINDING_ABS_GEQ_TWO 100134)
(def _GL_NORMALIZE 2977)
(def _GL_ADD_SIGNED_ARB 34164)
(def _GL_OPERAND1_ALPHA_ARB 34201)
(def _GL_NAME_STACK_DEPTH 3440)
(def _GL_T2F_V3F 10791)
(def _GL_SECONDARY_COLOR_ARRAY_SIZE_EXT 33882)
(def _GLUT_JOYSTICK_POLL_RATE 616)
(def _GL_COLOR_ATTACHMENT4_EXT 36068)
(def _GLUT_GAME_MODE_WIDTH 2)
(def _GL_PIXEL_UNPACK_BUFFER_BINDING_ARB 35055)
(def _GL_DOT_PRODUCT_TEXTURE_RECTANGLE_NV 34382)
(def _GL_TEXTURE27 34011)
(def _GL_RGBA8 32856)
(def _GLUT_HIDDEN 0)
(def _GL_ATI_blend_weighted_minmax 1)
(def _GLU_NURBS_BEGIN_DATA_EXT 100170)
(def _GL_TEXTURE25 34009)
(def _GL_POST_CONVOLUTION_ALPHA_SCALE 32799)
(def _GL_VIEWPORT 2978)
(def _GL_DRAW_BUFFER11 34864)
(def _GL_ATI_point_cull_mode 1)
(def _GL_SECONDARY_COLOR_ARRAY 33886)
(def _GL_FOG_COORDINATE_ARRAY_TYPE_EXT 33876)
(def _GL_COMBINER_CD_DOT_PRODUCT_NV 34118)
(def _GL_RENDERBUFFER_BINDING_EXT 36007)
(def _GL_ACCUM_ALPHA_BITS 3419)
(def _GL_PN_TRIANGLES_TESSELATION_LEVEL_ATI 24724)
(def _GL_SGIS_generate_mipmap 1)
(def _GL_LUMINANCE16I_EXT 36236)
(def _GL_AND_INVERTED 5380)
(def _GL_UNSIGNED_INT_SAMPLER_BUFFER_EXT 36312)
(def _GL_FLAT 7424)
(def __APPLE_CC__ 5493)
(def _GL_SOURCE6_RGB 34182)
(def _GL_DRAW_BUFFER2_ARB 34855)
(def _GL_SOURCE2_RGB 34178)
(def _GL_GREEN_INTEGER_EXT 36245)
(def _GLU_VERSION 100800)
(def _GL_DOT_PRODUCT_AFFINE_DEPTH_REPLACE_NV 34909)
(def _GL_LINEAR_MIPMAP_NEAREST 9985)
(def _GL_ONE_MINUS_CONSTANT_ALPHA_EXT 32772)
(def _GL_COLOR_LOGIC_OP 3058)
(def _GLUT_VIDEO_RESIZE_X_DELTA 902)
(def _GL_LIGHT5 16389)
(def _GL_TRIANGLE_STRIP 5)
(def _GL_POINT_BIT 2)
(def _GL_POINT_SMOOTH_HINT 3153)
(def _GL_TEXTURE4 33988)
(def _GL_STENCIL_PASS_DEPTH_PASS 2966)
(def _GL_STENCIL_BACK_FAIL_ATI 34817)
(def _GLUT_RIGHT_BUTTON 2)
(def _GL_PROGRAM_TEMPORARIES_ARB 34980)
(def _GL_OPERAND3_RGB_ARB 34195)
(def _GL_BUFFER_OBJECT_APPLE 34227)
(def _GL_LUMINANCE_ALPHA 6410)
(def _GL_RENDERER 7937)
(def _GL_SRC1_RGB 34177)
(def _GL_ELEMENT_ARRAY_APPLE 35340)
(def _GL_BGRA 32993)
(def _GLU_BEGIN 100100)
(def _GL_CLAMP 10496)
(def _GL_ONE_MINUS_SRC_ALPHA 771)
(def _GL_OPERAND4_ALPHA 34204)
(def _GL_ARB_draw_buffers 1)
(def _GL_BLUE 6405)
(def _GL_TEXTURE_MIN_FILTER 10241)
(def _GL_UNSIGNED_SHORT_5_6_5_REV 33636)
(def _GL_LUMINANCE4_ALPHA4 32835)
(def _GL_INTENSITY_FLOAT32_ATI 34839)
(def _GL_BOOL_VEC3_ARB 35672)
(def _GL_MODELVIEW15_ARB 34607)
(def _GL_COMBINER_AB_OUTPUT_NV 34122)
(def _GL_PIXEL_PACK_BUFFER_BINDING 35053)
(def _GLUT_WINDOW_NUM_SAMPLES 120)
(def _GL_COMBINE_ALPHA_ARB 34162)
(def _GL_DRAW_BUFFER4 34857)
(def _GL_SECONDARY_COLOR_ARRAY_SIZE 33882)
(def _GL_OPERAND2_RGB 34194)
(def _GL_COLOR_ATTACHMENT1_EXT 36065)
(def _GL_LINE_WIDTH 2849)
(def _GL_DRAW_BUFFER5_ARB 34858)
(def _GL_TEXTURE_LOD_BIAS_EXT 34049)
(def _GL_TEXTURE14_ARB 33998)
(def _GL_MAX_VERTEX_ATTRIBS_ARB 34921)
(def _GL_RGB_INTEGER_EXT 36248)
(def _GL_APPLE_object_purgeable 1)
(def _GL_PIXEL_MAP_R_TO_R_SIZE 3254)
(def _GL_ARRAY_REV_COMPS_IN_4_BYTES_ATI 35196)
(def _GL_COLOR_TABLE_INTENSITY_SIZE 32991)
(def _GL_CLIENT_VERTEX_ARRAY_BIT 2)
(def _GL_TRANSFORM_FEEDBACK_BUFFER_EXT 35982)
(def _GL_T2F_C4F_N3F_V3F 10796)
(def __INT_MAX__ 2147483647)
(def _GL_POLYGON_OFFSET_FILL 32823)
(def _GL_TEXTURE_CUBE_MAP_POSITIVE_Z 34073)
(def _GLU_TESS_BEGIN_DATA 100106)
(def _GL_OPERAND5_ALPHA_ARB 34205)
(def _GL_POLYGON 9)
(def _GLU_NURBS_ERROR23 100273)
(def _GL_NEAREST_MIPMAP_NEAREST 9984)
(def _GL_FOG_COLOR 2918)
(def _GL_TEXTURE1_ARB 33985)
(def _GL_UNSIGNED_INT_SAMPLER_1D_ARRAY_EXT 36310)
(def _GL_STENCIL_BACK_REF 36003)
(def _GLUT_KEY_UP 101)
(def _GL_TRANSFORM_BIT 4096)
(def _GL_POINT_SIZE_MAX 33063)
(def _GL_LINE 6913)
(def _GL_LINE_WIDTH_GRANULARITY 2851)
(def _GL_CONSTANT_COLOR0_NV 34090)
(def _GL_DYNAMIC_COPY 35050)
(def _GLUT_CURSOR_WAIT 7)
(def _GL_COLOR_BUFFER_BIT 16384)
(def _GL_COLOR_SUM_CLAMP_NV 34127)
(def _GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_EXT 35978)
(def _GL_COMPRESSED_TEXTURE_FORMATS 34467)
(def _GL_OFFSET_TEXTURE_BIAS_NV 34531)
(def _GL_OPERAND5_ALPHA 34205)
(def _GL_T4F_V4F 10792)
(def _GL_MATRIX12_ARB 35020)
(def _GL_CLAMP_TO_BORDER 33069)
(def _GL_COLOR_TABLE_SCALE 32982)
(def _GL_TEXTURE_INTENSITY_TYPE_ARB 35861)
(def _GL_WEIGHT_ARRAY_ARB 34477)
(def _GL_MULTISAMPLE_BIT 536870912)
(def _GL_TEXTURE17_ARB 34001)
(def _GL_SELECT 7170)
(def _GL_TEXTURE_LO_SIZE_NV 34588)
(def _GL_RGBA16UI_EXT 36214)
(def _GL_NORMAL_ARRAY_BUFFER_BINDING_ARB 34967)
(def _GL_OR_INVERTED 5389)
(def _GL_TEXTURE21_ARB 34005)
(def _GL_SIGNED_RGB8_NV 34559)
(def _GL_LIGHTING_BIT 64)
(def _GL_SAMPLES 32937)
(def _GL_UNSIGNED_BYTE_3_3_2 32818)
(def _GL_FOG_BIT 128)
(def _GL_COLOR_ATTACHMENT9_EXT 36073)
(def _GL_COMPRESSED_LUMINANCE_ALPHA_3DC_ATI 34871)
(def _GL_ALPHA8 32828)
(def _GL_LEFT 1030)
(def _GL_NV_fragment_program2 1)
(def _GL_COMPRESSED_RGBA_ARB 34030)
(def _GLU_NURBS_TEXTURE_COORD 100168)
(def _GL_UNPACK_ALIGNMENT 3317)
(def _GLUT_SCREEN_WIDTH_MM 202)
(def _GLU_NURBS_MODE 100160)
(def _GLUT_CURSOR_TOP_SIDE 12)
(def _GL_PACK_SKIP_PIXELS 3332)
(def _GL_READ_FRAMEBUFFER_EXT 36008)
(def __NO_INLINE__ 1)
(def _GL_PIXEL_UNPACK_BUFFER 35052)
(def _GL_MATRIX_MODE 2976)
(def _GL_MAX_VERTEX_VARYING_COMPONENTS_EXT 36318)
(def _GL_ALPHA_FLOAT16_ATI 34844)
(def _GL_LINE_TOKEN 1794)
(def _GL_TEXTURE_CUBE_MAP_ARB 34067)
(def _GL_OPERAND2_ALPHA 34202)
(def _GL_PACK_IMAGE_HEIGHT 32876)
(def _GL_BLEND_EQUATION 32777)
(def _GL_OPERAND5_RGB 34197)
(def _GL_APPLE_packed_pixels 1)
(def _GL_FOG_COORDINATE_ARRAY_POINTER 33878)
(def _GL_PREVIOUS 34168)
(def _GL_MATRIX4_ARB 35012)
(def _GL_PROGRAM_UNDER_NATIVE_LIMITS_ARB 34998)
(def _GL_ELEMENT_ARRAY_BUFFER 34963)
(def _GLUT_ACTIVE_ALT 4)
(def _GL_PROGRAM_BINDING_ARB 34423)
(def _GL_DSDT_MAG_NV 34550)
(def _GL_COMPRESSED_SLUMINANCE 35914)
(def _GLUT_KEY_F5 5)
(def _GLU_NURBS_ERROR32 100282)
(def _GL_TEXTURE_GEN_S 3168)
(def _GL_MAX_ELEMENTS_VERTICES 33000)
(def _GL_EXT_transform_feedback 1)
(def _GL_FLOAT_MAT3x2 35687)
(def _GL_MATRIX26_ARB 35034)
(def _GL_COMPRESSED_RGBA_S3TC_DXT3_EXT 33778)
(def _GL_INT 5124)
(def _GL_VERTEX_ATTRIB_MAP2_SIZE_APPLE 35334)
(def _GL_OPERAND6_ALPHA 34206)
(def _GL_DEPTH_BITS 3414)
(def _GL_POSITION 4611)
(def _GLU_TESS_BEGIN 100100)
(def __i386__ 1)
(def _GLUT_MULTISAMPLE 128)
(def _GL_ONE_MINUS_CONSTANT_COLOR_EXT 32770)
(def _GL_TEXTURE5_ARB 33989)
(def _GL_COLOR_INDEX1_EXT 32994)
(def _GL_NOTEQUAL 517)
(def _GL_STENCIL_TEST_TWO_SIDE_EXT 35088)
(def _GL_ARB_vertex_blend 1)
(def _GL_SAMPLE_COVERAGE 32928)
(def _GL_CLIP_PLANE1 12289)
(def _GL_UNSIGNED_IDENTITY_NV 34102)
(def _GLUT_VIDEO_RESIZE_Y_DELTA 903)
(def _GL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB 34070)
(def _GL_SAMPLER_2D_SHADOW 35682)
(def _GL_INFO_LOG_LENGTH 35716)
(def _GL_MIN 32775)
(def _GL_GENERATE_MIPMAP_SGIS 33169)
(def _GL_HISTOGRAM_GREEN_SIZE 32809)
(def _GL_MAX_PROGRAM_LOOP_DEPTH_NV 35063)
(def _GLUT_VIDEO_RESIZE_Y 907)
(def _GL_VERTEX_ARRAY_STORAGE_HINT_APPLE 34079)
(def _GL_MULTISAMPLE_ARB 32925)
(def _GL_SIGNED_HILO16_NV 34554)
(def _GLUT_FULLY_RETAINED 1)
(def _GL_ARRAY_BUFFER_BINDING 34964)
(def _GL_FRONT_AND_BACK 1032)
(def _GL_BGRA_EXT 32993)
(def _GL_BUFFER_ACCESS 35003)
(def _GL_ALPHA_TEST_REF 3010)
(def __MMX__ 1)
(def _GL_RGB_FLOAT16_APPLE 34843)
(def _GL_SRGB_ALPHA_EXT 35906)
(def _GL_INT_VEC2_ARB 35667)
(def _GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT 36054)
(def _GL_COMPRESSED_SRGB 35912)
(def _GL_FRAMEBUFFER_BINDING_EXT 36006)
(def _GL_STENCIL_CLEAR_VALUE 2961)
(def _GL_VERTEX_ARRAY_BUFFER_BINDING_ARB 34966)
(def _GL_INTERLEAVED_ATTRIBS_EXT 35980)
(def _GL_ALPHA16 32830)
(def _GL_STENCIL_BACK_WRITEMASK 36005)
(def _GL_POINT 6912)
(def _GL_EQUAL 514)
(def _GL_STENCIL_BITS 3415)
(def _GL_PROGRAM_POINT_SIZE_EXT 34370)
(def _GL_CURRENT_SECONDARY_COLOR 33881)
(def _GL_APPLE_flush_render 1)
(def _GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_EXT 36319)
(def _GLUT_WINDOW_STEREO 121)
(def _GL_VERSION_1_1 1)
(def _GL_OPERAND4_RGB_ARB 34196)
(def _GL_TEXTURE11 33995)
(def _GL_ARB_imaging 1)
(def _GL_EYE_PLANE 9474)
(def _GL_MAX_CUBE_MAP_TEXTURE_SIZE_ARB 34076)
(def _GLU_NURBS_END 100169)
(def _GL_FOG 2912)
(def _GL_TEXTURE_CUBE_MAP_NEGATIVE_X 34070)
(def _GL_ALPHA_BIAS 3357)
(def _GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING_ARB 34975)
(def _GL_DEPTH_BIAS 3359)
(def _GL_UNSIGNED_BYTE_2_3_3_REV 33634)
(def _GL_DRAW_PIXEL_TOKEN 1797)
(def _GL_FENCE_APPLE 35339)
(def _GL_MAX_COLOR_MATRIX_STACK_DEPTH_SGI 32947)
(def _GL_CURRENT_RASTER_TEXTURE_COORDS 2822)
(def _GL_COLOR_TABLE_BLUE_SIZE 32988)
(def _GLU_POINT 100010)
(def _GL_SIGNED_INTENSITY8_NV 34568)
(def _GL_REPLICATE_BORDER 33107)
(def _GL_POST_CONVOLUTION_ALPHA_BIAS 32803)
(def _GLU_NURBS_ERROR33 100283)
(def _GL_ATI_blend_equation_separate 1)
(def _GL_MATRIX24_ARB 35032)
(def _GL_TEXTURE_BORDER_COLOR 4100)
(def _GL_OBJECT_ACTIVE_UNIFORM_MAX_LENGTH_ARB 35719)
(def _GL_SCALE_BY_TWO_NV 34110)
(def _GL_STENCIL_ATTACHMENT_EXT 36128)
(def _GL_MATRIX1_ARB 35009)
(def _GL_DRAW_BUFFER3 34856)
(def _GL_ACTIVE_STENCIL_FACE_EXT 35089)
(def _GLU_VERSION_1_2 1)
(def _GL_LUMINANCE_FLOAT16_APPLE 34846)
(def _GL_OPERAND0_RGB 34192)
(def _GL_COLOR_CLEAR_VALUE 3106)
(def _GL_DRAW_BUFFER 3073)
(def _GL_SIGNED_HILO8_NV 34911)
(def _GL_EMISSION 5632)
(def _GL_TEXTURE_BINDING_CUBE_MAP 34068)
(def _GL_MAP1_GRID_SEGMENTS 3537)
(def _GL_MAX_TEXTURE_LOD_BIAS_EXT 34045)
(def _GLUT_XLIB_IMPLEMENTATION 15)
(def _GL_TEXTURE12 33996)
(def _GL_COLOR_ATTACHMENT8_EXT 36072)
(def _GL_SOURCE4_RGB_ARB 34180)
(def _GL_EYE_PLANE_ABSOLUTE_NV 34140)
(def _GL_2_BYTES 5127)
(def _GLUT_KEY_LEFT 100)
(def _GLUT_ENTERED 1)
(def _GL_ARB_point_parameters 1)
(def _GL_COLOR_MATRIX 32945)
(def _GL_RED_SCALE 3348)
(def _GL_TEXTURE_RED_SIZE 32860)
(def _GL_CW 2304)
(def _GL_ATI_texture_mirror_once 1)
(def _GLU_NURBS_COLOR_EXT 100167)
(def _GL_MODELVIEW5_ARB 34597)
(def _GL_FLOAT_VEC3_ARB 35665)
(def _GL_CURRENT_RASTER_INDEX 2821)
(def _GL_RENDERBUFFER_INTERNAL_FORMAT_EXT 36164)
(def _GL_MAX_VARYING_COMPONENTS_EXT 35659)
(def _GL_TEXTURE_DEPTH_SIZE_ARB 34890)
(def _GL_UNSIGNED_INT_SAMPLER_2D_ARRAY_EXT 36311)
(def _GL_APPLE_fence 1)
(def _GL_MULTISAMPLE_BIT_ARB 536870912)
(def _GL_C4UB_V2F 10786)
(def _GL_RED_BITS 3410)
(def _GL_REFLECTION_MAP_ARB 34066)
(def _GL_PREVIOUS_ARB 34168)
(def _GL_NOOP 5381)
(def _GL_TEXTURE_WRAP_S 10242)
(def _GLUT_KEY_HOME 106)
(def _GL_SPARE1_NV 34095)
(def _GL_DRAW_BUFFER13 34866)
(def _GL_RENDERBUFFER_STENCIL_SIZE_EXT 36181)
(def _GL_PIXEL_MAP_I_TO_R 3186)
(def _GL_UNPACK_SKIP_IMAGES 32877)
(def _GL_DEPENDENT_HILO_TEXTURE_2D_NV 34904)
(def _GL_SPARE0_NV 34094)
(def _GL_PIXEL_PACK_BUFFER_ARB 35051)
(def _GL_SIGNED_LUMINANCE8_ALPHA8_NV 34564)
(def _GL_LESS 513)
(def _GL_REGISTER_COMBINERS_NV 34082)
(def _GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_EXT 36265)
(def _GL_EDGE_FLAG_ARRAY_BUFFER_BINDING 34971)
(def _GL_FOG_COORD_ARRAY 33879)
(def _GL_LOWER_LEFT 36001)
(def _GL_RGB8I_EXT 36239)
(def _GL_MAP_COLOR 3344)
(def _GL_SHADE_MODEL 2900)
(def _GL_NORMAL_ARRAY_TYPE 32894)
(def _GL_OPERAND3_RGB 34195)
(def _GL_MATRIX13_ARB 35021)
(def _GL_UNSIGNED_INT_SAMPLER_2D_EXT 36306)
(def _GL_PRIMITIVES_GENERATED_EXT 35975)
(def _GL_SRC6_RGB 34182)
(def _GL_PROGRAM_OBJECT_ARB 35648)
(def _GL_SIGNED_RGB_UNSIGNED_ALPHA_NV 34572)
(def _GL_LUMINANCE8_ALPHA8 32837)
(def _GLU_NURBS_ERROR27 100277)
(def _GLU_NURBS_ERROR17 100267)
(def _GL_LIGHT2 16386)
(def _GL_PROXY_TEXTURE_2D 32868)
(def _GL_MODELVIEW21_ARB 34613)
(def _GL_MATRIX28_ARB 35036)
(def _GL_STENCIL_INDEX1_EXT 36166)
(def _GL_APPLE_texture_range 1)
(def _GLU_TESS_ERROR 100103)
(def _GL_MAX_PROGRAM_TEX_INDIRECTIONS_ARB 34829)
(def _GL_RGBA8I_EXT 36238)
(def _GL_FRONT_RIGHT 1025)
(def _GL_MAX_PIXEL_MAP_TABLE 3380)
(def _GL_ARB_point_sprite 1)
(def _GL_NV_point_sprite 1)
(def _GL_FALSE 0)
(def _GL_UNPACK_IMAGE_HEIGHT 32878)
(def _GL_TRANSPOSE_COLOR_MATRIX_ARB 34022)
(def _GL_LO_SCALE_NV 34575)
(def _GL_COMBINE_RGB_ARB 34161)
(def _GL_INT_VEC2 35667)
(def _GL_VERSION_1_5 1)
(def _GL_OBJECT_SUBTYPE_ARB 35663)
(def _GL_ARB_vertex_program 1)
(def _GL_GREEN_BITS 3411)
(def _GL_SPHERE_MAP 9218)
(def _GL_OPERAND6_RGB 34198)
(def _GL_TEXTURE_MIN_LOD_SGIS 33082)
(def _GLUT_HAS_OVERLAY 802)
(def _GL_TEXTURE24_ARB 34008)
(def _GL_QUADS 7)
(def _GL_TEXTURE21 34005)
(def _GL_ACTIVE_VERTEX_UNITS_ARB 34469)
(def _GL_HISTOGRAM_ALPHA_SIZE 32811)
(def _GL_LINE_STIPPLE_PATTERN 2853)
(def _GLU_NURBS_ERROR10 100260)
(def _GL_BOOL_ARB 35670)
(def _GLUT_API_VERSION 5)
(def _GL_STENCIL_BACK_PASS_DEPTH_PASS 34819)
(def _GL_OUT_OF_MEMORY 1285)
(def _GLUT_JOYSTICK_AXES 615)
(def __DECIMAL_DIG__ 21)
(def _GL_FLOAT_VEC2 35664)
(def _GLU_NURBS_ERROR36 100286)
(def _GL_FOG_COORDINATE_SOURCE_EXT 33872)
(def _GL_CLIP_PLANE3 12291)
(def _GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB 34074)
(def _GL_COMBINER7_NV 34135)
(def _GL_BLEND_SRC_ALPHA 32971)
(def _GL_RASTERIZER_DISCARD_EXT 35977)
(def _GLUT_KEY_REPEAT_OFF 0)
(def _GLUT_STENCIL 32)
(def _GLU_NURBS_ERROR20 100270)
(def _GL_OFFSET_TEXTURE_SCALE_NV 34530)
(def _GL_UNPACK_LSB_FIRST 3313)
(def _GL_INTENSITY_FLOAT32_APPLE 34839)
(def _GL_STEREO 3123)
(def _GL_MATRIX3_ARB 35011)
(def _GL_MAP2_NORMAL 3506)
(def _GL_CLIENT_ALL_ATTRIB_BITS -1)
(def _GL_ARB_texture_compression 1)
(def _GL_EXT_texture_sRGB 1)
(def _GL_POST_CONVOLUTION_COLOR_TABLE 32977)
(def _GL_VERTEX_ATTRIB_ARRAY_SIZE_ARB 34339)
(def _GL_INTENSITY8 32843)
(def _GL_UNSIGNED_SHORT_1_5_5_5_REV 33638)
(def _GL_PROXY_POST_CONVOLUTION_COLOR_TABLE 32980)
(def _GL_CURRENT_INDEX 2817)
(def _GL_PIXEL_MAP_I_TO_G 3187)
(def _GL_DRAW_BUFFER14_ARB 34867)
(def _GL_COLOR_WRITEMASK 3107)
(def _GL_MAX_PROGRAM_CALL_DEPTH_NV 35061)
(def _GL_EXT_framebuffer_object 1)
(def _GLUT_MIDDLE_BUTTON 1)
(def _GL_SCALE_BY_ONE_HALF_NV 34112)
(def _GL_REDUCE 32790)
(def _GL_FOG_END 2916)
(def _GL_TEXTURE5 33989)
(def _GL_SRGB8_EXT 35905)
(def __FLT_EVAL_METHOD__ 0)
(def _GL_LINE_BIT 4)
(def _GL_COLOR_ARRAY_STRIDE 32899)
(def _GLUT_JOYSTICK_BUTTON_C 4)
(def _GL_MAGNITUDE_SCALE_NV 34578)
(def _GL_LUMINANCE_ALPHA_FLOAT32_APPLE 34841)
(def _GL_ARB_occlusion_query 1)
(def _GL_MAX_CLIENT_ATTRIB_STACK_DEPTH 3387)
(def _GL_OBJECT_ACTIVE_ATTRIBUTES_ARB 35721)
(def _GLU_NURBS_TEX_COORD_EXT 100168)
(def _GL_OPERAND0_ALPHA_ARB 34200)
(def _GL_BUFFER_SIZE_ARB 34660)
(def _GL_PROXY_TEXTURE_RECTANGLE_EXT 34039)
(def _GL_TRUE 1)
(def _GL_TEXTURE_2D 3553)
(def _GL_NV_register_combiners 1)
(def _GL_SHADER_CONSISTENT_NV 34525)
(def _GL_RGB16I_EXT 36233)
(def _GL_DOT3_RGBA_ARB 34479)
(def _GLUT_KEY_F7 7)
(def _GLU_TESS_ERROR1 100151)
(def _GL_STENCIL_INDEX8_EXT 36168)
(def _GL_APPLE_specular_vector 1)
(def _GL_POST_COLOR_MATRIX_ALPHA_SCALE_SGI 32951)
(def _GL_ALWAYS 519)
(def _GL_ELEMENT_ARRAY_TYPE_APPLE 35341)
(def _GL_TEXTURE_BASE_LEVEL 33084)
(def _GLUT_KEY_RIGHT 102)
(def _GL_ARB_fragment_program 1)
(def _GL_LINK_STATUS 35714)
(def __DBL_MAX_10_EXP__ 308)
(def _GL_MATRIX22_ARB 35030)
(def _GL_VERTEX_ARRAY_SIZE 32890)
(def _GL_COLOR_INDEXES 5635)
(def _GLUT_KEY_F9 9)
(def _GL_PROXY_TEXTURE_CUBE_MAP_ARB 34075)
(def _GL_ATIX_pn_triangles 1)
(def _GL_EXP 2048)
(def _GL_POST_COLOR_MATRIX_COLOR_TABLE 32978)
(def _GLU_NURBS_ERROR3 100253)
(def _GL_VARIABLE_G_NV 34089)
(def _GL_TEXTURE_STORAGE_HINT_APPLE 34236)
(def _GL_NORMAL_MAP 34065)
(def _GL_Q 8195)
(def _GL_TEXTURE_COMPARE_FUNC_ARB 34893)
(def _GL_ACTIVE_TEXTURE 34016)
(def _GL_UNSIGNED_INT 5125)
(def _GL_PIXEL_MAP_A_TO_A_SIZE 3257)
(def _GL_MATRIX0_ARB 35008)
(def _GL_STORAGE_SHARED_APPLE 34239)
(def _GL_GEQUAL 518)
(def _GL_SOURCE6_RGB_ARB 34182)
(def _GL_TEXTURE_COORD_ARRAY_TYPE 32905)
(def _GL_FRAGMENT_SHADER 35632)
(def _GLU_NURBS_RENDERER 100162)
(def _GL_FLOAT_VEC4_ARB 35666)
(def _GL_SPOT_CUTOFF 4614)
(def _GL_INVALID_ENUM 1280)
(def _GL_TEXTURE_RECTANGLE_EXT 34037)
(def _GL_ENABLE_BIT 8192)
(def _GL_FOG_COORD 33873)
(def _GL_POST_COLOR_MATRIX_BLUE_BIAS_SGI 32954)
(def _GL_TEXTURE28 34012)
(def _GL_POINT_CULL_MODE_ATI 24755)
(def _GL_MATRIX14_ARB 35022)
(def _GL_COLOR_MATERIAL_PARAMETER 2902)
(def _GL_VERTEX_ATTRIB_ARRAY_POINTER 34373)
(def _GL_COLOR_MATRIX_STACK_DEPTH_SGI 32946)
(def _GL_MAX_NAME_STACK_DEPTH 3383)
(def _GLU_TESS_EDGE_FLAG_DATA 100110)
(def _GL_STENCIL_WRITEMASK 2968)
(def _GLU_NURBS_ERROR6 100256)
(def __SSE2__ 1)
(def _GL_MAP2_TEXTURE_COORD_3 3509)
(def _GL_LOGIC_OP_MODE 3056)
(def _GL_CONSTANT_ATTENUATION 4615)
(def _GL_LUMINANCE_ALPHA_FLOAT16_APPLE 34847)
(def _GL_RGB_FLOAT32_APPLE 34837)
(def _GL_RGB 6407)
(def _GL_HILO8_NV 34910)
(def _GL_MAX_PROGRAM_ENV_PARAMETERS_ARB 34997)
(def _GL_PN_TRIANGLES_TESSELATION_LEVEL_ATIX 24724)
(def _GL_ADD_SIGNED 34164)
(def _GL_CLAMP_TO_EDGE_SGIS 33071)
(def _GL_TEXTURE_BORDER_VALUES_NV 34586)
(def _GL_COMBINER_MAPPING_NV 34115)
(def _GL_TRANSPOSE_CURRENT_MATRIX_ARB 34999)
(def _GLUT_WINDOW_DOUBLEBUFFER 115)
(def _GL_OPERAND0_ALPHA 34200)
(def _GL_MATRIX21_ARB 35029)
(def _GL_OFFSET_HILO_TEXTURE_RECTANGLE_NV 34901)
(def _GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE 32981)
(def _GL_TEXTURE_COMPARE_MODE_ARB 34892)
(def _GL_MAX_EXT 32776)
(def _GL_LIGHT6 16390)
(def _GL_BLEND_DST_ALPHA 32970)
(def _GL_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB 34826)
(def _GL_MAX_DRAW_BUFFERS 34852)
(def _GL_STATIC_DRAW_ARB 35044)
(def _GL_POST_CONVOLUTION_BLUE_BIAS 32802)
(def _GL_VERTEX_ATTRIB_MAP2_ORDER_APPLE 35336)
(def _GL_TEXTURE_BINDING_CUBE_MAP_ARB 34068)
(def _GL_BLUE_INTEGER_EXT 36246)
(def _GL_VERTEX_PROGRAM_POINT_SIZE_ARB 34370)
(def _GL_UNSIGNED_SHORT_8_8_REV_APPLE 34235)
(def __SSE2_MATH__ 1)
(def _GL_STENCIL_INDEX16_EXT 36169)
(def _GLU_TESS_VERTEX 100101)
(def _GLUT_GAME_MODE_REFRESH_RATE 5)
(def _GL_TEXTURE11_ARB 33995)
(def _GL_HALF_APPLE 5131)
(def _GL_SECONDARY_COLOR_ARRAY_TYPE_EXT 33883)
(def _GL_VERTEX_ARRAY_RANGE_POINTER_APPLE 34081)
(def _GL_VERTEX_ARRAY_POINTER 32910)
(def _GLUT_MENU_IN_USE 1)
(def _GL_HI_SCALE_NV 34574)
(def _GLUT_KEY_F4 4)
(def _GLU_NURBS_BEGIN_EXT 100164)
(def _GL_FRAGMENT_SHADER_ARB 35632)
(def _GL_DRAW_BUFFER6_ARB 34859)
(def _GL_RGBA16F_ARB 34842)
(def _GL_FLOAT_MAT4 35676)
(def _GL_SRC3_ALPHA 34187)
(def _GL_APPLE_vertex_array_object 1)
(def _GL_SAMPLER_3D 35679)
(def _GL_DT_SCALE_NV 34577)
(def _GLUT_ACTIVE_CTRL 2)
(def _GL_DOT3_RGBA 34479)
(def _GL_DOT_PRODUCT_DIFFUSE_CUBE_MAP_NV 34545)
(def _GL_EDGE_FLAG_ARRAY_STRIDE 32908)
(def _GL_MAP2_INDEX 3505)
(def _GL_COMBINER_INPUT_NV 34114)
(def _GL_MAX_VERTEX_UNITS_ARB 34468)
(def _GL_FOG_COORDINATE_ARRAY_STRIDE_EXT 33877)
(def _GL_SIGNED_LUMINANCE_NV 34561)
(def _GL_KEEP 7680)
(def _GL_DS_SCALE_NV 34576)
(def _GLUT_HAS_MOUSE 601)
(def _GL_PN_TRIANGLES_NORMAL_MODE_QUADRATIC_ATIX 24728)
(def _GL_EXT_depth_bounds_test 1)
(def _GL_MATRIX6_ARB 35014)
(def _GL_LINE_WIDTH_RANGE 2850)
(def _GLU_NURBS_ERROR1 100251)
(def _GL_COMBINER_BIAS_NV 34121)
(def _GLU_TESS_COORD_TOO_LARGE 100155)
(def _GL_UNPACK_IMAGE_BYTES_APPLE 35352)
(def _GL_VERTEX_ATTRIB_ARRAY_ENABLED_ARB 34338)
(def _GL_MAX_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB 34995)
(def _GL_VERTEX_ARRAY_TYPE 32891)
(def _GLUT_VIDEO_RESIZE_HEIGHT_DELTA 905)
(def _GL_TEXTURE_RANGE_POINTER_APPLE 34232)
(def _GL_PRIMARY_COLOR 34167)
(def _GL_COMPRESSED_LUMINANCE 34026)
(def _GL_SCALE_BY_FOUR_NV 34111)
(def _GL_RGB5 32848)
(def _GL_VOLATILE_APPLE 35354)
(def _GL_SIGNED_ALPHA8_NV 34566)
(def _GL_PER_STAGE_CONSTANTS_NV 34101)
(def _GLUT_MENU_NOT_IN_USE 0)
(def _GL_POST_COLOR_MATRIX_BLUE_SCALE_SGI 32950)
(def _GL_SIGNED_LUMINANCE8_NV 34562)
(def _GL_MAX_EVAL_ORDER 3376)
(def _GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT 36322)
(def __FLT_HAS_INFINITY__ 1)
(def _GL_SCISSOR_BIT 524288)
(def _GL_2D 1536)
(def _GL_COMPRESSED_LUMINANCE_ARB 34026)
(def _GLUT_CURSOR_FULL_CROSSHAIR 102)
(def _GL_UNSIGNED_BYTE 5121)
(def _GL_FLOAT_MAT2 35674)
(def _GL_MODELVIEW28_ARB 34620)
(def _GL_TEXTURE_CUBE_MAP_NEGATIVE_Y 34072)
(def _GL_LIGHTING 2896)
(def _GL_SMOOTH_POINT_SIZE_RANGE 2834)
(def _GL_DIFFUSE 4609)
(def _GL_DEPTH_TEST 2929)
(def _GL_TEXTURE_BINDING_RECTANGLE_ARB 34038)
(def _GL_LUMINANCE_ALPHA16UI_EXT 36219)
(def _GL_RGBA16I_EXT 36232)
(def _GL_PIXEL_MAP_I_TO_I_SIZE 3248)
(def _GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB 34466)
(def __LDBL_DIG__ 18)
(def _GL_FOG_COORDINATE_EXT 33873)
(def _GL_STATIC_READ_ARB 35045)
(def _GL_VERTEX_ATTRIB_ARRAY_STRIDE 34340)
(def _GL_R 8194)
(def _GL_TEXTURE_BIT 262144)
(def _GL_COLOR_TABLE_BIAS 32983)
(def _GL_STENCIL_BACK_PASS_DEPTH_PASS_ATI 34819)
(def _GL_CURRENT_PROGRAM 35725)
(def _GL_SOURCE0_RGB 34176)
(def _GL_TEXTURE_INDEX_SIZE_EXT 33005)
(def __GNUC__ 4)
(def _GL_DOT_PRODUCT_TEXTURE_3D_NV 34543)
(def _GL_MAX_PROGRAM_MATRIX_STACK_DEPTH_ARB 34350)
(def _GL_TEXTURE_CUBE_MAP 34067)
(def _GL_MAX_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB 34830)
(def _GL_RGB16 32852)
(def _GL_MAX_PROGRAM_TEMPORARIES_ARB 34981)
(def _GL_ONE_MINUS_DST_ALPHA 773)
(def _GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING_ARB 34970)
(def _GL_MAX_ELEMENTS_INDICES_EXT 33001)
(def _GL_DYNAMIC_DRAW_ARB 35048)
(def _GL_POINT_DISTANCE_ATTENUATION_ARB 33065)
(def _GL_CLIP_PLANE4 12292)
(def _GL_RGB_FLOAT32_ATI 34837)
(def _GL_RGBA32UI_EXT 36208)
(def _GL_TEXTURE_BLUE_SIZE 32862)
(def _GL_TEXTURE29_ARB 34013)
(def _GL_TEXTURE25_ARB 34009)
(def _GLUT_CURSOR_HELP 4)
(def _GL_STENCIL_VALUE_MASK 2963)
(def _GL_DEPTH24_STENCIL8_EXT 35056)
(def _GL_OBJECT_LINK_STATUS_ARB 35714)
(def _GL_MAX_TEXTURE_UNITS 34018)
(def _GL_FLOAT_VEC3 35665)
(def _GLU_EXTENSIONS 100801)
(def _GL_MAP2_TEXTURE_COORD_4 3510)
(def __LDBL_MAX_EXP__ 16384)
(def _GL_T 8193)
(def _GL_TEXTURE10_ARB 33994)
(def _GL_FLOAT_MAT2x4 35686)
(def _GL_BOOL_VEC3 35672)
(def _GL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB 34069)
(def _GL_AUX_BUFFERS 3072)
(def _GL_COLOR_INDEX12_EXT 32998)
(def _GL_PIXEL_MAP_B_TO_B 3192)
(def _GL_DRAW_BUFFER7 34860)
(def _GL_SAMPLE_ALPHA_TO_ONE_ARB 32927)
(def _GL_MIRROR_CLAMP_TO_EDGE_ATI 34627)
(def _GLUT_JOYSTICK_BUTTONS 614)
(def _GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT 35917)
(def _GLUT_MENU_NUM_ITEMS 300)
(def _GL_V2F 10784)
(def _GL_MAX_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB 34831)
(def _GL_PROJECTION_STACK_DEPTH 2980)
(def _GLUT_GAME_MODE_ACTIVE 0)
(def __LITTLE_ENDIAN__ 1)
(def _GL_COMPRESSED_RGB_ARB 34029)
(def _GLUT_KEY_F12 12)
(def _GLUT_HAS_TABLET 604)
(def _GL_ARB_shadow_ambient 1)
(def _GL_ARRAY_BUFFER_BINDING_ARB 34964)
(def __DBL_MANT_DIG__ 53)
(def __PIC__ 1)
(def _GL_BLEND_EQUATION_RGB 32777)
(def _GL_PIXEL_MAP_A_TO_A 3193)
(def _GL_BLEND_SRC_ALPHA_EXT 32971)
(def _GL_MODELVIEW9_ARB 34601)
(def _GL_UNSIGNED_SHORT_4_4_4_4_REV 33637)
(def _GL_ALPHA8I_EXT 36240)
(def _GL_OPERAND2_ALPHA_ARB 34202)
(def _GL_LINE_STRIP 3)
(def _GL_INDEX_OFFSET 3347)
(def _GL_SECONDARY_COLOR_ARRAY_TYPE 33883)
(def _GL_ELEMENT_ARRAY_BUFFER_BINDING 34965)
(def _GL_ARB_texture_env_dot3 1)
(def _GL_UNSIGNED_INT_8_8_S8_S8_REV_NV 34523)
(def _GLUT_GAME_MODE_POSSIBLE 1)
(def _GL_EDGE_FLAG_ARRAY 32889)
(def _GL_MATRIX8_ARB 35016)
(def _GLU_TESS_ERROR6 100156)
(def _GL_POST_COLOR_MATRIX_GREEN_BIAS_SGI 32953)
(def _GL_VARIABLE_F_NV 34088)
(def _GL_SECONDARY_COLOR_ARRAY_STRIDE_EXT 33884)
(def _GLU_SAMPLING_METHOD 100205)
(def _GL_EXT_texture_mirror_clamp 1)
(def _GL_COLOR_ATTACHMENT6_EXT 36070)
(def _GL_MODELVIEW23_ARB 34615)
(def _GL_LUMINANCE_ALPHA_INTEGER_EXT 36253)
(def _GL_SIGNED_INTENSITY_NV 34567)
(def __LDBL_MAX_10_EXP__ 4932)
(def _GL_VERTEX_PROGRAM_ARB 34336)
(def _GL_UNIFORM_BUFFER_BINDING_EXT 36335)
(def _GLU_CULLING 100201)
(def _GL_HISTOGRAM_WIDTH 32806)
(def _GLUT_HAS_DIAL_AND_BUTTON_BOX 603)
(def _GL_GLEXT_VERSION 7)
(def _GL_TEXTURE_3D 32879)
(def _GL_STENCIL_INDEX 6401)
(def _GL_STACK_OVERFLOW 1283)
(def _GL_MATRIX16_ARB 35024)
(def _GL_VERTEX_ARRAY_RANGE_APPLE 34077)
(def _GL_RGBA_FLOAT16_ATI 34842)
(def _GL_DRAW_BUFFER12_ARB 34865)
(def _GL_MAX_ELEMENTS_INDICES 33001)
(def _GL_INDEX_CLEAR_VALUE 3104)
(def _GL_RGBA16 32859)
(def _GL_TEXTURE1 33985)
(def i386 1)
(def _GL_LUMINANCE_ALPHA8I_EXT 36243)
(def _GL_ELEMENT_BUFFER_BINDING_APPLE 35345)
(def _GL_BUFFER_USAGE 34661)
(def _GLU_NURBS_NORMAL_EXT 100166)
(def _GL_STREAM_READ 35041)
(def _GL_POST_COLOR_MATRIX_RED_SCALE_SGI 32948)
(def _GLU_NURBS_RENDERER_EXT 100162)
(def _GL_DEPTH_ATTACHMENT_EXT 36096)
(def _GL_RENDERBUFFER_SAMPLES_EXT 36011)
(def _GL_POST_COLOR_MATRIX_RED_SCALE 32948)
(def _GL_PRIMARY_COLOR_NV 34092)
(def _GL_MODELVIEW3_ARB 34595)
(def _GL_OBJECT_SHADER_SOURCE_LENGTH_ARB 35720)
(def _GL_RGBA_FLOAT32_APPLE 34836)
(def __SHRT_MAX__ 32767)
(def _GL_CCW 2305)
(def _GL_SAMPLER_CUBE_SHADOW_EXT 36293)
(def _GL_DEPTH_COMPONENT16 33189)
(def _GL_NORMAL_ARRAY_POINTER 32911)
(def _GLUT_VIDEO_RESIZE_POSSIBLE 900)
(def _GL_COLOR_MATERIAL 2903)
(def _GL_MAX_PROGRAM_EXEC_INSTRUCTIONS_NV 35060)
(def _GL_EDGE_FLAG 2883)
(def _GL_TEXTURE0 33984)
(def _GLU_NURBS_ERROR24 100274)
(def _GL_TEXTURE_RED_TYPE_ARB 35856)
(def _GLUT_HAS_SPACEBALL 602)
(def _GL_RGBA4 32854)
(def _GL_SRGB_ALPHA 35906)
(def _GL_STATIC_READ 35045)
(def _GL_OBJECT_TYPE_ARB 35662)
(def _GL_GENERATE_MIPMAP 33169)
(def _GL_COLOR_ARRAY_POINTER 32912)
(def _GL_ONE_MINUS_SRC_COLOR 769)
(def _GL_CURRENT_RASTER_POSITION_VALID 2824)
(def _GL_COLOR_TABLE_ALPHA_SIZE 32989)
(def _GL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB 34071)
(def _GL_RED_INTEGER_EXT 36244)
(def _GL_ORDER 2561)
(def _GL_VERTEX_BLEND_ARB 34471)
(def _GL_ATI_separate_stencil 1)
(def _GL_OR_REVERSE 5387)
(def _GL_BUFFER_MAP_POINTER 35005)
(def _GL_EXT_geometry_shader4 1)
(def _GLUT_KEY_END 107)
(def _GLU_TESS_WINDING_ODD 100130)
(def _GL_IBM_rasterpos_clip 1)
(def _GL_MODELVIEW22_ARB 34614)
(def _GL_UNPACK_SKIP_ROWS 3315)
(def _GL_BLEND_COLOR 32773)
(def _GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_EXT 35968)
(def _GL_OBJECT_ACTIVE_UNIFORMS_ARB 35718)
(def _GL_OBJECT_COMPILE_STATUS_ARB 35713)
(def _GL_LUMINANCE6_ALPHA2 32836)
(def _GL_DEPTH_CLAMP_NV 34383)
(def _GL_TRANSFORM_FEEDBACK_VARYINGS_EXT 35971)
(def _GL_RGB_SCALE_ARB 34163)
(def _GL_FUNC_SUBTRACT 32778)
(def _GLUT_VIDEO_RESIZE_X 906)
(def _GL_CONSTANT_ARB 34166)
(def _GL_FOG_COORD_ARRAY_STRIDE 33877)
(def _GL_SAMPLER_2D_ARRAY_SHADOW_EXT 36292)
(def _GL_RGB5_A1 32855)
(def _GL_VIEWPORT_BIT 2048)
(def _GL_COEFF 2560)
(def _GLUT_BLUE 2)
(def _GL_CLIENT_ACTIVE_TEXTURE 34017)
(def _GL_SRGB8 35905)
(def _GL_COLOR_ATTACHMENT0_EXT 36064)
(def __FLT_MAX_EXP__ 128)
(def _GL_SRC4_ALPHA 34188)
(def _GL_LUMINANCE12_ALPHA12 32839)
(def _GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_EXT 35973)
(def _GL_MODELVIEW10_ARB 34602)
(def _GL_COLOR_ATTACHMENT7_EXT 36071)
(def _GL_RGB8UI_EXT 36221)
(def _GLUT_CURSOR_INFO 2)
(def _GLU_PARAMETRIC_ERROR 100216)
(def _GL_NORMAL_ARRAY 32885)
(def _GL_DYNAMIC_COPY_ARB 35050)
(def _GL_VERSION_2_1 1)
(def _GL_CURRENT_RASTER_POSITION 2823)
(def _GL_TEXTURE3_ARB 33987)
(def _GL_COMBINE_ARB 34160)
(def _GL_COMPRESSED_LUMINANCE_ALPHA_ARB 34027)
(def _GL_TEXTURE_FILTER_CONTROL 34048)
(def _GL_READ_ONLY 35000)
(def _GL_DEPTH_CLEAR_VALUE 2931)
(def _GL_SHADING_LANGUAGE_VERSION 35724)
(def _GL_ALPHA_TEST 3008)
(def _GL_TEXTURE_BINDING_RECTANGLE_EXT 34038)
(def _GL_TEXTURE_DEPTH_TYPE_ARB 35862)
(def _GL_SOURCE6_ALPHA 34190)
(def _GLUT_OVERLAY_DAMAGED 805)
(def _GL_E_TIMES_F_NV 34097)
(def __DBL_HAS_QUIET_NAN__ 1)
(def _GLUT_KEY_INSERT 108)
(def _GL_PROGRAM_LENGTH_ARB 34343)
(def _GL_FOG_COORDINATE 33873)
(def _GL_TEXTURE15_ARB 33999)
(def _GL_SAMPLE_BUFFERS_ARB 32936)
(def _GLU_TESS_END_DATA 100108)
(def _GL_DITHER 3024)
(def _GLUT_WINDOW_DEPTH_SIZE 106)
(def _GL_SOURCE6_ALPHA_ARB 34190)
(def _GL_R3_G3_B2 10768)
(def _GL_POINT_SIZE_RANGE 2834)
(def _GL_VERSION_1_2 1)
(def _GL_ATI_text_fragment_shader 1)
(def _GL_TEXTURE_SHADER_NV 34526)
(def _GL_MAP1_VERTEX_4 3480)
(def _GLU_FILL 100012)
(def _GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH_EXT 35958)
(def _GL_SECONDARY_COLOR_ARRAY_STRIDE 33884)
(def _GL_LUMINANCE32UI_EXT 36212)
(def _GL_OPERAND6_ALPHA_ARB 34206)
(def _GL_MATRIX17_ARB 35025)
(def _GLUT_CURSOR_BOTTOM_RIGHT_CORNER 18)
(def _GL_EXT_packed_depth_stencil 1)
(def _GL_APPLE_element_array 1)
(def _GL_STENCIL_TEST 2960)
(def _GL_STORAGE_CACHED_APPLE 34238)
(def _GL_MODELVIEW 5888)
(def _GL_PN_TRIANGLES_NORMAL_MODE_ATI 24723)
(def _GL_PURGEABLE_APPLE 35357)
(def _GLU_NURBS_MODE_EXT 100160)
(def _GL_INT_SAMPLER_1D_EXT 36297)
(def _GL_VIBRANCE_BIAS_NV 34585)
(def _GL_DONT_CARE 4352)
(def _GL_EXT_draw_range_elements 1)
(def _GLUT_DISPLAY_MODE_POSSIBLE 400)
(def _GLU_NURBS_ERROR28 100278)
(def _GLU_NURBS_ERROR15 100265)
(def _GL_ALIASED_LINE_WIDTH_RANGE 33902)
(def _GL_LUMINANCE_ALPHA_FLOAT16_ATI 34847)
(def _GL_PIXEL_MAP_I_TO_G_SIZE 3251)
(def _GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING_ARB 34972)
(def _GL_MODULATE 8448)
(def __DBL_MAX_EXP__ 1024)
(def _GLU_NURBS_ERROR18 100268)
(def _GL_SAMPLE_COVERAGE_INVERT_ARB 32939)
(def _GL_FEEDBACK_BUFFER_TYPE 3570)
(def _GL_SRC_COLOR 768)
(def _GL_TEXTURE_BINDING_3D 32874)
(def _GL_ARB_half_float_pixel 1)
(def _GL_FRAGMENT_DEPTH_EXT 33874)
(def _GL_RENDERBUFFER_WIDTH_EXT 36162)
(def _GL_COMPRESSED_RGBA 34030)
(def _GL_LIGHT3 16387)
(def _GL_MAP2_GRID_SEGMENTS 3539)
(def _GL_MAX_PROGRAM_LOOP_COUNT_NV 35064)
(def _GL_MAX_VARYING_FLOATS_ARB 35659)
(def _GL_FRONT_FACE 2886)
(def _GL_PROGRAM_ALU_INSTRUCTIONS_ARB 34821)
(def _GL_T4F_C4F_N3F_V4F 10797)
(def _GL_NV_multisample_filter_hint 1)
(def _GLUT_INIT_WINDOW_HEIGHT 503)
(def _GL_SHADER_OPERATION_NV 34527)
(def _GL_ONE_MINUS_CONSTANT_COLOR 32770)
(def _GL_DEPTH_TEXTURE_MODE_ARB 34891)
(def _GL_PASS_THROUGH_TOKEN 1792)
(def _GL_POINT_SPRITE_NV 34913)
(def _GL_COMBINE_ALPHA 34162)
(def _GL_COLOR_ATTACHMENT11_EXT 36075)
(def _GL_POST_CONVOLUTION_GREEN_SCALE 32797)
(def _GL_ACTIVE_UNIFORM_MAX_LENGTH 35719)
(def _GL_TEXTURE22 34006)
(def _GL_SOURCE5_RGB 34181)
(def _GL_TEXTURE12_ARB 33996)
(def _GL_INTENSITY16UI_EXT 36217)
(def _GL_INTENSITY16 32845)
(def _GL_ADD 260)
(def _GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT 36055)
(def _GL_EXT_texture_filter_anisotropic 1)
(def _GLUT_CURSOR_RIGHT_SIDE 15)
(def _GL_PREVIOUS_TEXTURE_INPUT_NV 34532)
(def _GL_VERTEX_ATTRIB_MAP1_SIZE_APPLE 35330)
(def _GL_BLEND_EQUATION_ALPHA_EXT 34877)
(def _GL_YCBCR_422_APPLE 34233)
(def _GL_DEPTH_COMPONENT 6402)
(def _GL_RENDERBUFFER_HEIGHT_EXT 36163)
(def _GL_SHADER_SOURCE_LENGTH 35720)
(def _GL_STENCIL 6146)
(def _GL_PROGRAM_ERROR_STRING_ARB 34932)
(def _GL_POLYGON_SMOOTH_HINT 3155)
(def _GL_MIRROR_CLAMP_TO_EDGE_EXT 34627)
(def _GLUT_HAS_JOYSTICK 612)
(def _GL_RGBA32I_EXT 36226)
(def _GL_INDEX_WRITEMASK 3105)
(def _GL_EXT_rescale_normal 1)
(def _GL_POLYGON_STIPPLE_BIT 16)
(def _GL_TEXTURE6_ARB 33990)
(def _GLUT_INIT_WINDOW_X 500)
(def _GL_EXT_bgra 1)
(def _GL_VARIABLE_C_NV 34085)
(def _GL_UNPACK_ROW_LENGTH 3314)
(def _GL_SIGNED_RGBA8_NV 34556)
(def _GL_BUFFER_FLUSHING_UNMAP_APPLE 35347)
(def _GL_STATIC_COPY 35046)
(def _GL_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB 34994)
(def _GL_STENCIL_FUNC 2962)
(def _GL_DRAW_BUFFER3_ARB 34856)
(def _GL_NICEST 4354)
(def _GL_OBJECT_INFO_LOG_LENGTH_ARB 35716)
(def _GL_MODULATE_ADD_ATI 34628)
(def _GL_COLOR_TABLE_RED_SIZE 32986)
(def _GL_MODELVIEW_STACK_DEPTH 2979)
(def _GL_NEAREST_MIPMAP_LINEAR 9986)
(def _GL_SUBTRACT_ARB 34023)
(def _GL_MAX_WEIGHTED_ATI 34686)
(def _GL_DEPTH_COMPONENT24_ARB 33190)
(def _GL_FLOAT_VEC2_ARB 35664)
(def _GL_TEXTURE29 34013)
(def _GLU_ERROR 100103)
(def _GL_SRGB_EXT 35904)
(def _GL_ALPHA_INTEGER_EXT 36247)
(def _GL_COLOR_SUM 33880)
(def _GL_POST_CONVOLUTION_RED_SCALE 32796)
(def _GLU_VERSION_1_1 1)
(def _GL_EXT_blend_equation_separate 1)
(def _GLU_MAP1_TRIM_3 100211)
(def _GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_EXT 36321)
(def _GL_TEXTURE_COMPARE_FUNC 34893)
(def _GL_PROGRAM_PARAMETERS_ARB 34984)
(def _GL_LUMINANCE4 32831)
(def _GL_MAX_TEXTURE_IMAGE_UNITS 34930)
(def _GL_EXT_gpu_program_parameters 1)
(def _GL_DEPTH_COMPONENT32 33191)
(def _GL_LUMINANCE_FLOAT32_APPLE 34840)
(def _GL_SOURCE7_ALPHA_ARB 34191)
(def _GLU_TESS_ERROR4 100154)
(def _GL_VERTEX_ATTRIB_ARRAY_ENABLED 34338)
(def _GL_TEXTURE_DEPTH 32881)
(def _GL_MATRIX2_ARB 35010)
(def _GL_INTENSITY32F_ARB 34839)
(def _GL_MAX_VARYING_FLOATS 35659)
(def _GLU_NURBS_VERTEX_DATA 100171)
(def _GLUT_STEREO 256)
(def _GL_TEXTURE_ENV 8960)
(def _GL_FRAGMENT_DEPTH 33874)
(def _GLU_TESS_EDGE_FLAG 100104)
(def _GL_NV_depth_clamp 1)
(def _GL_POLYGON_OFFSET_FACTOR 32824)
(def _GL_TEXTURE_PRIORITY 32870)
(def __SCHAR_MAX__ 127)
(def _GL_LINES_ADJACENCY_EXT 10)
(def _GL_DSDT8_MAG8_INTENSITY8_NV 34571)
(def _GL_INT_SAMPLER_BUFFER_EXT 36304)
(def _GL_CURRENT_FOG_COORD 33875)
(def _GL_RGB12 32851)
(def _GLUT_HAS_KEYBOARD 600)
(def _GL_APPLE_transform_hint 1)
(def _GL_MODELVIEW8_ARB 34600)
(def _GL_UNSIGNED_INT_24_8_EXT 34042)
(def _GLU_EXTERIOR 100123)
(def _GL_BOOL_VEC2 35671)
(def _GL_POINT_CULL_CLIP_ATI 24757)
(def _GLU_NURBS_BEGIN_DATA 100170)
(def _GL_TEXTURE13 33997)
(def _GL_OPERAND3_ALPHA 34203)
(def _GL_TEXTURE_WRAP_R 32882)
(def _GL_COLOR_INDEX 6400)
(def _GL_MODELVIEW11_ARB 34603)
(def _GL_DRAW_BUFFER1_ARB 34854)
(def _GL_AND_REVERSE 5378)
(def _GLU_NURBS_COLOR_DATA 100173)
(def _GL_OBJECT_VALIDATE_STATUS_ARB 35715)
(def _GL_MODELVIEW30_ARB 34622)
(def _GL_PERSPECTIVE_CORRECTION_HINT 3152)
(def _GL_NEAREST 9728)
(def _GL_SOURCE5_RGB_ARB 34181)
(def _GL_MATRIX19_ARB 35027)
(def _GL_TEXTURE31 34015)
(def _GL_FOG_COORD_ARRAY_POINTER 33878)
(def _GL_DRAW_BUFFER9 34862)
(def _GL_MATRIX18_ARB 35026)
(def _GLU_NURBS_ERROR4 100254)
(def _GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT 34047)
(def _GLUT_MACOSX_IMPLEMENTATION 2)
(def _GL_ARB_texture_mirrored_repeat 1)
(def _GL_MODELVIEW7_ARB 34599)
(def _GL_COMPRESSED_ALPHA 34025)
(def _GL_BLEND_DST 3040)
(def _GL_DEPTH 6145)
(def _GL_SLUMINANCE8_ALPHA8 35909)
(def _GL_COMPILE 4864)
(def _GL_RASTER_POSITION_UNCLIPPED_IBM 103010)
(def _GL_NUM_GENERAL_COMBINERS_NV 34126)
(def _GLU_PATH_LENGTH 100215)
(def _GL_FLOAT_MAT2_ARB 35674)
(def _GL_SRC3_RGB 34179)
(def _GL_APPLE_pixel_buffer 1)
(def _GL_QUERY_COUNTER_BITS_ARB 34916)
(def _GL_RENDER 7168)
(def _GL_VERTEX_ATTRIB_MAP1_APPLE 35328)
(def _GLUT_WINDOW_RGBA 116)
(def _GL_EXT_blend_subtract 1)
(def _GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING 34972)
(def _GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT 36060)
(def _GL_VERTEX_ATTRIB_MAP2_APPLE 35329)
(def _GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT 35881)
(def _GL_INT_SAMPLER_2D_RECT_EXT 36301)
(def _GL_MAX_TEXTURE_COORDS 34929)
(def _GL_DRAW_BUFFER9_ARB 34862)
(def _GL_READ_ONLY_ARB 35000)
(def _GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT 36051)
(def _GL_SAMPLER_1D_ARRAY_EXT 36288)
(def __FLT_MAX_10_EXP__ 38)
(def _GL_SHORT 5122)
(def _GL_LIST_MODE 2864)
(def _GL_PROGRAM_ERROR_POSITION_ARB 34379)
(def _GL_SEPARABLE_2D 32786)
(def _GL_SPOT_DIRECTION 4612)
(def _GL_EXT_framebuffer_multisample 1)
(def _GL_BACK_RIGHT 1027)
(def _GL_VERTEX_ATTRIB_ARRAY_INTEGER_EXT 35069)
(def _GL_INDEX_ARRAY_BUFFER_BINDING_ARB 34969)
(def _GL_SOURCE3_RGB 34179)
(def _GL_SEPARATE_SPECULAR_COLOR 33274)
(def _GL_ARB_texture_env_add 1)
(def _GL_TRIANGLE_FAN 6)
(def _GLUT_INDEX 1)
(def _GL_DRAW_BUFFER7_ARB 34860)
(def _GL_RENDERBUFFER_GREEN_SIZE_EXT 36177)
(def _GL_EXT_bindable_uniform 1)
(def _GL_INDEX_ARRAY_POINTER 32913)
(def _GLUT_CURSOR_LEFT_RIGHT 11)
(def _GL_HILO16_NV 34552)
(def _GL_DOMAIN 2562)
(def _GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT 36057)
(def _GL_UNSIGNED_SHORT_8_8_APPLE 34234)
(def _GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT 36323)
(def _GL_RENDERBUFFER_DEPTH_SIZE_EXT 36180)
(def _GL_POINT_SIZE_MIN 33062)
(def _GL_LUMINANCE16UI_EXT 36218)
(def _GL_ALPHA_BLEND_EQUATION_ATI 34877)
(def _GL_MAX_SAMPLES_EXT 36183)
(def _GL_RED 6403)
(def _GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB 34464)
(def _GL_ARB_multisample 1)
(def _GL_AUTO_NORMAL 3456)
(def _GLUT_CURSOR_BOTTOM_LEFT_CORNER 19)
(def _GLUT_WINDOW_X 100)
(def _GL_POINT_SPRITE 34913)
(def _GL_SECONDARY_COLOR_ARRAY_POINTER_EXT 33885)
(def __LDBL_MANT_DIG__ 64)
(def _GL_BLEND_DST_RGB 32968)
(def _GL_TRANSPOSE_PROJECTION_MATRIX_ARB 34020)
(def _GLU_VERTEX 100101)
(def _GL_DS_BIAS_NV 34582)
(def _GL_COMBINER_SUM_OUTPUT_NV 34124)
(def _GL_FOG_COORDINATE_ARRAY_STRIDE 33877)
(def _GL_READ_FRAMEBUFFER_BINDING_EXT 36010)
(def _GL_MAX_RECTANGLE_TEXTURE_SIZE_ARB 34040)
(def _GL_COLOR_ARRAY_TYPE 32898)
(def _GL_LUMINANCE16F_ARB 34846)
(def _GL_PROGRAM_NATIVE_ATTRIBS_ARB 34990)
(def _GL_TEXTURE_BLUE_TYPE_ARB 35858)
(def _GL_SAMPLE_COVERAGE_VALUE 32938)
(def _GL_PASS_THROUGH_NV 34534)
(def _GL_VARIABLE_D_NV 34086)
(def _GL_EXT_blend_minmax 1)
(def _GL_COPY_PIXEL_TOKEN 1798)
(def _GLU_NURBS_ERROR37 100287)
(def _GL_REFLECTION_MAP 34066)
(def _GL_TEXTURE_CUBE_MAP_POSITIVE_Y 34071)
(def _GL_OPERAND1_RGB_ARB 34193)
(def _GL_SAMPLE_COVERAGE_ARB 32928)
(def _GL_MAX_PROGRAM_TEXEL_OFFSET_EXT 35077)
(def _GL_UNDEFINED_APPLE 35356)
(def _GL_MODELVIEW16_ARB 34608)
(def _GL_POLYGON_OFFSET_LINE 10754)
(def _GL_TEXTURE_INTENSITY_SIZE 32865)
(def _GL_ARB_fragment_program_shadow 1)
(def _GL_TEXTURE_CUBE_MAP_POSITIVE_X 34069)
(def _GL_TEXTURE26_ARB 34010)
(def _GL_MATRIX30_ARB 35038)
(def _GL_MAX_VERTEX_UNIFORM_COMPONENTS_ARB 35658)
(def _GL_PROGRAM_NAME_ARB 34423)
(def _GL_SAMPLER_1D_SHADOW 35681)
(def _GL_BLEND_SRC 3041)
(def _GL_PROGRAM_TEX_INSTRUCTIONS_ARB 34822)
(def _GLUT_CURSOR_LEFT_ARROW 1)
(def _GLUT_CURSOR_UP_DOWN 10)
(def _GL_GEOMETRY_INPUT_TYPE_EXT 36315)
(def _GL_MAP_STENCIL 3345)
(def _GL_MAX_FRAGMENT_UNIFORM_COMPONENTS 35657)
(def _GL_NV_vertex_program3 1)
(def __SSE_MATH__ 1)
(def _GL_PIXEL_MAP_I_TO_A_SIZE 3253)
(def _GL_ACCUM_GREEN_BITS 3417)
(def _GL_VERTEX_ATTRIB_ARRAY_SIZE 34339)
(def _GL_SRC4_RGB 34180)
(def _GL_TEXTURE6 33990)
(def _GL_SGIS_texture_lod 1)
(def _GL_COMBINER_COMPONENT_USAGE_NV 34116)
(def _GL_SOURCE4_RGB 34180)
(def _GL_MAX_VIEWPORT_DIMS 3386)
(def _GL_RENDERBUFFER_EXT 36161)
(def _GL_PIXEL_MAP_I_TO_A 3189)
(def _GL_SELECTION_BUFFER_SIZE 3572)
(def _GL_RETAINED_APPLE 35355)
(def _GL_LIGHT_MODEL_SPECULAR_VECTOR_APPLE 34224)
(def _GL_UNSIGNED_INT_8_8_8_8_REV 33639)
(def _GL_FRONT 1028)
(def __FLT_HAS_QUIET_NAN__ 1)
(def _GL_BUFFER_ACCESS_ARB 35003)
(def _GL_MODELVIEW24_ARB 34616)
(def _GL_MAP1_TEXTURE_COORD_3 3477)
(def _GLUT_WINDOW_ACCUM_ALPHA_SIZE 114)
(def _GL_QUERY_RESULT_ARB 34918)
(def _GL_ALPHA32F_ARB 34838)
(def _GLU_INTERIOR 100122)
(def _GL_COLOR_SUM_EXT 33880)
(def _GL_RENDERBUFFER_BLUE_SIZE_EXT 36178)
(def _GL_ARB_shading_language_100 1)
(def _GL_TEXTURE_COORD_ARRAY_SIZE 32904)
(def _GL_ALPHA_SCALE 3356)
(def _GL_TEXTURE_MIN_LOD 33082)
(def _GLUT_DEVICE_KEY_REPEAT 611)
(def _GLU_EXT_nurbs_tessellator 1)
(def _GL_MAX_VERTEX_ATTRIBS 34921)
(def _GLU_LINE 100011)
(def _GL_INT_VEC4_ARB 35669)
(def _GL_EXPAND_NEGATE_NV 34105)
(def _GL_POINT_SMOOTH 2832)
(def _GL_PN_TRIANGLES_NORMAL_MODE_LINEAR_ATI 24727)
(def _GL_UNSIGNED_SHORT_4_4_4_4 32819)
(def _GL_SECONDARY_COLOR_ARRAY_POINTER 33885)
(def _GL_FLOAT_VEC4 35666)
(def _GL_MAX_PROGRAM_TEX_INSTRUCTIONS_ARB 34828)
(def _GL_MAX_PROGRAM_NATIVE_PARAMETERS_ARB 34987)
(def _GL_TEXTURE_LUMINANCE_SIZE 32864)
(def _GL_MODELVIEW29_ARB 34621)
(def _GL_LUMINANCE32F_ARB 34840)
(def _GL_LIGHT7 16391)
(def _GL_CURRENT_TEXTURE_COORDS 2819)
(def _GL_NV_texture_shader2 1)
(def _GL_COLOR_ATTACHMENT13_EXT 36077)
(def _GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING 34975)
(def _GL_TEXTURE23_ARB 34007)
(def _GL_POINT_SIZE_MAX_ARB 33063)
(def _GLU_FLAT 100001)
(def _GL_ONE 1)
(def _GL_CONSTANT_BORDER 33105)
(def _GL_NORMAL_ARRAY_STRIDE 32895)
(def _GLU_TESS_MISSING_BEGIN_CONTOUR 100152)
(def _GL_ACCUM_BUFFER_BIT 512)
(def _GL_QUERY_RESULT_AVAILABLE 34919)
(def _GL_RGB32F_ARB 34837)
(def _GL_TEXTURE_MAG_FILTER 10240)
(def _GL_TEXTURE2_ARB 33986)
(def _GL_ARB_texture_env_crossbar 1)
(def _GLU_INVALID_OPERATION 100904)
(def _GL_SLUMINANCE 35910)
(def _GL_MATRIX9_ARB 35017)
(def _GL_QUADRATIC_ATTENUATION 4617)
(def _GL_RESCALE_NORMAL 32826)
(def _GL_CURRENT_MATRIX_ARB 34369)
(def _GL_AUX0 1033)
(def _GL_COMBINER_AB_DOT_PRODUCT_NV 34117)
(def _GL_TEXTURE9 33993)
(def _GL_OPERAND6_RGB_ARB 34198)
(def _GL_CURRENT_VERTEX_ATTRIB 34342)
(def _GL_ALPHA12 32829)
(def _GL_BOOL_VEC2_ARB 35671)
(def _GL_FUNC_ADD_EXT 32774)
(def _GL_SOURCE1_RGB_ARB 34177)
(def _GL_CLIP_PLANE5 12293)
(def _GL_TEXT_FRAGMENT_SHADER_ATI 33280)
(def _GL_LUMINANCE8 32832)
(def _GL_POINT_CULL_CENTER_ATI 24756)
(def _GL_MAX_LIST_NESTING 2865)
(def _GL_COMBINER5_NV 34133)
(def _GL_VERTEX_SHADER_ARB 35633)
(def _GLU_OBJECT_PARAMETRIC_ERROR_EXT 100208)
(def _GL_TEXTURE_MAX_LOD_SGIS 33083)
(def _GL_POLYGON_SMOOTH 2881)
(def _GL_COMPRESSED_SLUMINANCE_EXT 35914)
(def _GL_TRANSFORM_FEEDBACK_BUFFER_MODE_EXT 35967)
(def _GL_SGIS_texture_edge_clamp 1)
(def _GL_COLOR_ARRAY 32886)
(def _GL_COLOR_ATTACHMENT3_EXT 36067)
(def _GL_ELEMENT_ARRAY_BUFFER_ARB 34963)
(def _GL_APPLE_client_storage 1)
(def _GL_TABLE_TOO_LARGE 32817)
(def _GL_DRAW_BUFFER6 34859)
(def _GL_SIGNED_ALPHA_NV 34565)
(def _GL_SAMPLER_2D_SHADOW_ARB 35682)
(def _GL_FLOAT_MAT4_ARB 35676)
(def _GL_TEXTURE_COMPARE_FAIL_VALUE_ARB 32959)
(def _GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT 36182)
(def _GL_MAX_VERTEX_UNIFORM_COMPONENTS 35658)
(def _GL_MINMAX_SINK 32816)
(def _GL_STENCIL_BACK_PASS_DEPTH_FAIL 34818)
(def _GL_DRAW_FRAMEBUFFER_EXT 36009)
(def _GL_PROXY_HISTOGRAM 32805)
(def _GL_FOG_COORDINATE_ARRAY_TYPE 33876)
(def _GL_SRC2_RGB 34178)
(def _GL_DEPTH_RANGE 2928)
(def _GL_TEXTURE18 34002)
(def _GL_DYNAMIC_DRAW 35048)
(def _GL_ARRAY_BUFFER_ARB 34962)
(def _GL_PIXEL_MAP_B_TO_B_SIZE 3256)
(def _GLU_TESS_WINDING_POSITIVE 100132)
(def _GL_ARB_texture_float 1)
(def _GLU_TRUE 1)
(def _GL_RGB10 32850)
(def _GL_FRAMEBUFFER_UNSUPPORTED_EXT 36061)
(def _GLUT_KEY_F3 3)
(def _GL_APPLE_ycbcr_422 1)
(def _GL_POINT_FADE_THRESHOLD_SIZE 33064)
(def _GL_BLEND_COLOR_EXT 32773)
(def _GL_NV_blend_square 1)
(def _GL_MODELVIEW14_ARB 34606)
(def _GL_VERSION_1_4 1)
(def _GL_PIXEL_PACK_BUFFER 35051)
(def _GL_COMPARE_R_TO_TEXTURE_ARB 34894)
(def _GL_DST_COLOR 774)
(def _GL_PROXY_TEXTURE_RECTANGLE_ARB 34039)
(def _GL_DRAW_PIXELS_APPLE 35338)
(def _GL_LINES 1)
(def _GL_TEXTURE_GEN_T 3169)
(def _GLUT_KEY_F11 11)
(def _GLU_SILHOUETTE 100013)
(def _GL_SECONDARY_COLOR_NV 34093)
(def _GL_SLUMINANCE8 35911)
(def _GLUT_NUM_DIALS 608)
(def _GL_SOURCE7_ALPHA 34191)
(def _GL_MODELVIEW_MATRIX 2982)
(def _GL_FLOAT_MAT3 35675)
(def _GL_CURRENT_SECONDARY_COLOR_EXT 33881)
(def _GL_DYNAMIC_READ 35049)
(def _GL_OR 5383)
(def _GL_PN_TRIANGLES_POINT_MODE_LINEAR_ATIX 24725)
(def _GL_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB 34824)
(def _GL_SRC5_RGB 34181)
(def _GL_LINE_STRIP_ADJACENCY_EXT 11)
(def _GLUT_NORMAL 0)
(def _GL_TEXTURE 5890)
(def _GLUT_SCREEN_WIDTH 200)
(def _GLU_NURBS_ERROR2 100252)
(def _GL_TEXTURE_CUBE_MAP_NEGATIVE_Z 34074)
(def _GL_EDGE_FLAG_ARRAY_BUFFER_BINDING_ARB 34971)
(def _GL_TEXTURE30_ARB 34014)
(def _GL_ALPHA_FLOAT16_APPLE 34844)
(def _GL_UNSIGNED_SHORT 5123)
(def _GL_PIXEL_UNPACK_BUFFER_ARB 35052)
(def __GNUC_GNU_INLINE__ 1)
(def _GL_INTENSITY16I_EXT 36235)
(def _GL_SAMPLER_2D 35678)
(def _GLU_EXT_object_space_tess 1)
(def _GL_ALPHA 6406)
(def _GLUT_NOT_VISIBLE 0)
(def _GL_FOG_COORDINATE_SOURCE 33872)
(def _GL_DOT3_RGB_ARB 34478)
(def _GL_COMPILE_STATUS 35713)
(def _GL_SOURCE5_ALPHA 34189)
(def _GLUT_WINDOW_CURSOR 122)
(def _GL_MAGNITUDE_BIAS_NV 34584)
(def _GL_OFFSET_HILO_PROJECTIVE_TEXTURE_2D_NV 34902)
(def __GNUC_MINOR__ 0)
(def _GL_TEXTURE_1D 3552)
(def _GL_DOT_PRODUCT_CONST_EYE_REFLECT_CUBE_MAP_NV 34547)
(def _GL_POINT_SPRITE_R_MODE_NV 34915)
(def _GL_COLOR_SUM_ARB 33880)
(def _GL_POST_CONVOLUTION_RED_BIAS 32800)
(def _GL_CURRENT_RASTER_SECONDARY_COLOR 33887)
(def _GL_PROJECTION 5889)
(def _GLUT_VIDEO_RESIZE_WIDTH 908)
(def _GL_UNSIGNED_SHORT_5_5_5_1 32820)
(def _GL_BLEND_EQUATION_ALPHA 34877)
(def _GLU_TESS_WINDING_NONZERO 100131)
(def _GL_RGB32UI_EXT 36209)
(def _GL_TEXTURE0_ARB 33984)
(def _GLU_NURBS_ERROR30 100280)
(def _GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_EXT 35983)
(def _GL_ACTIVE_ATTRIBUTE_MAX_LENGTH 35722)
(def _GL_RGB4 32847)
(def _GLU_EDGE_FLAG 100104)
(def _GL_COLOR_ARRAY_SIZE 32897)
(def _GL_ARB_fragment_shader 1)
(def _GLUT_OVERLAY 1)
(def _GL_TEXTURE16_ARB 34000)
(def _GL_DOT_PRODUCT_PASS_THROUGH_NV 34907)
(def _GL_LO_BIAS_NV 34581)
(def _GL_OPERAND4_RGB 34196)
(def _GL_VERTEX_ATTRIB_MAP1_DOMAIN_APPLE 35333)
(def _GLU_CCW 100121)
(def _GL_BLEND_EQUATION_EXT 32777)
(def _GL_ACTIVE_UNIFORMS 35718)
(def _GL_COLOR_INDEX16_EXT 32999)
(def _GL_LUMINANCE 6409)
(def _GL_DEPTH_WRITEMASK 2930)
(def _GL_VERTEX_ATTRIB_ARRAY_NORMALIZED 34922)
(def _GL_SPECULAR 4610)
(def _GLU_NURBS_VERTEX 100165)
(def _GL_NORMAL_MAP_NV 34065)
(def _GL_PROGRAM_FORMAT_ARB 34934)
(def _GL_SAMPLER_2D_ARB 35678)
(def _GL_MAX_PN_TRIANGLES_TESSELATION_LEVEL_ATI 24721)
(def _GLU_NURBS_ERROR7 100257)
(def _GL_RENDERBUFFER_RED_SIZE_EXT 36176)
(def _GL_POST_COLOR_MATRIX_BLUE_BIAS 32954)
(def _GL_POINT_DISTANCE_ATTENUATION 33065)
(def _GL_DSDT8_NV 34569)
(def _GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_SCALE_NV 34899)
(def _GL_FOG_COORD_ARRAY_BUFFER_BINDING 34973)
(def _GLUT_WINDOW_ALPHA_SIZE 110)
(def _GL_NV_vertex_program2_option 1)
(def _GL_COLOR_ATTACHMENT12_EXT 36076)
(def _GL_POLYGON_MODE 2880)
(def _GL_OPERAND0_RGB_ARB 34192)
(def _GL_POST_CONVOLUTION_GREEN_BIAS 32801)
(def _GL_NV_fog_distance 1)
(def _GL_INDEX_BITS 3409)
(def _GL_FRAGMENT_SHADER_DERIVATIVE_HINT 35723)
(def _GLUT_WINDOW_PARENT 117)
(def _GL_NAND 5390)
(def _GL_TEXTURE_COMPRESSION_HINT 34031)
(def _GLU_TESS_COMBINE 100105)
(def _GL_LIGHT_MODEL_TWO_SIDE 2898)
(def _GL_APPLE_float_pixels 1)
(def _GL_GEOMETRY_OUTPUT_TYPE_EXT 36316)
(def _GL_READ_BUFFER 3074)
(def _GL_RGB32I_EXT 36227)
(def _GL_PIXEL_MAP_R_TO_R 3190)
(def _GLUT_DEPTH 16)
(def _GLUT_CURSOR_INHERIT 100)
(def _GL_SAMPLER_CUBE 35680)
(def _GL_SIGNED_RGBA_NV 34555)
(def _GL_FOG_HINT 3156)
(def _GL_SLUMINANCE8_EXT 35911)
(def _GLU_OBJECT_PATH_LENGTH_EXT 100209)
(def _GL_MAX_BINDABLE_UNIFORM_SIZE_EXT 36333)
(def _GLU_NURBS_ERROR11 100261)
(def _GL_PIXEL_MAP_S_TO_S 3185)
(def _GL_PN_TRIANGLES_ATIX 24720)
(def _GL_ALPHA_FLOAT32_APPLE 34838)
(def _GL_BLUE_BIAS 3355)
(def _GL_OPERAND1_ALPHA 34201)
(def _GL_COLOR_ATTACHMENT2_EXT 36066)
(def _GL_GREEN_SCALE 3352)
(def _GL_UNSIGNED_INT_2_10_10_10_REV 33640)
(def _GL_TEXTURE_MAX_LEVEL 33085)
(def _GLU_NURBS_ERROR14 100264)
(def _GL_BUFFER_MAPPED 35004)
(def _GL_ARB_window_pos 1)
(def _GL_SRC2_ALPHA 34186)
(def __GNUC_PATCHLEVEL__ 1)
(def _GL_SGI_color_matrix 1)
(def _GLU_NURBS_END_EXT 100169)
(def _GL_INDEX_ARRAY_STRIDE 32902)
(def _GL_INCR_WRAP_EXT 34055)
(def _GL_FOG_COORDINATE_ARRAY 33879)
(def _GL_TEXTURE2 33986)
(def _GL_COLOR_MATERIAL_FACE 2901)
(def _GL_LOAD 257)
(def _GL_HISTOGRAM_FORMAT 32807)
(def _GL_WEIGHT_ARRAY_SIZE_ARB 34475)
(def _GL_ALPHA16UI_EXT 36216)
(def _GL_MAX_PROGRAM_MATRICES_ARB 34351)
(def _GLUT_CURSOR_TOP_RIGHT_CORNER 17)
(def _GL_ALPHA16I_EXT 36234)
(def _GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT 36050)
(def _GLU_INCOMPATIBLE_GL_VERSION 100903)
(def _GLU_TESS_ERROR5 100155)
(def _GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING_ARB 34973)
(def _OBJC_NEW_PROPERTIES 1)
(def _GL_ELEMENT_ARRAY_BUFFER_BINDING_ARB 34965)
(def _GL_WRITE_ONLY 35001)
(def _GL_DT_BIAS_NV 34583)
(def _GL_INTENSITY12 32844)
(def _GL_MATRIX29_ARB 35037)
(def _GL_COMPRESSED_LUMINANCE_ALPHA 34027)
(def _GL_BLEND_DST_RGB_EXT 32968)
(def _GL_DECAL 8449)
(def _GL_BUFFER_MAP_POINTER_ARB 35005)
(def _GL_COMBINER_MUX_SUM_NV 34119)
(def _GLUT_TRANSPARENT_INDEX 803)
(def _GLU_OUTLINE_POLYGON 100240)
(def _GL_POINTS 0)
(def _GL_DRAW_BUFFER2 34855)
(def _GL_SAMPLER_CUBE_ARB 35680)
(def _GL_MAX_PROGRAM_NATIVE_INSTRUCTIONS_ARB 34979)
(def _GLUT_WINDOW_COLORMAP_SIZE 119)
(def __CHAR_BIT__ 8)
(def __ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__ 1058)
(def _GL_PROGRAM_STRING_ARB 34344)
(def _GL_ARB_pixel_buffer_object 1)
(def _GL_SAMPLE_BUFFERS 32936)
(def _GLUT_KEY_REPEAT_ON 1)
(def _GL_CONSTANT_COLOR1_NV 34091)
(def _GL_SHADING_LANGUAGE_VERSION_ARB 35724)
(def _GLU_NURBS_ERROR21 100271)
(def _GL_VERTEX_ARRAY_BUFFER_BINDING 34966)
(def _GL_COMPRESSED_SRGB_EXT 35912)
(def _GL_EXT_texture_compression_dxt1 1)
(def _GL_EXT_blend_func_separate 1)
(def _GL_TEXTURE_HI_SIZE_NV 34587)
(def _GL_UNSIGNED_INT_SAMPLER_2D_RECT_EXT 36309)
(def _GL_QUERY_RESULT 34918)
(def _GL_COORD_REPLACE_ARB 34914)
(def _GL_SPOT_EXPONENT 4613)
(def _GL_COLOR 6144)
(def _GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT 36052)
(def _GL_TEXTURE23 34007)
(def _GL_COMPRESSED_SLUMINANCE_ALPHA 35915)
(def _GL_FLOAT_MAT2x3 35685)
(def _GL_ARB_shadow 1)
(def _GL_VALIDATE_STATUS 35715)
(def _GL_CURRENT_FOG_COORDINATE_EXT 33875)
(def _GL_EXPAND_NORMAL_NV 34104)
(def _GL_SIGNED_IDENTITY_NV 34108)
(def _GL_MIRRORED_REPEAT_ARB 33648)
(def _GL_BUFFER_SERIALIZED_MODIFY_APPLE 35346)
(def _GL_MIN_PBUFFER_VIEWPORT_DIMS_APPLE 35344)
(def _GL_RGBA12 32858)
(def _GL_COLOR_INDEX4_EXT 32996)
(def _GL_PN_TRIANGLES_POINT_MODE_CUBIC_ATIX 24726)
(def _GL_AUX2 1035)
(def _GLU_NURBS_TEXTURE_COORD_DATA 100174)
(def _GL_ATI_pn_triangles 1)
(def _GL_COMPRESSED_TEXTURE_FORMATS_ARB 34467)
(def _GL_COMPRESSED_INTENSITY_ARB 34028)
(def _GL_COMBINER_SCALE_NV 34120)
(def _GL_SELECTION_BUFFER_POINTER 3571)
(def _GL_MAX_GEOMETRY_OUTPUT_VERTICES_EXT 36320)
(def _GLU_PARAMETRIC_TOLERANCE 100202)
